
rvm4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003a  00800100  00000c0c  00000c80  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c0c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000cba  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d18  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000090  00000000  00000000  00000d58  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000013f0  00000000  00000000  00000de8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000087f  00000000  00000000  000021d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000790  00000000  00000000  00002a57  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001c8  00000000  00000000  000031e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000501  00000000  00000000  000033b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000c41  00000000  00000000  000038b1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000080  00000000  00000000  000044f2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec e0       	ldi	r30, 0x0C	; 12
  7c:	fc e0       	ldi	r31, 0x0C	; 12
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 33       	cpi	r26, 0x3A	; 58
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	aa e3       	ldi	r26, 0x3A	; 58
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	aa 33       	cpi	r26, 0x3A	; 58
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 95 02 	call	0x52a	; 0x52a <main>
  9e:	0c 94 04 06 	jmp	0xc08	; 0xc08 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <spi_init>:
		{
			status = ERROR;
		}
	}
	return status;
}
  a6:	8c e2       	ldi	r24, 0x2C	; 44
  a8:	84 b9       	out	0x04, r24	; 4
  aa:	81 e5       	ldi	r24, 0x51	; 81
  ac:	8c bd       	out	0x2c, r24	; 44
  ae:	08 95       	ret

000000b0 <spi_transmit>:
  b0:	8e bd       	out	0x2e, r24	; 46
  b2:	0d b4       	in	r0, 0x2d	; 45
  b4:	07 fe       	sbrs	r0, 7
  b6:	fd cf       	rjmp	.-6      	; 0xb2 <spi_transmit+0x2>
  b8:	8e b5       	in	r24, 0x2e	; 46
  ba:	08 95       	ret

000000bc <LCD_Command>:
  bc:	9b b1       	in	r25, 0x0b	; 11
  be:	9f 70       	andi	r25, 0x0F	; 15
  c0:	28 2f       	mov	r18, r24
  c2:	20 7f       	andi	r18, 0xF0	; 240
  c4:	92 2b       	or	r25, r18
  c6:	9b b9       	out	0x0b, r25	; 11
  c8:	58 98       	cbi	0x0b, 0	; 11
  ca:	59 9a       	sbi	0x0b, 1	; 11
  cc:	35 e0       	ldi	r19, 0x05	; 5
  ce:	3a 95       	dec	r19
  d0:	f1 f7       	brne	.-4      	; 0xce <LCD_Command+0x12>
  d2:	00 00       	nop
  d4:	59 98       	cbi	0x0b, 1	; 11
  d6:	ef e8       	ldi	r30, 0x8F	; 143
  d8:	f1 e0       	ldi	r31, 0x01	; 1
  da:	31 97       	sbiw	r30, 0x01	; 1
  dc:	f1 f7       	brne	.-4      	; 0xda <LCD_Command+0x1e>
  de:	00 c0       	rjmp	.+0      	; 0xe0 <LCD_Command+0x24>
  e0:	00 00       	nop
  e2:	2b b1       	in	r18, 0x0b	; 11
  e4:	2f 70       	andi	r18, 0x0F	; 15
  e6:	f0 e1       	ldi	r31, 0x10	; 16
  e8:	8f 9f       	mul	r24, r31
  ea:	c0 01       	movw	r24, r0
  ec:	11 24       	eor	r1, r1
  ee:	82 2b       	or	r24, r18
  f0:	8b b9       	out	0x0b, r24	; 11
  f2:	59 9a       	sbi	0x0b, 1	; 11
  f4:	35 e0       	ldi	r19, 0x05	; 5
  f6:	3a 95       	dec	r19
  f8:	f1 f7       	brne	.-4      	; 0xf6 <LCD_Command+0x3a>
  fa:	00 00       	nop
  fc:	59 98       	cbi	0x0b, 1	; 11
  fe:	8f e9       	ldi	r24, 0x9F	; 159
 100:	9f e0       	ldi	r25, 0x0F	; 15
 102:	01 97       	sbiw	r24, 0x01	; 1
 104:	f1 f7       	brne	.-4      	; 0x102 <LCD_Command+0x46>
 106:	00 c0       	rjmp	.+0      	; 0x108 <LCD_Command+0x4c>
 108:	00 00       	nop
 10a:	08 95       	ret

0000010c <LCD_Data>:
 10c:	9b b1       	in	r25, 0x0b	; 11
 10e:	9f 70       	andi	r25, 0x0F	; 15
 110:	28 2f       	mov	r18, r24
 112:	20 7f       	andi	r18, 0xF0	; 240
 114:	92 2b       	or	r25, r18
 116:	9b b9       	out	0x0b, r25	; 11
 118:	58 9a       	sbi	0x0b, 0	; 11
 11a:	59 9a       	sbi	0x0b, 1	; 11
 11c:	ef e8       	ldi	r30, 0x8F	; 143
 11e:	f1 e0       	ldi	r31, 0x01	; 1
 120:	31 97       	sbiw	r30, 0x01	; 1
 122:	f1 f7       	brne	.-4      	; 0x120 <LCD_Data+0x14>
 124:	00 c0       	rjmp	.+0      	; 0x126 <LCD_Data+0x1a>
 126:	00 00       	nop
 128:	59 98       	cbi	0x0b, 1	; 11
 12a:	ef e8       	ldi	r30, 0x8F	; 143
 12c:	f1 e0       	ldi	r31, 0x01	; 1
 12e:	31 97       	sbiw	r30, 0x01	; 1
 130:	f1 f7       	brne	.-4      	; 0x12e <LCD_Data+0x22>
 132:	00 c0       	rjmp	.+0      	; 0x134 <LCD_Data+0x28>
 134:	00 00       	nop
 136:	2b b1       	in	r18, 0x0b	; 11
 138:	2f 70       	andi	r18, 0x0F	; 15
 13a:	f0 e1       	ldi	r31, 0x10	; 16
 13c:	8f 9f       	mul	r24, r31
 13e:	c0 01       	movw	r24, r0
 140:	11 24       	eor	r1, r1
 142:	82 2b       	or	r24, r18
 144:	8b b9       	out	0x0b, r24	; 11
 146:	59 9a       	sbi	0x0b, 1	; 11
 148:	8f e8       	ldi	r24, 0x8F	; 143
 14a:	91 e0       	ldi	r25, 0x01	; 1
 14c:	01 97       	sbiw	r24, 0x01	; 1
 14e:	f1 f7       	brne	.-4      	; 0x14c <LCD_Data+0x40>
 150:	00 c0       	rjmp	.+0      	; 0x152 <LCD_Data+0x46>
 152:	00 00       	nop
 154:	59 98       	cbi	0x0b, 1	; 11
 156:	ef e9       	ldi	r30, 0x9F	; 159
 158:	ff e0       	ldi	r31, 0x0F	; 15
 15a:	31 97       	sbiw	r30, 0x01	; 1
 15c:	f1 f7       	brne	.-4      	; 0x15a <LCD_Data+0x4e>
 15e:	00 c0       	rjmp	.+0      	; 0x160 <LCD_Data+0x54>
 160:	00 00       	nop
 162:	08 95       	ret

00000164 <LCD_Init>:
 164:	8f ef       	ldi	r24, 0xFF	; 255
 166:	8a b9       	out	0x0a, r24	; 10
 168:	2f ef       	ldi	r18, 0xFF	; 255
 16a:	89 ef       	ldi	r24, 0xF9	; 249
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	21 50       	subi	r18, 0x01	; 1
 170:	80 40       	sbci	r24, 0x00	; 0
 172:	90 40       	sbci	r25, 0x00	; 0
 174:	e1 f7       	brne	.-8      	; 0x16e <LCD_Init+0xa>
 176:	00 c0       	rjmp	.+0      	; 0x178 <LCD_Init+0x14>
 178:	00 00       	nop
 17a:	82 e0       	ldi	r24, 0x02	; 2
 17c:	0e 94 5e 00 	call	0xbc	; 0xbc <LCD_Command>
 180:	88 e2       	ldi	r24, 0x28	; 40
 182:	0e 94 5e 00 	call	0xbc	; 0xbc <LCD_Command>
 186:	8f e0       	ldi	r24, 0x0F	; 15
 188:	0e 94 5e 00 	call	0xbc	; 0xbc <LCD_Command>
 18c:	86 e0       	ldi	r24, 0x06	; 6
 18e:	0e 94 5e 00 	call	0xbc	; 0xbc <LCD_Command>
 192:	81 e0       	ldi	r24, 0x01	; 1
 194:	0e 94 5e 00 	call	0xbc	; 0xbc <LCD_Command>
 198:	8f e9       	ldi	r24, 0x9F	; 159
 19a:	9f e0       	ldi	r25, 0x0F	; 15
 19c:	01 97       	sbiw	r24, 0x01	; 1
 19e:	f1 f7       	brne	.-4      	; 0x19c <LCD_Init+0x38>
 1a0:	00 c0       	rjmp	.+0      	; 0x1a2 <LCD_Init+0x3e>
 1a2:	00 00       	nop
 1a4:	08 95       	ret

000001a6 <LCD_String>:
 1a6:	cf 93       	push	r28
 1a8:	df 93       	push	r29
 1aa:	ec 01       	movw	r28, r24
 1ac:	88 81       	ld	r24, Y
 1ae:	88 23       	and	r24, r24
 1b0:	31 f0       	breq	.+12     	; 0x1be <LCD_String+0x18>
 1b2:	21 96       	adiw	r28, 0x01	; 1
 1b4:	0e 94 86 00 	call	0x10c	; 0x10c <LCD_Data>
 1b8:	89 91       	ld	r24, Y+
 1ba:	81 11       	cpse	r24, r1
 1bc:	fb cf       	rjmp	.-10     	; 0x1b4 <LCD_String+0xe>
 1be:	df 91       	pop	r29
 1c0:	cf 91       	pop	r28
 1c2:	08 95       	ret

000001c4 <LCD_Clear>:
 1c4:	81 e0       	ldi	r24, 0x01	; 1
 1c6:	0e 94 5e 00 	call	0xbc	; 0xbc <LCD_Command>
 1ca:	8f e9       	ldi	r24, 0x9F	; 159
 1cc:	9f e0       	ldi	r25, 0x0F	; 15
 1ce:	01 97       	sbiw	r24, 0x01	; 1
 1d0:	f1 f7       	brne	.-4      	; 0x1ce <LCD_Clear+0xa>
 1d2:	00 c0       	rjmp	.+0      	; 0x1d4 <LCD_Clear+0x10>
 1d4:	00 00       	nop
 1d6:	80 e8       	ldi	r24, 0x80	; 128
 1d8:	0e 94 5e 00 	call	0xbc	; 0xbc <LCD_Command>
 1dc:	08 95       	ret

000001de <mfrc522_write>:
 1de:	cf 93       	push	r28
 1e0:	c6 2f       	mov	r28, r22
 1e2:	2a 98       	cbi	0x05, 2	; 5
 1e4:	88 0f       	add	r24, r24
 1e6:	8e 77       	andi	r24, 0x7E	; 126
 1e8:	0e 94 58 00 	call	0xb0	; 0xb0 <spi_transmit>
 1ec:	8c 2f       	mov	r24, r28
 1ee:	0e 94 58 00 	call	0xb0	; 0xb0 <spi_transmit>
 1f2:	2a 9a       	sbi	0x05, 2	; 5
 1f4:	cf 91       	pop	r28
 1f6:	08 95       	ret

000001f8 <mfrc522_read>:
 1f8:	2a 98       	cbi	0x05, 2	; 5
 1fa:	88 0f       	add	r24, r24
 1fc:	8e 77       	andi	r24, 0x7E	; 126
 1fe:	80 68       	ori	r24, 0x80	; 128
 200:	0e 94 58 00 	call	0xb0	; 0xb0 <spi_transmit>
 204:	80 e0       	ldi	r24, 0x00	; 0
 206:	0e 94 58 00 	call	0xb0	; 0xb0 <spi_transmit>
 20a:	2a 9a       	sbi	0x05, 2	; 5
 20c:	08 95       	ret

0000020e <mfrc522_reset>:
 20e:	6f e0       	ldi	r22, 0x0F	; 15
 210:	81 e0       	ldi	r24, 0x01	; 1
 212:	0e 94 ef 00 	call	0x1de	; 0x1de <mfrc522_write>
 216:	08 95       	ret

00000218 <mfrc522_init>:
 218:	0e 94 07 01 	call	0x20e	; 0x20e <mfrc522_reset>
 21c:	6d e8       	ldi	r22, 0x8D	; 141
 21e:	8a e2       	ldi	r24, 0x2A	; 42
 220:	0e 94 ef 00 	call	0x1de	; 0x1de <mfrc522_write>
 224:	6e e3       	ldi	r22, 0x3E	; 62
 226:	8b e2       	ldi	r24, 0x2B	; 43
 228:	0e 94 ef 00 	call	0x1de	; 0x1de <mfrc522_write>
 22c:	6e e1       	ldi	r22, 0x1E	; 30
 22e:	8c e2       	ldi	r24, 0x2C	; 44
 230:	0e 94 ef 00 	call	0x1de	; 0x1de <mfrc522_write>
 234:	60 e0       	ldi	r22, 0x00	; 0
 236:	8d e2       	ldi	r24, 0x2D	; 45
 238:	0e 94 ef 00 	call	0x1de	; 0x1de <mfrc522_write>
 23c:	60 e4       	ldi	r22, 0x40	; 64
 23e:	85 e1       	ldi	r24, 0x15	; 21
 240:	0e 94 ef 00 	call	0x1de	; 0x1de <mfrc522_write>
 244:	6d e3       	ldi	r22, 0x3D	; 61
 246:	81 e1       	ldi	r24, 0x11	; 17
 248:	0e 94 ef 00 	call	0x1de	; 0x1de <mfrc522_write>
 24c:	84 e1       	ldi	r24, 0x14	; 20
 24e:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <mfrc522_read>
 252:	98 2f       	mov	r25, r24
 254:	93 70       	andi	r25, 0x03	; 3
 256:	29 f4       	brne	.+10     	; 0x262 <mfrc522_init+0x4a>
 258:	68 2f       	mov	r22, r24
 25a:	63 60       	ori	r22, 0x03	; 3
 25c:	84 e1       	ldi	r24, 0x14	; 20
 25e:	0e 94 ef 00 	call	0x1de	; 0x1de <mfrc522_write>
 262:	08 95       	ret

00000264 <mfrc522_to_card>:
 264:	3f 92       	push	r3
 266:	4f 92       	push	r4
 268:	5f 92       	push	r5
 26a:	6f 92       	push	r6
 26c:	7f 92       	push	r7
 26e:	8f 92       	push	r8
 270:	9f 92       	push	r9
 272:	af 92       	push	r10
 274:	bf 92       	push	r11
 276:	cf 92       	push	r12
 278:	df 92       	push	r13
 27a:	ef 92       	push	r14
 27c:	ff 92       	push	r15
 27e:	0f 93       	push	r16
 280:	1f 93       	push	r17
 282:	cf 93       	push	r28
 284:	df 93       	push	r29
 286:	98 2e       	mov	r9, r24
 288:	f6 2e       	mov	r15, r22
 28a:	e7 2e       	mov	r14, r23
 28c:	44 2e       	mov	r4, r20
 28e:	82 2e       	mov	r8, r18
 290:	33 2e       	mov	r3, r19
 292:	58 01       	movw	r10, r16
 294:	8c e0       	ldi	r24, 0x0C	; 12
 296:	98 16       	cp	r9, r24
 298:	09 f4       	brne	.+2      	; 0x29c <mfrc522_to_card+0x38>
 29a:	c9 c0       	rjmp	.+402    	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 29c:	ee e0       	ldi	r30, 0x0E	; 14
 29e:	9e 12       	cpse	r9, r30
 2a0:	03 c0       	rjmp	.+6      	; 0x2a8 <mfrc522_to_card+0x44>
 2a2:	10 e1       	ldi	r17, 0x10	; 16
 2a4:	02 e1       	ldi	r16, 0x12	; 18
 2a6:	02 c0       	rjmp	.+4      	; 0x2ac <mfrc522_to_card+0x48>
 2a8:	10 e0       	ldi	r17, 0x00	; 0
 2aa:	00 e0       	ldi	r16, 0x00	; 0
 2ac:	84 e0       	ldi	r24, 0x04	; 4
 2ae:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <mfrc522_read>
 2b2:	68 2f       	mov	r22, r24
 2b4:	6f 77       	andi	r22, 0x7F	; 127
 2b6:	84 e0       	ldi	r24, 0x04	; 4
 2b8:	0e 94 ef 00 	call	0x1de	; 0x1de <mfrc522_write>
 2bc:	8a e0       	ldi	r24, 0x0A	; 10
 2be:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <mfrc522_read>
 2c2:	68 2f       	mov	r22, r24
 2c4:	60 68       	ori	r22, 0x80	; 128
 2c6:	8a e0       	ldi	r24, 0x0A	; 10
 2c8:	0e 94 ef 00 	call	0x1de	; 0x1de <mfrc522_write>
 2cc:	60 e0       	ldi	r22, 0x00	; 0
 2ce:	81 e0       	ldi	r24, 0x01	; 1
 2d0:	0e 94 ef 00 	call	0x1de	; 0x1de <mfrc522_write>
 2d4:	51 2c       	mov	r5, r1
 2d6:	61 2c       	mov	r6, r1
 2d8:	71 2c       	mov	r7, r1
 2da:	41 14       	cp	r4, r1
 2dc:	51 04       	cpc	r5, r1
 2de:	61 04       	cpc	r6, r1
 2e0:	71 04       	cpc	r7, r1
 2e2:	19 f4       	brne	.+6      	; 0x2ea <mfrc522_to_card+0x86>
 2e4:	15 c0       	rjmp	.+42     	; 0x310 <mfrc522_to_card+0xac>
 2e6:	10 e3       	ldi	r17, 0x30	; 48
 2e8:	07 e7       	ldi	r16, 0x77	; 119
 2ea:	cf 2d       	mov	r28, r15
 2ec:	de 2d       	mov	r29, r14
 2ee:	c1 2c       	mov	r12, r1
 2f0:	d1 2c       	mov	r13, r1
 2f2:	76 01       	movw	r14, r12
 2f4:	69 91       	ld	r22, Y+
 2f6:	89 e0       	ldi	r24, 0x09	; 9
 2f8:	0e 94 ef 00 	call	0x1de	; 0x1de <mfrc522_write>
 2fc:	ff ef       	ldi	r31, 0xFF	; 255
 2fe:	cf 1a       	sub	r12, r31
 300:	df 0a       	sbc	r13, r31
 302:	ef 0a       	sbc	r14, r31
 304:	ff 0a       	sbc	r15, r31
 306:	c4 14       	cp	r12, r4
 308:	d5 04       	cpc	r13, r5
 30a:	e6 04       	cpc	r14, r6
 30c:	f7 04       	cpc	r15, r7
 30e:	90 f3       	brcs	.-28     	; 0x2f4 <mfrc522_to_card+0x90>
 310:	69 2d       	mov	r22, r9
 312:	81 e0       	ldi	r24, 0x01	; 1
 314:	0e 94 ef 00 	call	0x1de	; 0x1de <mfrc522_write>
 318:	8c e0       	ldi	r24, 0x0C	; 12
 31a:	98 12       	cpse	r9, r24
 31c:	08 c0       	rjmp	.+16     	; 0x32e <mfrc522_to_card+0xca>
 31e:	8d e0       	ldi	r24, 0x0D	; 13
 320:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <mfrc522_read>
 324:	68 2f       	mov	r22, r24
 326:	60 68       	ori	r22, 0x80	; 128
 328:	8d e0       	ldi	r24, 0x0D	; 13
 32a:	0e 94 ef 00 	call	0x1de	; 0x1de <mfrc522_write>
 32e:	84 e0       	ldi	r24, 0x04	; 4
 330:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <mfrc522_read>
 334:	f8 2e       	mov	r15, r24
 336:	c0 e0       	ldi	r28, 0x00	; 0
 338:	d0 e0       	ldi	r29, 0x00	; 0
 33a:	11 60       	ori	r17, 0x01	; 1
 33c:	0a c0       	rjmp	.+20     	; 0x352 <mfrc522_to_card+0xee>
 33e:	84 e0       	ldi	r24, 0x04	; 4
 340:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <mfrc522_read>
 344:	f8 2e       	mov	r15, r24
 346:	21 96       	adiw	r28, 0x01	; 1
 348:	cf 3c       	cpi	r28, 0xCF	; 207
 34a:	e7 e0       	ldi	r30, 0x07	; 7
 34c:	de 07       	cpc	r29, r30
 34e:	09 f4       	brne	.+2      	; 0x352 <mfrc522_to_card+0xee>
 350:	8c c0       	rjmp	.+280    	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 352:	81 2f       	mov	r24, r17
 354:	8f 21       	and	r24, r15
 356:	99 f3       	breq	.-26     	; 0x33e <mfrc522_to_card+0xda>
 358:	92 c0       	rjmp	.+292    	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
 35a:	01 70       	andi	r16, 0x01	; 1
 35c:	f0 22       	and	r15, r16
 35e:	11 f0       	breq	.+4      	; 0x364 <mfrc522_to_card+0x100>
 360:	c2 e0       	ldi	r28, 0x02	; 2
 362:	01 c0       	rjmp	.+2      	; 0x366 <mfrc522_to_card+0x102>
 364:	c1 e0       	ldi	r28, 0x01	; 1
 366:	fc e0       	ldi	r31, 0x0C	; 12
 368:	9f 12       	cpse	r9, r31
 36a:	98 c0       	rjmp	.+304    	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 36c:	8a e0       	ldi	r24, 0x0A	; 10
 36e:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <mfrc522_read>
 372:	48 2e       	mov	r4, r24
 374:	8c e0       	ldi	r24, 0x0C	; 12
 376:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <mfrc522_read>
 37a:	28 2f       	mov	r18, r24
 37c:	27 70       	andi	r18, 0x07	; 7
 37e:	a9 f0       	breq	.+42     	; 0x3aa <mfrc522_to_card+0x146>
 380:	84 2d       	mov	r24, r4
 382:	90 e0       	ldi	r25, 0x00	; 0
 384:	01 97       	sbiw	r24, 0x01	; 1
 386:	88 0f       	add	r24, r24
 388:	99 1f       	adc	r25, r25
 38a:	88 0f       	add	r24, r24
 38c:	99 1f       	adc	r25, r25
 38e:	88 0f       	add	r24, r24
 390:	99 1f       	adc	r25, r25
 392:	82 0f       	add	r24, r18
 394:	91 1d       	adc	r25, r1
 396:	09 2e       	mov	r0, r25
 398:	00 0c       	add	r0, r0
 39a:	aa 0b       	sbc	r26, r26
 39c:	bb 0b       	sbc	r27, r27
 39e:	f5 01       	movw	r30, r10
 3a0:	80 83       	st	Z, r24
 3a2:	91 83       	std	Z+1, r25	; 0x01
 3a4:	a2 83       	std	Z+2, r26	; 0x02
 3a6:	b3 83       	std	Z+3, r27	; 0x03
 3a8:	11 c0       	rjmp	.+34     	; 0x3cc <mfrc522_to_card+0x168>
 3aa:	84 2d       	mov	r24, r4
 3ac:	90 e0       	ldi	r25, 0x00	; 0
 3ae:	88 0f       	add	r24, r24
 3b0:	99 1f       	adc	r25, r25
 3b2:	88 0f       	add	r24, r24
 3b4:	99 1f       	adc	r25, r25
 3b6:	88 0f       	add	r24, r24
 3b8:	99 1f       	adc	r25, r25
 3ba:	09 2e       	mov	r0, r25
 3bc:	00 0c       	add	r0, r0
 3be:	aa 0b       	sbc	r26, r26
 3c0:	bb 0b       	sbc	r27, r27
 3c2:	f5 01       	movw	r30, r10
 3c4:	80 83       	st	Z, r24
 3c6:	91 83       	std	Z+1, r25	; 0x01
 3c8:	a2 83       	std	Z+2, r26	; 0x02
 3ca:	b3 83       	std	Z+3, r27	; 0x03
 3cc:	44 20       	and	r4, r4
 3ce:	71 f0       	breq	.+28     	; 0x3ec <mfrc522_to_card+0x188>
 3d0:	84 2d       	mov	r24, r4
 3d2:	81 31       	cpi	r24, 0x11	; 17
 3d4:	08 f0       	brcs	.+2      	; 0x3d8 <mfrc522_to_card+0x174>
 3d6:	80 e1       	ldi	r24, 0x10	; 16
 3d8:	48 2e       	mov	r4, r24
 3da:	51 2c       	mov	r5, r1
 3dc:	61 2c       	mov	r6, r1
 3de:	71 2c       	mov	r7, r1
 3e0:	41 14       	cp	r4, r1
 3e2:	51 04       	cpc	r5, r1
 3e4:	61 04       	cpc	r6, r1
 3e6:	71 04       	cpc	r7, r1
 3e8:	29 f4       	brne	.+10     	; 0x3f4 <mfrc522_to_card+0x190>
 3ea:	58 c0       	rjmp	.+176    	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 3ec:	41 2c       	mov	r4, r1
 3ee:	51 2c       	mov	r5, r1
 3f0:	32 01       	movw	r6, r4
 3f2:	43 94       	inc	r4
 3f4:	08 2d       	mov	r16, r8
 3f6:	13 2d       	mov	r17, r3
 3f8:	c1 2c       	mov	r12, r1
 3fa:	d1 2c       	mov	r13, r1
 3fc:	76 01       	movw	r14, r12
 3fe:	89 e0       	ldi	r24, 0x09	; 9
 400:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <mfrc522_read>
 404:	f8 01       	movw	r30, r16
 406:	81 93       	st	Z+, r24
 408:	8f 01       	movw	r16, r30
 40a:	ff ef       	ldi	r31, 0xFF	; 255
 40c:	cf 1a       	sub	r12, r31
 40e:	df 0a       	sbc	r13, r31
 410:	ef 0a       	sbc	r14, r31
 412:	ff 0a       	sbc	r15, r31
 414:	c4 14       	cp	r12, r4
 416:	d5 04       	cpc	r13, r5
 418:	e6 04       	cpc	r14, r6
 41a:	f7 04       	cpc	r15, r7
 41c:	80 f3       	brcs	.-32     	; 0x3fe <mfrc522_to_card+0x19a>
 41e:	3e c0       	rjmp	.+124    	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 420:	6c e0       	ldi	r22, 0x0C	; 12
 422:	81 e0       	ldi	r24, 0x01	; 1
 424:	0e 94 ef 00 	call	0x1de	; 0x1de <mfrc522_write>
 428:	10 e3       	ldi	r17, 0x30	; 48
 42a:	07 e7       	ldi	r16, 0x77	; 119
 42c:	78 cf       	rjmp	.-272    	; 0x31e <mfrc522_to_card+0xba>
 42e:	84 e0       	ldi	r24, 0x04	; 4
 430:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <mfrc522_read>
 434:	68 2f       	mov	r22, r24
 436:	6f 77       	andi	r22, 0x7F	; 127
 438:	84 e0       	ldi	r24, 0x04	; 4
 43a:	0e 94 ef 00 	call	0x1de	; 0x1de <mfrc522_write>
 43e:	8a e0       	ldi	r24, 0x0A	; 10
 440:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <mfrc522_read>
 444:	68 2f       	mov	r22, r24
 446:	60 68       	ori	r22, 0x80	; 128
 448:	8a e0       	ldi	r24, 0x0A	; 10
 44a:	0e 94 ef 00 	call	0x1de	; 0x1de <mfrc522_write>
 44e:	60 e0       	ldi	r22, 0x00	; 0
 450:	81 e0       	ldi	r24, 0x01	; 1
 452:	0e 94 ef 00 	call	0x1de	; 0x1de <mfrc522_write>
 456:	51 2c       	mov	r5, r1
 458:	61 2c       	mov	r6, r1
 45a:	71 2c       	mov	r7, r1
 45c:	41 14       	cp	r4, r1
 45e:	51 04       	cpc	r5, r1
 460:	61 04       	cpc	r6, r1
 462:	71 04       	cpc	r7, r1
 464:	09 f0       	breq	.+2      	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 466:	3f cf       	rjmp	.-386    	; 0x2e6 <mfrc522_to_card+0x82>
 468:	db cf       	rjmp	.-74     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 46a:	8d e0       	ldi	r24, 0x0D	; 13
 46c:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <mfrc522_read>
 470:	68 2f       	mov	r22, r24
 472:	6f 77       	andi	r22, 0x7F	; 127
 474:	8d e0       	ldi	r24, 0x0D	; 13
 476:	0e 94 ef 00 	call	0x1de	; 0x1de <mfrc522_write>
 47a:	c3 e0       	ldi	r28, 0x03	; 3
 47c:	0f c0       	rjmp	.+30     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 47e:	8d e0       	ldi	r24, 0x0D	; 13
 480:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <mfrc522_read>
 484:	68 2f       	mov	r22, r24
 486:	6f 77       	andi	r22, 0x7F	; 127
 488:	8d e0       	ldi	r24, 0x0D	; 13
 48a:	0e 94 ef 00 	call	0x1de	; 0x1de <mfrc522_write>
 48e:	86 e0       	ldi	r24, 0x06	; 6
 490:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <mfrc522_read>
 494:	8b 71       	andi	r24, 0x1B	; 27
 496:	09 f4       	brne	.+2      	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 498:	60 cf       	rjmp	.-320    	; 0x35a <mfrc522_to_card+0xf6>
 49a:	c3 e0       	ldi	r28, 0x03	; 3
 49c:	8c 2f       	mov	r24, r28
 49e:	df 91       	pop	r29
 4a0:	cf 91       	pop	r28
 4a2:	1f 91       	pop	r17
 4a4:	0f 91       	pop	r16
 4a6:	ff 90       	pop	r15
 4a8:	ef 90       	pop	r14
 4aa:	df 90       	pop	r13
 4ac:	cf 90       	pop	r12
 4ae:	bf 90       	pop	r11
 4b0:	af 90       	pop	r10
 4b2:	9f 90       	pop	r9
 4b4:	8f 90       	pop	r8
 4b6:	7f 90       	pop	r7
 4b8:	6f 90       	pop	r6
 4ba:	5f 90       	pop	r5
 4bc:	4f 90       	pop	r4
 4be:	3f 90       	pop	r3
 4c0:	08 95       	ret

000004c2 <mfrc522_request>:
 4c2:	ef 92       	push	r14
 4c4:	ff 92       	push	r15
 4c6:	0f 93       	push	r16
 4c8:	1f 93       	push	r17
 4ca:	cf 93       	push	r28
 4cc:	df 93       	push	r29
 4ce:	00 d0       	rcall	.+0      	; 0x4d0 <mfrc522_request+0xe>
 4d0:	00 d0       	rcall	.+0      	; 0x4d2 <mfrc522_request+0x10>
 4d2:	cd b7       	in	r28, 0x3d	; 61
 4d4:	de b7       	in	r29, 0x3e	; 62
 4d6:	18 2f       	mov	r17, r24
 4d8:	7b 01       	movw	r14, r22
 4da:	67 e0       	ldi	r22, 0x07	; 7
 4dc:	8d e0       	ldi	r24, 0x0D	; 13
 4de:	0e 94 ef 00 	call	0x1de	; 0x1de <mfrc522_write>
 4e2:	f7 01       	movw	r30, r14
 4e4:	10 83       	st	Z, r17
 4e6:	8e 01       	movw	r16, r28
 4e8:	0f 5f       	subi	r16, 0xFF	; 255
 4ea:	1f 4f       	sbci	r17, 0xFF	; 255
 4ec:	97 01       	movw	r18, r14
 4ee:	41 e0       	ldi	r20, 0x01	; 1
 4f0:	b7 01       	movw	r22, r14
 4f2:	8c e0       	ldi	r24, 0x0C	; 12
 4f4:	0e 94 32 01 	call	0x264	; 0x264 <mfrc522_to_card>
 4f8:	81 30       	cpi	r24, 0x01	; 1
 4fa:	59 f4       	brne	.+22     	; 0x512 <mfrc522_request+0x50>
 4fc:	49 81       	ldd	r20, Y+1	; 0x01
 4fe:	5a 81       	ldd	r21, Y+2	; 0x02
 500:	6b 81       	ldd	r22, Y+3	; 0x03
 502:	7c 81       	ldd	r23, Y+4	; 0x04
 504:	40 31       	cpi	r20, 0x10	; 16
 506:	51 05       	cpc	r21, r1
 508:	61 05       	cpc	r22, r1
 50a:	71 05       	cpc	r23, r1
 50c:	19 f0       	breq	.+6      	; 0x514 <mfrc522_request+0x52>
 50e:	83 e0       	ldi	r24, 0x03	; 3
 510:	01 c0       	rjmp	.+2      	; 0x514 <mfrc522_request+0x52>
 512:	83 e0       	ldi	r24, 0x03	; 3
 514:	0f 90       	pop	r0
 516:	0f 90       	pop	r0
 518:	0f 90       	pop	r0
 51a:	0f 90       	pop	r0
 51c:	df 91       	pop	r29
 51e:	cf 91       	pop	r28
 520:	1f 91       	pop	r17
 522:	0f 91       	pop	r16
 524:	ff 90       	pop	r15
 526:	ef 90       	pop	r14
 528:	08 95       	ret

0000052a <main>:

///////////////////////////////////////////////////////////////////////////
uint8_t SelfTestBuffer[64];

int main(void)
{
 52a:	cf 93       	push	r28
 52c:	df 93       	push	r29
 52e:	cd b7       	in	r28, 0x3d	; 61
 530:	de b7       	in	r29, 0x3e	; 62
 532:	65 97       	sbiw	r28, 0x15	; 21
 534:	0f b6       	in	r0, 0x3f	; 63
 536:	f8 94       	cli
 538:	de bf       	out	0x3e, r29	; 62
 53a:	0f be       	out	0x3f, r0	; 63
 53c:	cd bf       	out	0x3d, r28	; 61
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 53e:	2f ef       	ldi	r18, 0xFF	; 255
 540:	80 e7       	ldi	r24, 0x70	; 112
 542:	92 e0       	ldi	r25, 0x02	; 2
 544:	21 50       	subi	r18, 0x01	; 1
 546:	80 40       	sbci	r24, 0x00	; 0
 548:	90 40       	sbci	r25, 0x00	; 0
 54a:	e1 f7       	brne	.-8      	; 0x544 <main+0x1a>
 54c:	00 c0       	rjmp	.+0      	; 0x54e <main+0x24>
 54e:	00 00       	nop
	uint8_t byte;
	uint8_t str[MAX_LEN];
	char buffer[5];
	_delay_ms(50);
	
    spi_init();
 550:	0e 94 53 00 	call	0xa6	; 0xa6 <spi_init>
    mfrc522_init();
 554:	0e 94 0c 01 	call	0x218	; 0x218 <mfrc522_init>
	LCD_Init();
 558:	0e 94 b2 00 	call	0x164	; 0x164 <LCD_Init>
	
    while (1) 
    {
		byte = mfrc522_read(VersionReg);
 55c:	87 e3       	ldi	r24, 0x37	; 55
 55e:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <mfrc522_read>
		if(byte == 0x92)
 562:	82 39       	cpi	r24, 0x92	; 146
 564:	49 f4       	brne	.+18     	; 0x578 <main+0x4e>
		{
			LCD_String("MIFARE RC522v2");
 566:	80 e0       	ldi	r24, 0x00	; 0
 568:	91 e0       	ldi	r25, 0x01	; 1
 56a:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <LCD_String>
			LCD_String("Detected");
 56e:	8f e0       	ldi	r24, 0x0F	; 15
 570:	91 e0       	ldi	r25, 0x01	; 1
 572:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <LCD_String>
 576:	10 c0       	rjmp	.+32     	; 0x598 <main+0x6e>
		}else if(byte == 0x91 || byte==0x90)
 578:	80 59       	subi	r24, 0x90	; 144
 57a:	82 30       	cpi	r24, 0x02	; 2
 57c:	48 f4       	brcc	.+18     	; 0x590 <main+0x66>
		{
			LCD_String("MIFARE RC522v1");
 57e:	88 e1       	ldi	r24, 0x18	; 24
 580:	91 e0       	ldi	r25, 0x01	; 1
 582:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <LCD_String>
			LCD_String("Detected");
 586:	8f e0       	ldi	r24, 0x0F	; 15
 588:	91 e0       	ldi	r25, 0x01	; 1
 58a:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <LCD_String>
 58e:	04 c0       	rjmp	.+8      	; 0x598 <main+0x6e>
		}else
		{
			LCD_String("No reader found");
 590:	87 e2       	ldi	r24, 0x27	; 39
 592:	91 e0       	ldi	r25, 0x01	; 1
 594:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <LCD_String>
 598:	2f ef       	ldi	r18, 0xFF	; 255
 59a:	81 ee       	ldi	r24, 0xE1	; 225
 59c:	94 e0       	ldi	r25, 0x04	; 4
 59e:	21 50       	subi	r18, 0x01	; 1
 5a0:	80 40       	sbci	r24, 0x00	; 0
 5a2:	90 40       	sbci	r25, 0x00	; 0
 5a4:	e1 f7       	brne	.-8      	; 0x59e <main+0x74>
 5a6:	00 c0       	rjmp	.+0      	; 0x5a8 <main+0x7e>
 5a8:	00 00       	nop
		}
		_delay_ms(100);
		
		byte = mfrc522_read(ComIEnReg);
 5aa:	82 e0       	ldi	r24, 0x02	; 2
 5ac:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <mfrc522_read>
		mfrc522_write(ComIEnReg,byte|0x20);
 5b0:	68 2f       	mov	r22, r24
 5b2:	60 62       	ori	r22, 0x20	; 32
 5b4:	82 e0       	ldi	r24, 0x02	; 2
 5b6:	0e 94 ef 00 	call	0x1de	; 0x1de <mfrc522_write>
		byte = mfrc522_read(DivIEnReg);
 5ba:	83 e0       	ldi	r24, 0x03	; 3
 5bc:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <mfrc522_read>
		mfrc522_write(DivIEnReg,byte|0x80);
 5c0:	68 2f       	mov	r22, r24
 5c2:	60 68       	ori	r22, 0x80	; 128
 5c4:	83 e0       	ldi	r24, 0x03	; 3
 5c6:	0e 94 ef 00 	call	0x1de	; 0x1de <mfrc522_write>
 5ca:	2f ef       	ldi	r18, 0xFF	; 255
 5cc:	8d e3       	ldi	r24, 0x3D	; 61
 5ce:	99 e4       	ldi	r25, 0x49	; 73
 5d0:	21 50       	subi	r18, 0x01	; 1
 5d2:	80 40       	sbci	r24, 0x00	; 0
 5d4:	90 40       	sbci	r25, 0x00	; 0
 5d6:	e1 f7       	brne	.-8      	; 0x5d0 <main+0xa6>
 5d8:	00 c0       	rjmp	.+0      	; 0x5da <main+0xb0>
 5da:	00 00       	nop
		
		_delay_ms(1500);
		LCD_Clear();
 5dc:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <LCD_Clear>
		
		while(1){
			byte = mfrc522_request(PICC_REQALL,str);
			sprintf(buffer, "%u", byte);
 5e0:	0f 2e       	mov	r0, r31
 5e2:	f7 e3       	ldi	r31, 0x37	; 55
 5e4:	ef 2e       	mov	r14, r31
 5e6:	f1 e0       	ldi	r31, 0x01	; 1
 5e8:	ff 2e       	mov	r15, r31
 5ea:	f0 2d       	mov	r31, r0
 5ec:	8e 01       	movw	r16, r28
 5ee:	0f 5e       	subi	r16, 0xEF	; 239
 5f0:	1f 4f       	sbci	r17, 0xFF	; 255
		
		_delay_ms(1500);
		LCD_Clear();
		
		while(1){
			byte = mfrc522_request(PICC_REQALL,str);
 5f2:	be 01       	movw	r22, r28
 5f4:	6f 5f       	subi	r22, 0xFF	; 255
 5f6:	7f 4f       	sbci	r23, 0xFF	; 255
 5f8:	82 e5       	ldi	r24, 0x52	; 82
 5fa:	0e 94 61 02 	call	0x4c2	; 0x4c2 <mfrc522_request>
			sprintf(buffer, "%u", byte);
 5fe:	1f 92       	push	r1
 600:	8f 93       	push	r24
 602:	ff 92       	push	r15
 604:	ef 92       	push	r14
 606:	1f 93       	push	r17
 608:	0f 93       	push	r16
 60a:	0e 94 1a 03 	call	0x634	; 0x634 <sprintf>
			LCD_String(buffer);
 60e:	c8 01       	movw	r24, r16
 610:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <LCD_String>
 614:	2f ef       	ldi	r18, 0xFF	; 255
 616:	83 ed       	ldi	r24, 0xD3	; 211
 618:	90 e3       	ldi	r25, 0x30	; 48
 61a:	21 50       	subi	r18, 0x01	; 1
 61c:	80 40       	sbci	r24, 0x00	; 0
 61e:	90 40       	sbci	r25, 0x00	; 0
 620:	e1 f7       	brne	.-8      	; 0x61a <main+0xf0>
 622:	00 c0       	rjmp	.+0      	; 0x624 <main+0xfa>
 624:	00 00       	nop
 626:	0f 90       	pop	r0
 628:	0f 90       	pop	r0
 62a:	0f 90       	pop	r0
 62c:	0f 90       	pop	r0
 62e:	0f 90       	pop	r0
 630:	0f 90       	pop	r0
 632:	df cf       	rjmp	.-66     	; 0x5f2 <main+0xc8>

00000634 <sprintf>:
 634:	ae e0       	ldi	r26, 0x0E	; 14
 636:	b0 e0       	ldi	r27, 0x00	; 0
 638:	e0 e2       	ldi	r30, 0x20	; 32
 63a:	f3 e0       	ldi	r31, 0x03	; 3
 63c:	0c 94 db 05 	jmp	0xbb6	; 0xbb6 <__prologue_saves__+0x1c>
 640:	0d 89       	ldd	r16, Y+21	; 0x15
 642:	1e 89       	ldd	r17, Y+22	; 0x16
 644:	86 e0       	ldi	r24, 0x06	; 6
 646:	8c 83       	std	Y+4, r24	; 0x04
 648:	1a 83       	std	Y+2, r17	; 0x02
 64a:	09 83       	std	Y+1, r16	; 0x01
 64c:	8f ef       	ldi	r24, 0xFF	; 255
 64e:	9f e7       	ldi	r25, 0x7F	; 127
 650:	9e 83       	std	Y+6, r25	; 0x06
 652:	8d 83       	std	Y+5, r24	; 0x05
 654:	ae 01       	movw	r20, r28
 656:	47 5e       	subi	r20, 0xE7	; 231
 658:	5f 4f       	sbci	r21, 0xFF	; 255
 65a:	6f 89       	ldd	r22, Y+23	; 0x17
 65c:	78 8d       	ldd	r23, Y+24	; 0x18
 65e:	ce 01       	movw	r24, r28
 660:	01 96       	adiw	r24, 0x01	; 1
 662:	0e 94 3c 03 	call	0x678	; 0x678 <vfprintf>
 666:	ef 81       	ldd	r30, Y+7	; 0x07
 668:	f8 85       	ldd	r31, Y+8	; 0x08
 66a:	e0 0f       	add	r30, r16
 66c:	f1 1f       	adc	r31, r17
 66e:	10 82       	st	Z, r1
 670:	2e 96       	adiw	r28, 0x0e	; 14
 672:	e4 e0       	ldi	r30, 0x04	; 4
 674:	0c 94 f7 05 	jmp	0xbee	; 0xbee <__epilogue_restores__+0x1c>

00000678 <vfprintf>:
 678:	ab e0       	ldi	r26, 0x0B	; 11
 67a:	b0 e0       	ldi	r27, 0x00	; 0
 67c:	e2 e4       	ldi	r30, 0x42	; 66
 67e:	f3 e0       	ldi	r31, 0x03	; 3
 680:	0c 94 cd 05 	jmp	0xb9a	; 0xb9a <__prologue_saves__>
 684:	6c 01       	movw	r12, r24
 686:	7b 01       	movw	r14, r22
 688:	8a 01       	movw	r16, r20
 68a:	fc 01       	movw	r30, r24
 68c:	17 82       	std	Z+7, r1	; 0x07
 68e:	16 82       	std	Z+6, r1	; 0x06
 690:	83 81       	ldd	r24, Z+3	; 0x03
 692:	81 ff       	sbrs	r24, 1
 694:	cc c1       	rjmp	.+920    	; 0xa2e <__stack+0x12f>
 696:	ce 01       	movw	r24, r28
 698:	01 96       	adiw	r24, 0x01	; 1
 69a:	3c 01       	movw	r6, r24
 69c:	f6 01       	movw	r30, r12
 69e:	93 81       	ldd	r25, Z+3	; 0x03
 6a0:	f7 01       	movw	r30, r14
 6a2:	93 fd       	sbrc	r25, 3
 6a4:	85 91       	lpm	r24, Z+
 6a6:	93 ff       	sbrs	r25, 3
 6a8:	81 91       	ld	r24, Z+
 6aa:	7f 01       	movw	r14, r30
 6ac:	88 23       	and	r24, r24
 6ae:	09 f4       	brne	.+2      	; 0x6b2 <vfprintf+0x3a>
 6b0:	ba c1       	rjmp	.+884    	; 0xa26 <__stack+0x127>
 6b2:	85 32       	cpi	r24, 0x25	; 37
 6b4:	39 f4       	brne	.+14     	; 0x6c4 <vfprintf+0x4c>
 6b6:	93 fd       	sbrc	r25, 3
 6b8:	85 91       	lpm	r24, Z+
 6ba:	93 ff       	sbrs	r25, 3
 6bc:	81 91       	ld	r24, Z+
 6be:	7f 01       	movw	r14, r30
 6c0:	85 32       	cpi	r24, 0x25	; 37
 6c2:	29 f4       	brne	.+10     	; 0x6ce <vfprintf+0x56>
 6c4:	b6 01       	movw	r22, r12
 6c6:	90 e0       	ldi	r25, 0x00	; 0
 6c8:	0e 94 33 05 	call	0xa66	; 0xa66 <fputc>
 6cc:	e7 cf       	rjmp	.-50     	; 0x69c <vfprintf+0x24>
 6ce:	91 2c       	mov	r9, r1
 6d0:	21 2c       	mov	r2, r1
 6d2:	31 2c       	mov	r3, r1
 6d4:	ff e1       	ldi	r31, 0x1F	; 31
 6d6:	f3 15       	cp	r31, r3
 6d8:	d8 f0       	brcs	.+54     	; 0x710 <vfprintf+0x98>
 6da:	8b 32       	cpi	r24, 0x2B	; 43
 6dc:	79 f0       	breq	.+30     	; 0x6fc <vfprintf+0x84>
 6de:	38 f4       	brcc	.+14     	; 0x6ee <vfprintf+0x76>
 6e0:	80 32       	cpi	r24, 0x20	; 32
 6e2:	79 f0       	breq	.+30     	; 0x702 <vfprintf+0x8a>
 6e4:	83 32       	cpi	r24, 0x23	; 35
 6e6:	a1 f4       	brne	.+40     	; 0x710 <vfprintf+0x98>
 6e8:	23 2d       	mov	r18, r3
 6ea:	20 61       	ori	r18, 0x10	; 16
 6ec:	1d c0       	rjmp	.+58     	; 0x728 <vfprintf+0xb0>
 6ee:	8d 32       	cpi	r24, 0x2D	; 45
 6f0:	61 f0       	breq	.+24     	; 0x70a <vfprintf+0x92>
 6f2:	80 33       	cpi	r24, 0x30	; 48
 6f4:	69 f4       	brne	.+26     	; 0x710 <vfprintf+0x98>
 6f6:	23 2d       	mov	r18, r3
 6f8:	21 60       	ori	r18, 0x01	; 1
 6fa:	16 c0       	rjmp	.+44     	; 0x728 <vfprintf+0xb0>
 6fc:	83 2d       	mov	r24, r3
 6fe:	82 60       	ori	r24, 0x02	; 2
 700:	38 2e       	mov	r3, r24
 702:	e3 2d       	mov	r30, r3
 704:	e4 60       	ori	r30, 0x04	; 4
 706:	3e 2e       	mov	r3, r30
 708:	2a c0       	rjmp	.+84     	; 0x75e <vfprintf+0xe6>
 70a:	f3 2d       	mov	r31, r3
 70c:	f8 60       	ori	r31, 0x08	; 8
 70e:	1d c0       	rjmp	.+58     	; 0x74a <vfprintf+0xd2>
 710:	37 fc       	sbrc	r3, 7
 712:	2d c0       	rjmp	.+90     	; 0x76e <vfprintf+0xf6>
 714:	20 ed       	ldi	r18, 0xD0	; 208
 716:	28 0f       	add	r18, r24
 718:	2a 30       	cpi	r18, 0x0A	; 10
 71a:	40 f0       	brcs	.+16     	; 0x72c <vfprintf+0xb4>
 71c:	8e 32       	cpi	r24, 0x2E	; 46
 71e:	b9 f4       	brne	.+46     	; 0x74e <vfprintf+0xd6>
 720:	36 fc       	sbrc	r3, 6
 722:	81 c1       	rjmp	.+770    	; 0xa26 <__stack+0x127>
 724:	23 2d       	mov	r18, r3
 726:	20 64       	ori	r18, 0x40	; 64
 728:	32 2e       	mov	r3, r18
 72a:	19 c0       	rjmp	.+50     	; 0x75e <vfprintf+0xe6>
 72c:	36 fe       	sbrs	r3, 6
 72e:	06 c0       	rjmp	.+12     	; 0x73c <vfprintf+0xc4>
 730:	8a e0       	ldi	r24, 0x0A	; 10
 732:	98 9e       	mul	r9, r24
 734:	20 0d       	add	r18, r0
 736:	11 24       	eor	r1, r1
 738:	92 2e       	mov	r9, r18
 73a:	11 c0       	rjmp	.+34     	; 0x75e <vfprintf+0xe6>
 73c:	ea e0       	ldi	r30, 0x0A	; 10
 73e:	2e 9e       	mul	r2, r30
 740:	20 0d       	add	r18, r0
 742:	11 24       	eor	r1, r1
 744:	22 2e       	mov	r2, r18
 746:	f3 2d       	mov	r31, r3
 748:	f0 62       	ori	r31, 0x20	; 32
 74a:	3f 2e       	mov	r3, r31
 74c:	08 c0       	rjmp	.+16     	; 0x75e <vfprintf+0xe6>
 74e:	8c 36       	cpi	r24, 0x6C	; 108
 750:	21 f4       	brne	.+8      	; 0x75a <vfprintf+0xe2>
 752:	83 2d       	mov	r24, r3
 754:	80 68       	ori	r24, 0x80	; 128
 756:	38 2e       	mov	r3, r24
 758:	02 c0       	rjmp	.+4      	; 0x75e <vfprintf+0xe6>
 75a:	88 36       	cpi	r24, 0x68	; 104
 75c:	41 f4       	brne	.+16     	; 0x76e <vfprintf+0xf6>
 75e:	f7 01       	movw	r30, r14
 760:	93 fd       	sbrc	r25, 3
 762:	85 91       	lpm	r24, Z+
 764:	93 ff       	sbrs	r25, 3
 766:	81 91       	ld	r24, Z+
 768:	7f 01       	movw	r14, r30
 76a:	81 11       	cpse	r24, r1
 76c:	b3 cf       	rjmp	.-154    	; 0x6d4 <vfprintf+0x5c>
 76e:	98 2f       	mov	r25, r24
 770:	9f 7d       	andi	r25, 0xDF	; 223
 772:	95 54       	subi	r25, 0x45	; 69
 774:	93 30       	cpi	r25, 0x03	; 3
 776:	28 f4       	brcc	.+10     	; 0x782 <vfprintf+0x10a>
 778:	0c 5f       	subi	r16, 0xFC	; 252
 77a:	1f 4f       	sbci	r17, 0xFF	; 255
 77c:	9f e3       	ldi	r25, 0x3F	; 63
 77e:	99 83       	std	Y+1, r25	; 0x01
 780:	0d c0       	rjmp	.+26     	; 0x79c <vfprintf+0x124>
 782:	83 36       	cpi	r24, 0x63	; 99
 784:	31 f0       	breq	.+12     	; 0x792 <vfprintf+0x11a>
 786:	83 37       	cpi	r24, 0x73	; 115
 788:	71 f0       	breq	.+28     	; 0x7a6 <vfprintf+0x12e>
 78a:	83 35       	cpi	r24, 0x53	; 83
 78c:	09 f0       	breq	.+2      	; 0x790 <vfprintf+0x118>
 78e:	59 c0       	rjmp	.+178    	; 0x842 <vfprintf+0x1ca>
 790:	21 c0       	rjmp	.+66     	; 0x7d4 <vfprintf+0x15c>
 792:	f8 01       	movw	r30, r16
 794:	80 81       	ld	r24, Z
 796:	89 83       	std	Y+1, r24	; 0x01
 798:	0e 5f       	subi	r16, 0xFE	; 254
 79a:	1f 4f       	sbci	r17, 0xFF	; 255
 79c:	88 24       	eor	r8, r8
 79e:	83 94       	inc	r8
 7a0:	91 2c       	mov	r9, r1
 7a2:	53 01       	movw	r10, r6
 7a4:	13 c0       	rjmp	.+38     	; 0x7cc <vfprintf+0x154>
 7a6:	28 01       	movw	r4, r16
 7a8:	f2 e0       	ldi	r31, 0x02	; 2
 7aa:	4f 0e       	add	r4, r31
 7ac:	51 1c       	adc	r5, r1
 7ae:	f8 01       	movw	r30, r16
 7b0:	a0 80       	ld	r10, Z
 7b2:	b1 80       	ldd	r11, Z+1	; 0x01
 7b4:	36 fe       	sbrs	r3, 6
 7b6:	03 c0       	rjmp	.+6      	; 0x7be <vfprintf+0x146>
 7b8:	69 2d       	mov	r22, r9
 7ba:	70 e0       	ldi	r23, 0x00	; 0
 7bc:	02 c0       	rjmp	.+4      	; 0x7c2 <vfprintf+0x14a>
 7be:	6f ef       	ldi	r22, 0xFF	; 255
 7c0:	7f ef       	ldi	r23, 0xFF	; 255
 7c2:	c5 01       	movw	r24, r10
 7c4:	0e 94 28 05 	call	0xa50	; 0xa50 <strnlen>
 7c8:	4c 01       	movw	r8, r24
 7ca:	82 01       	movw	r16, r4
 7cc:	f3 2d       	mov	r31, r3
 7ce:	ff 77       	andi	r31, 0x7F	; 127
 7d0:	3f 2e       	mov	r3, r31
 7d2:	16 c0       	rjmp	.+44     	; 0x800 <vfprintf+0x188>
 7d4:	28 01       	movw	r4, r16
 7d6:	22 e0       	ldi	r18, 0x02	; 2
 7d8:	42 0e       	add	r4, r18
 7da:	51 1c       	adc	r5, r1
 7dc:	f8 01       	movw	r30, r16
 7de:	a0 80       	ld	r10, Z
 7e0:	b1 80       	ldd	r11, Z+1	; 0x01
 7e2:	36 fe       	sbrs	r3, 6
 7e4:	03 c0       	rjmp	.+6      	; 0x7ec <vfprintf+0x174>
 7e6:	69 2d       	mov	r22, r9
 7e8:	70 e0       	ldi	r23, 0x00	; 0
 7ea:	02 c0       	rjmp	.+4      	; 0x7f0 <vfprintf+0x178>
 7ec:	6f ef       	ldi	r22, 0xFF	; 255
 7ee:	7f ef       	ldi	r23, 0xFF	; 255
 7f0:	c5 01       	movw	r24, r10
 7f2:	0e 94 1d 05 	call	0xa3a	; 0xa3a <strnlen_P>
 7f6:	4c 01       	movw	r8, r24
 7f8:	f3 2d       	mov	r31, r3
 7fa:	f0 68       	ori	r31, 0x80	; 128
 7fc:	3f 2e       	mov	r3, r31
 7fe:	82 01       	movw	r16, r4
 800:	33 fc       	sbrc	r3, 3
 802:	1b c0       	rjmp	.+54     	; 0x83a <vfprintf+0x1c2>
 804:	82 2d       	mov	r24, r2
 806:	90 e0       	ldi	r25, 0x00	; 0
 808:	88 16       	cp	r8, r24
 80a:	99 06       	cpc	r9, r25
 80c:	b0 f4       	brcc	.+44     	; 0x83a <vfprintf+0x1c2>
 80e:	b6 01       	movw	r22, r12
 810:	80 e2       	ldi	r24, 0x20	; 32
 812:	90 e0       	ldi	r25, 0x00	; 0
 814:	0e 94 33 05 	call	0xa66	; 0xa66 <fputc>
 818:	2a 94       	dec	r2
 81a:	f4 cf       	rjmp	.-24     	; 0x804 <vfprintf+0x18c>
 81c:	f5 01       	movw	r30, r10
 81e:	37 fc       	sbrc	r3, 7
 820:	85 91       	lpm	r24, Z+
 822:	37 fe       	sbrs	r3, 7
 824:	81 91       	ld	r24, Z+
 826:	5f 01       	movw	r10, r30
 828:	b6 01       	movw	r22, r12
 82a:	90 e0       	ldi	r25, 0x00	; 0
 82c:	0e 94 33 05 	call	0xa66	; 0xa66 <fputc>
 830:	21 10       	cpse	r2, r1
 832:	2a 94       	dec	r2
 834:	21 e0       	ldi	r18, 0x01	; 1
 836:	82 1a       	sub	r8, r18
 838:	91 08       	sbc	r9, r1
 83a:	81 14       	cp	r8, r1
 83c:	91 04       	cpc	r9, r1
 83e:	71 f7       	brne	.-36     	; 0x81c <vfprintf+0x1a4>
 840:	e8 c0       	rjmp	.+464    	; 0xa12 <__stack+0x113>
 842:	84 36       	cpi	r24, 0x64	; 100
 844:	11 f0       	breq	.+4      	; 0x84a <vfprintf+0x1d2>
 846:	89 36       	cpi	r24, 0x69	; 105
 848:	41 f5       	brne	.+80     	; 0x89a <vfprintf+0x222>
 84a:	f8 01       	movw	r30, r16
 84c:	37 fe       	sbrs	r3, 7
 84e:	07 c0       	rjmp	.+14     	; 0x85e <vfprintf+0x1e6>
 850:	60 81       	ld	r22, Z
 852:	71 81       	ldd	r23, Z+1	; 0x01
 854:	82 81       	ldd	r24, Z+2	; 0x02
 856:	93 81       	ldd	r25, Z+3	; 0x03
 858:	0c 5f       	subi	r16, 0xFC	; 252
 85a:	1f 4f       	sbci	r17, 0xFF	; 255
 85c:	08 c0       	rjmp	.+16     	; 0x86e <vfprintf+0x1f6>
 85e:	60 81       	ld	r22, Z
 860:	71 81       	ldd	r23, Z+1	; 0x01
 862:	07 2e       	mov	r0, r23
 864:	00 0c       	add	r0, r0
 866:	88 0b       	sbc	r24, r24
 868:	99 0b       	sbc	r25, r25
 86a:	0e 5f       	subi	r16, 0xFE	; 254
 86c:	1f 4f       	sbci	r17, 0xFF	; 255
 86e:	f3 2d       	mov	r31, r3
 870:	ff 76       	andi	r31, 0x6F	; 111
 872:	3f 2e       	mov	r3, r31
 874:	97 ff       	sbrs	r25, 7
 876:	09 c0       	rjmp	.+18     	; 0x88a <vfprintf+0x212>
 878:	90 95       	com	r25
 87a:	80 95       	com	r24
 87c:	70 95       	com	r23
 87e:	61 95       	neg	r22
 880:	7f 4f       	sbci	r23, 0xFF	; 255
 882:	8f 4f       	sbci	r24, 0xFF	; 255
 884:	9f 4f       	sbci	r25, 0xFF	; 255
 886:	f0 68       	ori	r31, 0x80	; 128
 888:	3f 2e       	mov	r3, r31
 88a:	2a e0       	ldi	r18, 0x0A	; 10
 88c:	30 e0       	ldi	r19, 0x00	; 0
 88e:	a3 01       	movw	r20, r6
 890:	0e 94 6f 05 	call	0xade	; 0xade <__ultoa_invert>
 894:	88 2e       	mov	r8, r24
 896:	86 18       	sub	r8, r6
 898:	45 c0       	rjmp	.+138    	; 0x924 <__stack+0x25>
 89a:	85 37       	cpi	r24, 0x75	; 117
 89c:	31 f4       	brne	.+12     	; 0x8aa <vfprintf+0x232>
 89e:	23 2d       	mov	r18, r3
 8a0:	2f 7e       	andi	r18, 0xEF	; 239
 8a2:	b2 2e       	mov	r11, r18
 8a4:	2a e0       	ldi	r18, 0x0A	; 10
 8a6:	30 e0       	ldi	r19, 0x00	; 0
 8a8:	25 c0       	rjmp	.+74     	; 0x8f4 <vfprintf+0x27c>
 8aa:	93 2d       	mov	r25, r3
 8ac:	99 7f       	andi	r25, 0xF9	; 249
 8ae:	b9 2e       	mov	r11, r25
 8b0:	8f 36       	cpi	r24, 0x6F	; 111
 8b2:	c1 f0       	breq	.+48     	; 0x8e4 <vfprintf+0x26c>
 8b4:	18 f4       	brcc	.+6      	; 0x8bc <vfprintf+0x244>
 8b6:	88 35       	cpi	r24, 0x58	; 88
 8b8:	79 f0       	breq	.+30     	; 0x8d8 <vfprintf+0x260>
 8ba:	b5 c0       	rjmp	.+362    	; 0xa26 <__stack+0x127>
 8bc:	80 37       	cpi	r24, 0x70	; 112
 8be:	19 f0       	breq	.+6      	; 0x8c6 <vfprintf+0x24e>
 8c0:	88 37       	cpi	r24, 0x78	; 120
 8c2:	21 f0       	breq	.+8      	; 0x8cc <vfprintf+0x254>
 8c4:	b0 c0       	rjmp	.+352    	; 0xa26 <__stack+0x127>
 8c6:	e9 2f       	mov	r30, r25
 8c8:	e0 61       	ori	r30, 0x10	; 16
 8ca:	be 2e       	mov	r11, r30
 8cc:	b4 fe       	sbrs	r11, 4
 8ce:	0d c0       	rjmp	.+26     	; 0x8ea <vfprintf+0x272>
 8d0:	fb 2d       	mov	r31, r11
 8d2:	f4 60       	ori	r31, 0x04	; 4
 8d4:	bf 2e       	mov	r11, r31
 8d6:	09 c0       	rjmp	.+18     	; 0x8ea <vfprintf+0x272>
 8d8:	34 fe       	sbrs	r3, 4
 8da:	0a c0       	rjmp	.+20     	; 0x8f0 <vfprintf+0x278>
 8dc:	29 2f       	mov	r18, r25
 8de:	26 60       	ori	r18, 0x06	; 6
 8e0:	b2 2e       	mov	r11, r18
 8e2:	06 c0       	rjmp	.+12     	; 0x8f0 <vfprintf+0x278>
 8e4:	28 e0       	ldi	r18, 0x08	; 8
 8e6:	30 e0       	ldi	r19, 0x00	; 0
 8e8:	05 c0       	rjmp	.+10     	; 0x8f4 <vfprintf+0x27c>
 8ea:	20 e1       	ldi	r18, 0x10	; 16
 8ec:	30 e0       	ldi	r19, 0x00	; 0
 8ee:	02 c0       	rjmp	.+4      	; 0x8f4 <vfprintf+0x27c>
 8f0:	20 e1       	ldi	r18, 0x10	; 16
 8f2:	32 e0       	ldi	r19, 0x02	; 2
 8f4:	f8 01       	movw	r30, r16
 8f6:	b7 fe       	sbrs	r11, 7
 8f8:	07 c0       	rjmp	.+14     	; 0x908 <__stack+0x9>
 8fa:	60 81       	ld	r22, Z
 8fc:	71 81       	ldd	r23, Z+1	; 0x01
 8fe:	82 81       	ldd	r24, Z+2	; 0x02
 900:	93 81       	ldd	r25, Z+3	; 0x03
 902:	0c 5f       	subi	r16, 0xFC	; 252
 904:	1f 4f       	sbci	r17, 0xFF	; 255
 906:	06 c0       	rjmp	.+12     	; 0x914 <__stack+0x15>
 908:	60 81       	ld	r22, Z
 90a:	71 81       	ldd	r23, Z+1	; 0x01
 90c:	80 e0       	ldi	r24, 0x00	; 0
 90e:	90 e0       	ldi	r25, 0x00	; 0
 910:	0e 5f       	subi	r16, 0xFE	; 254
 912:	1f 4f       	sbci	r17, 0xFF	; 255
 914:	a3 01       	movw	r20, r6
 916:	0e 94 6f 05 	call	0xade	; 0xade <__ultoa_invert>
 91a:	88 2e       	mov	r8, r24
 91c:	86 18       	sub	r8, r6
 91e:	fb 2d       	mov	r31, r11
 920:	ff 77       	andi	r31, 0x7F	; 127
 922:	3f 2e       	mov	r3, r31
 924:	36 fe       	sbrs	r3, 6
 926:	0d c0       	rjmp	.+26     	; 0x942 <__stack+0x43>
 928:	23 2d       	mov	r18, r3
 92a:	2e 7f       	andi	r18, 0xFE	; 254
 92c:	a2 2e       	mov	r10, r18
 92e:	89 14       	cp	r8, r9
 930:	58 f4       	brcc	.+22     	; 0x948 <__stack+0x49>
 932:	34 fe       	sbrs	r3, 4
 934:	0b c0       	rjmp	.+22     	; 0x94c <__stack+0x4d>
 936:	32 fc       	sbrc	r3, 2
 938:	09 c0       	rjmp	.+18     	; 0x94c <__stack+0x4d>
 93a:	83 2d       	mov	r24, r3
 93c:	8e 7e       	andi	r24, 0xEE	; 238
 93e:	a8 2e       	mov	r10, r24
 940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0x4d>
 942:	b8 2c       	mov	r11, r8
 944:	a3 2c       	mov	r10, r3
 946:	03 c0       	rjmp	.+6      	; 0x94e <__stack+0x4f>
 948:	b8 2c       	mov	r11, r8
 94a:	01 c0       	rjmp	.+2      	; 0x94e <__stack+0x4f>
 94c:	b9 2c       	mov	r11, r9
 94e:	a4 fe       	sbrs	r10, 4
 950:	0f c0       	rjmp	.+30     	; 0x970 <__stack+0x71>
 952:	fe 01       	movw	r30, r28
 954:	e8 0d       	add	r30, r8
 956:	f1 1d       	adc	r31, r1
 958:	80 81       	ld	r24, Z
 95a:	80 33       	cpi	r24, 0x30	; 48
 95c:	21 f4       	brne	.+8      	; 0x966 <__stack+0x67>
 95e:	9a 2d       	mov	r25, r10
 960:	99 7e       	andi	r25, 0xE9	; 233
 962:	a9 2e       	mov	r10, r25
 964:	09 c0       	rjmp	.+18     	; 0x978 <__stack+0x79>
 966:	a2 fe       	sbrs	r10, 2
 968:	06 c0       	rjmp	.+12     	; 0x976 <__stack+0x77>
 96a:	b3 94       	inc	r11
 96c:	b3 94       	inc	r11
 96e:	04 c0       	rjmp	.+8      	; 0x978 <__stack+0x79>
 970:	8a 2d       	mov	r24, r10
 972:	86 78       	andi	r24, 0x86	; 134
 974:	09 f0       	breq	.+2      	; 0x978 <__stack+0x79>
 976:	b3 94       	inc	r11
 978:	a3 fc       	sbrc	r10, 3
 97a:	11 c0       	rjmp	.+34     	; 0x99e <__stack+0x9f>
 97c:	a0 fe       	sbrs	r10, 0
 97e:	06 c0       	rjmp	.+12     	; 0x98c <__stack+0x8d>
 980:	b2 14       	cp	r11, r2
 982:	88 f4       	brcc	.+34     	; 0x9a6 <__stack+0xa7>
 984:	28 0c       	add	r2, r8
 986:	92 2c       	mov	r9, r2
 988:	9b 18       	sub	r9, r11
 98a:	0e c0       	rjmp	.+28     	; 0x9a8 <__stack+0xa9>
 98c:	b2 14       	cp	r11, r2
 98e:	60 f4       	brcc	.+24     	; 0x9a8 <__stack+0xa9>
 990:	b6 01       	movw	r22, r12
 992:	80 e2       	ldi	r24, 0x20	; 32
 994:	90 e0       	ldi	r25, 0x00	; 0
 996:	0e 94 33 05 	call	0xa66	; 0xa66 <fputc>
 99a:	b3 94       	inc	r11
 99c:	f7 cf       	rjmp	.-18     	; 0x98c <__stack+0x8d>
 99e:	b2 14       	cp	r11, r2
 9a0:	18 f4       	brcc	.+6      	; 0x9a8 <__stack+0xa9>
 9a2:	2b 18       	sub	r2, r11
 9a4:	02 c0       	rjmp	.+4      	; 0x9aa <__stack+0xab>
 9a6:	98 2c       	mov	r9, r8
 9a8:	21 2c       	mov	r2, r1
 9aa:	a4 fe       	sbrs	r10, 4
 9ac:	10 c0       	rjmp	.+32     	; 0x9ce <__stack+0xcf>
 9ae:	b6 01       	movw	r22, r12
 9b0:	80 e3       	ldi	r24, 0x30	; 48
 9b2:	90 e0       	ldi	r25, 0x00	; 0
 9b4:	0e 94 33 05 	call	0xa66	; 0xa66 <fputc>
 9b8:	a2 fe       	sbrs	r10, 2
 9ba:	17 c0       	rjmp	.+46     	; 0x9ea <__stack+0xeb>
 9bc:	a1 fc       	sbrc	r10, 1
 9be:	03 c0       	rjmp	.+6      	; 0x9c6 <__stack+0xc7>
 9c0:	88 e7       	ldi	r24, 0x78	; 120
 9c2:	90 e0       	ldi	r25, 0x00	; 0
 9c4:	02 c0       	rjmp	.+4      	; 0x9ca <__stack+0xcb>
 9c6:	88 e5       	ldi	r24, 0x58	; 88
 9c8:	90 e0       	ldi	r25, 0x00	; 0
 9ca:	b6 01       	movw	r22, r12
 9cc:	0c c0       	rjmp	.+24     	; 0x9e6 <__stack+0xe7>
 9ce:	8a 2d       	mov	r24, r10
 9d0:	86 78       	andi	r24, 0x86	; 134
 9d2:	59 f0       	breq	.+22     	; 0x9ea <__stack+0xeb>
 9d4:	a1 fe       	sbrs	r10, 1
 9d6:	02 c0       	rjmp	.+4      	; 0x9dc <__stack+0xdd>
 9d8:	8b e2       	ldi	r24, 0x2B	; 43
 9da:	01 c0       	rjmp	.+2      	; 0x9de <__stack+0xdf>
 9dc:	80 e2       	ldi	r24, 0x20	; 32
 9de:	a7 fc       	sbrc	r10, 7
 9e0:	8d e2       	ldi	r24, 0x2D	; 45
 9e2:	b6 01       	movw	r22, r12
 9e4:	90 e0       	ldi	r25, 0x00	; 0
 9e6:	0e 94 33 05 	call	0xa66	; 0xa66 <fputc>
 9ea:	89 14       	cp	r8, r9
 9ec:	38 f4       	brcc	.+14     	; 0x9fc <__stack+0xfd>
 9ee:	b6 01       	movw	r22, r12
 9f0:	80 e3       	ldi	r24, 0x30	; 48
 9f2:	90 e0       	ldi	r25, 0x00	; 0
 9f4:	0e 94 33 05 	call	0xa66	; 0xa66 <fputc>
 9f8:	9a 94       	dec	r9
 9fa:	f7 cf       	rjmp	.-18     	; 0x9ea <__stack+0xeb>
 9fc:	8a 94       	dec	r8
 9fe:	f3 01       	movw	r30, r6
 a00:	e8 0d       	add	r30, r8
 a02:	f1 1d       	adc	r31, r1
 a04:	80 81       	ld	r24, Z
 a06:	b6 01       	movw	r22, r12
 a08:	90 e0       	ldi	r25, 0x00	; 0
 a0a:	0e 94 33 05 	call	0xa66	; 0xa66 <fputc>
 a0e:	81 10       	cpse	r8, r1
 a10:	f5 cf       	rjmp	.-22     	; 0x9fc <__stack+0xfd>
 a12:	22 20       	and	r2, r2
 a14:	09 f4       	brne	.+2      	; 0xa18 <__stack+0x119>
 a16:	42 ce       	rjmp	.-892    	; 0x69c <vfprintf+0x24>
 a18:	b6 01       	movw	r22, r12
 a1a:	80 e2       	ldi	r24, 0x20	; 32
 a1c:	90 e0       	ldi	r25, 0x00	; 0
 a1e:	0e 94 33 05 	call	0xa66	; 0xa66 <fputc>
 a22:	2a 94       	dec	r2
 a24:	f6 cf       	rjmp	.-20     	; 0xa12 <__stack+0x113>
 a26:	f6 01       	movw	r30, r12
 a28:	86 81       	ldd	r24, Z+6	; 0x06
 a2a:	97 81       	ldd	r25, Z+7	; 0x07
 a2c:	02 c0       	rjmp	.+4      	; 0xa32 <__stack+0x133>
 a2e:	8f ef       	ldi	r24, 0xFF	; 255
 a30:	9f ef       	ldi	r25, 0xFF	; 255
 a32:	2b 96       	adiw	r28, 0x0b	; 11
 a34:	e2 e1       	ldi	r30, 0x12	; 18
 a36:	0c 94 e9 05 	jmp	0xbd2	; 0xbd2 <__epilogue_restores__>

00000a3a <strnlen_P>:
 a3a:	fc 01       	movw	r30, r24
 a3c:	05 90       	lpm	r0, Z+
 a3e:	61 50       	subi	r22, 0x01	; 1
 a40:	70 40       	sbci	r23, 0x00	; 0
 a42:	01 10       	cpse	r0, r1
 a44:	d8 f7       	brcc	.-10     	; 0xa3c <strnlen_P+0x2>
 a46:	80 95       	com	r24
 a48:	90 95       	com	r25
 a4a:	8e 0f       	add	r24, r30
 a4c:	9f 1f       	adc	r25, r31
 a4e:	08 95       	ret

00000a50 <strnlen>:
 a50:	fc 01       	movw	r30, r24
 a52:	61 50       	subi	r22, 0x01	; 1
 a54:	70 40       	sbci	r23, 0x00	; 0
 a56:	01 90       	ld	r0, Z+
 a58:	01 10       	cpse	r0, r1
 a5a:	d8 f7       	brcc	.-10     	; 0xa52 <strnlen+0x2>
 a5c:	80 95       	com	r24
 a5e:	90 95       	com	r25
 a60:	8e 0f       	add	r24, r30
 a62:	9f 1f       	adc	r25, r31
 a64:	08 95       	ret

00000a66 <fputc>:
 a66:	0f 93       	push	r16
 a68:	1f 93       	push	r17
 a6a:	cf 93       	push	r28
 a6c:	df 93       	push	r29
 a6e:	fb 01       	movw	r30, r22
 a70:	23 81       	ldd	r18, Z+3	; 0x03
 a72:	21 fd       	sbrc	r18, 1
 a74:	03 c0       	rjmp	.+6      	; 0xa7c <fputc+0x16>
 a76:	8f ef       	ldi	r24, 0xFF	; 255
 a78:	9f ef       	ldi	r25, 0xFF	; 255
 a7a:	2c c0       	rjmp	.+88     	; 0xad4 <fputc+0x6e>
 a7c:	22 ff       	sbrs	r18, 2
 a7e:	16 c0       	rjmp	.+44     	; 0xaac <fputc+0x46>
 a80:	46 81       	ldd	r20, Z+6	; 0x06
 a82:	57 81       	ldd	r21, Z+7	; 0x07
 a84:	24 81       	ldd	r18, Z+4	; 0x04
 a86:	35 81       	ldd	r19, Z+5	; 0x05
 a88:	42 17       	cp	r20, r18
 a8a:	53 07       	cpc	r21, r19
 a8c:	44 f4       	brge	.+16     	; 0xa9e <fputc+0x38>
 a8e:	a0 81       	ld	r26, Z
 a90:	b1 81       	ldd	r27, Z+1	; 0x01
 a92:	9d 01       	movw	r18, r26
 a94:	2f 5f       	subi	r18, 0xFF	; 255
 a96:	3f 4f       	sbci	r19, 0xFF	; 255
 a98:	31 83       	std	Z+1, r19	; 0x01
 a9a:	20 83       	st	Z, r18
 a9c:	8c 93       	st	X, r24
 a9e:	26 81       	ldd	r18, Z+6	; 0x06
 aa0:	37 81       	ldd	r19, Z+7	; 0x07
 aa2:	2f 5f       	subi	r18, 0xFF	; 255
 aa4:	3f 4f       	sbci	r19, 0xFF	; 255
 aa6:	37 83       	std	Z+7, r19	; 0x07
 aa8:	26 83       	std	Z+6, r18	; 0x06
 aaa:	14 c0       	rjmp	.+40     	; 0xad4 <fputc+0x6e>
 aac:	8b 01       	movw	r16, r22
 aae:	ec 01       	movw	r28, r24
 ab0:	fb 01       	movw	r30, r22
 ab2:	00 84       	ldd	r0, Z+8	; 0x08
 ab4:	f1 85       	ldd	r31, Z+9	; 0x09
 ab6:	e0 2d       	mov	r30, r0
 ab8:	09 95       	icall
 aba:	89 2b       	or	r24, r25
 abc:	e1 f6       	brne	.-72     	; 0xa76 <fputc+0x10>
 abe:	d8 01       	movw	r26, r16
 ac0:	16 96       	adiw	r26, 0x06	; 6
 ac2:	8d 91       	ld	r24, X+
 ac4:	9c 91       	ld	r25, X
 ac6:	17 97       	sbiw	r26, 0x07	; 7
 ac8:	01 96       	adiw	r24, 0x01	; 1
 aca:	17 96       	adiw	r26, 0x07	; 7
 acc:	9c 93       	st	X, r25
 ace:	8e 93       	st	-X, r24
 ad0:	16 97       	sbiw	r26, 0x06	; 6
 ad2:	ce 01       	movw	r24, r28
 ad4:	df 91       	pop	r29
 ad6:	cf 91       	pop	r28
 ad8:	1f 91       	pop	r17
 ada:	0f 91       	pop	r16
 adc:	08 95       	ret

00000ade <__ultoa_invert>:
 ade:	fa 01       	movw	r30, r20
 ae0:	aa 27       	eor	r26, r26
 ae2:	28 30       	cpi	r18, 0x08	; 8
 ae4:	51 f1       	breq	.+84     	; 0xb3a <__ultoa_invert+0x5c>
 ae6:	20 31       	cpi	r18, 0x10	; 16
 ae8:	81 f1       	breq	.+96     	; 0xb4a <__ultoa_invert+0x6c>
 aea:	e8 94       	clt
 aec:	6f 93       	push	r22
 aee:	6e 7f       	andi	r22, 0xFE	; 254
 af0:	6e 5f       	subi	r22, 0xFE	; 254
 af2:	7f 4f       	sbci	r23, 0xFF	; 255
 af4:	8f 4f       	sbci	r24, 0xFF	; 255
 af6:	9f 4f       	sbci	r25, 0xFF	; 255
 af8:	af 4f       	sbci	r26, 0xFF	; 255
 afa:	b1 e0       	ldi	r27, 0x01	; 1
 afc:	3e d0       	rcall	.+124    	; 0xb7a <__ultoa_invert+0x9c>
 afe:	b4 e0       	ldi	r27, 0x04	; 4
 b00:	3c d0       	rcall	.+120    	; 0xb7a <__ultoa_invert+0x9c>
 b02:	67 0f       	add	r22, r23
 b04:	78 1f       	adc	r23, r24
 b06:	89 1f       	adc	r24, r25
 b08:	9a 1f       	adc	r25, r26
 b0a:	a1 1d       	adc	r26, r1
 b0c:	68 0f       	add	r22, r24
 b0e:	79 1f       	adc	r23, r25
 b10:	8a 1f       	adc	r24, r26
 b12:	91 1d       	adc	r25, r1
 b14:	a1 1d       	adc	r26, r1
 b16:	6a 0f       	add	r22, r26
 b18:	71 1d       	adc	r23, r1
 b1a:	81 1d       	adc	r24, r1
 b1c:	91 1d       	adc	r25, r1
 b1e:	a1 1d       	adc	r26, r1
 b20:	20 d0       	rcall	.+64     	; 0xb62 <__ultoa_invert+0x84>
 b22:	09 f4       	brne	.+2      	; 0xb26 <__ultoa_invert+0x48>
 b24:	68 94       	set
 b26:	3f 91       	pop	r19
 b28:	2a e0       	ldi	r18, 0x0A	; 10
 b2a:	26 9f       	mul	r18, r22
 b2c:	11 24       	eor	r1, r1
 b2e:	30 19       	sub	r19, r0
 b30:	30 5d       	subi	r19, 0xD0	; 208
 b32:	31 93       	st	Z+, r19
 b34:	de f6       	brtc	.-74     	; 0xaec <__ultoa_invert+0xe>
 b36:	cf 01       	movw	r24, r30
 b38:	08 95       	ret
 b3a:	46 2f       	mov	r20, r22
 b3c:	47 70       	andi	r20, 0x07	; 7
 b3e:	40 5d       	subi	r20, 0xD0	; 208
 b40:	41 93       	st	Z+, r20
 b42:	b3 e0       	ldi	r27, 0x03	; 3
 b44:	0f d0       	rcall	.+30     	; 0xb64 <__ultoa_invert+0x86>
 b46:	c9 f7       	brne	.-14     	; 0xb3a <__ultoa_invert+0x5c>
 b48:	f6 cf       	rjmp	.-20     	; 0xb36 <__ultoa_invert+0x58>
 b4a:	46 2f       	mov	r20, r22
 b4c:	4f 70       	andi	r20, 0x0F	; 15
 b4e:	40 5d       	subi	r20, 0xD0	; 208
 b50:	4a 33       	cpi	r20, 0x3A	; 58
 b52:	18 f0       	brcs	.+6      	; 0xb5a <__ultoa_invert+0x7c>
 b54:	49 5d       	subi	r20, 0xD9	; 217
 b56:	31 fd       	sbrc	r19, 1
 b58:	40 52       	subi	r20, 0x20	; 32
 b5a:	41 93       	st	Z+, r20
 b5c:	02 d0       	rcall	.+4      	; 0xb62 <__ultoa_invert+0x84>
 b5e:	a9 f7       	brne	.-22     	; 0xb4a <__ultoa_invert+0x6c>
 b60:	ea cf       	rjmp	.-44     	; 0xb36 <__ultoa_invert+0x58>
 b62:	b4 e0       	ldi	r27, 0x04	; 4
 b64:	a6 95       	lsr	r26
 b66:	97 95       	ror	r25
 b68:	87 95       	ror	r24
 b6a:	77 95       	ror	r23
 b6c:	67 95       	ror	r22
 b6e:	ba 95       	dec	r27
 b70:	c9 f7       	brne	.-14     	; 0xb64 <__ultoa_invert+0x86>
 b72:	00 97       	sbiw	r24, 0x00	; 0
 b74:	61 05       	cpc	r22, r1
 b76:	71 05       	cpc	r23, r1
 b78:	08 95       	ret
 b7a:	9b 01       	movw	r18, r22
 b7c:	ac 01       	movw	r20, r24
 b7e:	0a 2e       	mov	r0, r26
 b80:	06 94       	lsr	r0
 b82:	57 95       	ror	r21
 b84:	47 95       	ror	r20
 b86:	37 95       	ror	r19
 b88:	27 95       	ror	r18
 b8a:	ba 95       	dec	r27
 b8c:	c9 f7       	brne	.-14     	; 0xb80 <__ultoa_invert+0xa2>
 b8e:	62 0f       	add	r22, r18
 b90:	73 1f       	adc	r23, r19
 b92:	84 1f       	adc	r24, r20
 b94:	95 1f       	adc	r25, r21
 b96:	a0 1d       	adc	r26, r0
 b98:	08 95       	ret

00000b9a <__prologue_saves__>:
 b9a:	2f 92       	push	r2
 b9c:	3f 92       	push	r3
 b9e:	4f 92       	push	r4
 ba0:	5f 92       	push	r5
 ba2:	6f 92       	push	r6
 ba4:	7f 92       	push	r7
 ba6:	8f 92       	push	r8
 ba8:	9f 92       	push	r9
 baa:	af 92       	push	r10
 bac:	bf 92       	push	r11
 bae:	cf 92       	push	r12
 bb0:	df 92       	push	r13
 bb2:	ef 92       	push	r14
 bb4:	ff 92       	push	r15
 bb6:	0f 93       	push	r16
 bb8:	1f 93       	push	r17
 bba:	cf 93       	push	r28
 bbc:	df 93       	push	r29
 bbe:	cd b7       	in	r28, 0x3d	; 61
 bc0:	de b7       	in	r29, 0x3e	; 62
 bc2:	ca 1b       	sub	r28, r26
 bc4:	db 0b       	sbc	r29, r27
 bc6:	0f b6       	in	r0, 0x3f	; 63
 bc8:	f8 94       	cli
 bca:	de bf       	out	0x3e, r29	; 62
 bcc:	0f be       	out	0x3f, r0	; 63
 bce:	cd bf       	out	0x3d, r28	; 61
 bd0:	09 94       	ijmp

00000bd2 <__epilogue_restores__>:
 bd2:	2a 88       	ldd	r2, Y+18	; 0x12
 bd4:	39 88       	ldd	r3, Y+17	; 0x11
 bd6:	48 88       	ldd	r4, Y+16	; 0x10
 bd8:	5f 84       	ldd	r5, Y+15	; 0x0f
 bda:	6e 84       	ldd	r6, Y+14	; 0x0e
 bdc:	7d 84       	ldd	r7, Y+13	; 0x0d
 bde:	8c 84       	ldd	r8, Y+12	; 0x0c
 be0:	9b 84       	ldd	r9, Y+11	; 0x0b
 be2:	aa 84       	ldd	r10, Y+10	; 0x0a
 be4:	b9 84       	ldd	r11, Y+9	; 0x09
 be6:	c8 84       	ldd	r12, Y+8	; 0x08
 be8:	df 80       	ldd	r13, Y+7	; 0x07
 bea:	ee 80       	ldd	r14, Y+6	; 0x06
 bec:	fd 80       	ldd	r15, Y+5	; 0x05
 bee:	0c 81       	ldd	r16, Y+4	; 0x04
 bf0:	1b 81       	ldd	r17, Y+3	; 0x03
 bf2:	aa 81       	ldd	r26, Y+2	; 0x02
 bf4:	b9 81       	ldd	r27, Y+1	; 0x01
 bf6:	ce 0f       	add	r28, r30
 bf8:	d1 1d       	adc	r29, r1
 bfa:	0f b6       	in	r0, 0x3f	; 63
 bfc:	f8 94       	cli
 bfe:	de bf       	out	0x3e, r29	; 62
 c00:	0f be       	out	0x3f, r0	; 63
 c02:	cd bf       	out	0x3d, r28	; 61
 c04:	ed 01       	movw	r28, r26
 c06:	08 95       	ret

00000c08 <_exit>:
 c08:	f8 94       	cli

00000c0a <__stop_program>:
 c0a:	ff cf       	rjmp	.-2      	; 0xc0a <__stop_program>
