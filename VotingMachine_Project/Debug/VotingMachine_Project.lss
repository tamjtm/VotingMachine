
VotingMachine_Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002a  00800100  00001058  000010cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001058  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  000010f6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001154  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000060  00000000  00000000  00001194  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001068  00000000  00000000  000011f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007e0  00000000  00000000  0000225c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000006b2  00000000  00000000  00002a3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000c0  00000000  00000000  000030f0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000043b  00000000  00000000  000031b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000007ae  00000000  00000000  000035eb  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  00003d99  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__ctors_end>
       4:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
       8:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
       c:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      10:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      14:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      18:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      1c:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      20:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      24:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      28:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      2c:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      30:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      34:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      38:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      3c:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      40:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      44:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      48:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      4c:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      50:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      54:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      58:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      5c:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      60:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      64:	0c 94 76 00 	jmp	0xec	; 0xec <__bad_interrupt>
      68:	08 00       	.word	0x0008	; ????
      6a:	00 00       	nop
      6c:	be 92       	st	-X, r11
      6e:	24 49       	sbci	r18, 0x94	; 148
      70:	12 3e       	cpi	r17, 0xE2	; 226
      72:	ab aa       	std	Y+51, r10	; 0x33
      74:	aa 2a       	or	r10, r26
      76:	be cd       	rjmp	.-1156   	; 0xfffffbf4 <__eeprom_end+0xff7efbf4>
      78:	cc cc       	rjmp	.-1640   	; 0xfffffa12 <__eeprom_end+0xff7efa12>
      7a:	4c 3e       	cpi	r20, 0xEC	; 236
      7c:	00 00       	nop
      7e:	00 80       	ld	r0, Z
      80:	be ab       	std	Y+54, r27	; 0x36
      82:	aa aa       	std	Y+50, r10	; 0x32
      84:	aa 3e       	cpi	r26, 0xEA	; 234
      86:	00 00       	nop
      88:	00 00       	nop
      8a:	bf 00       	.word	0x00bf	; ????
      8c:	00 00       	nop
      8e:	80 3f       	cpi	r24, 0xF0	; 240
      90:	00 00       	nop
      92:	00 00       	nop
      94:	00 08       	sbc	r0, r0
      96:	41 78       	andi	r20, 0x81	; 129
      98:	d3 bb       	out	0x13, r29	; 19
      9a:	43 87       	std	Z+11, r20	; 0x0b
      9c:	d1 13       	cpse	r29, r17
      9e:	3d 19       	sub	r19, r13
      a0:	0e 3c       	cpi	r16, 0xCE	; 206
      a2:	c3 bd       	out	0x23, r28	; 35
      a4:	42 82       	std	Z+2, r4	; 0x02
      a6:	ad 2b       	or	r26, r29
      a8:	3e 68       	ori	r19, 0x8E	; 142
      aa:	ec 82       	std	Y+4, r14	; 0x04
      ac:	76 be       	out	0x36, r7	; 54
      ae:	d9 8f       	std	Y+25, r29	; 0x19
      b0:	e1 a9       	ldd	r30, Z+49	; 0x31
      b2:	3e 4c       	sbci	r19, 0xCE	; 206
      b4:	80 ef       	ldi	r24, 0xF0	; 240
      b6:	ff be       	out	0x3f, r15	; 63
      b8:	01 c4       	rjmp	.+2050   	; 0x8bc <log+0x8>
      ba:	ff 7f       	andi	r31, 0xFF	; 255
      bc:	3f 00       	.word	0x003f	; ????
      be:	00 00       	nop
	...

000000c2 <__ctors_end>:
      c2:	11 24       	eor	r1, r1
      c4:	1f be       	out	0x3f, r1	; 63
      c6:	cf ef       	ldi	r28, 0xFF	; 255
      c8:	d8 e0       	ldi	r29, 0x08	; 8
      ca:	de bf       	out	0x3e, r29	; 62
      cc:	cd bf       	out	0x3d, r28	; 61

000000ce <__do_copy_data>:
      ce:	11 e0       	ldi	r17, 0x01	; 1
      d0:	a0 e0       	ldi	r26, 0x00	; 0
      d2:	b1 e0       	ldi	r27, 0x01	; 1
      d4:	e8 e5       	ldi	r30, 0x58	; 88
      d6:	f0 e1       	ldi	r31, 0x10	; 16
      d8:	02 c0       	rjmp	.+4      	; 0xde <__do_copy_data+0x10>
      da:	05 90       	lpm	r0, Z+
      dc:	0d 92       	st	X+, r0
      de:	aa 32       	cpi	r26, 0x2A	; 42
      e0:	b1 07       	cpc	r27, r17
      e2:	d9 f7       	brne	.-10     	; 0xda <__do_copy_data+0xc>
      e4:	0e 94 46 01 	call	0x28c	; 0x28c <main>
      e8:	0c 94 2a 08 	jmp	0x1054	; 0x1054 <_exit>

000000ec <__bad_interrupt>:
      ec:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f0 <LCD_Command>:
#define EN PORTD3 				/* Define Enable signal pin */


void LCD_Command( unsigned char cmnd )
{
	LCD_Port = (LCD_Port & 0x0F) | (cmnd & 0xF0); /* sending upper nibble */
      f0:	9b b1       	in	r25, 0x0b	; 11
      f2:	9f 70       	andi	r25, 0x0F	; 15
      f4:	28 2f       	mov	r18, r24
      f6:	20 7f       	andi	r18, 0xF0	; 240
      f8:	92 2b       	or	r25, r18
      fa:	9b b9       	out	0x0b, r25	; 11
	LCD_Port &= ~ (1<<RS);		/* RS=0, command reg. */
      fc:	5a 98       	cbi	0x0b, 2	; 11
	LCD_Port |= (1<<EN);		/* Enable pulse */
      fe:	5b 9a       	sbi	0x0b, 3	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     100:	32 e0       	ldi	r19, 0x02	; 2
     102:	3a 95       	dec	r19
     104:	f1 f7       	brne	.-4      	; 0x102 <LCD_Command+0x12>
     106:	00 c0       	rjmp	.+0      	; 0x108 <LCD_Command+0x18>
	_delay_us(1);
	LCD_Port &= ~ (1<<EN);
     108:	5b 98       	cbi	0x0b, 3	; 11
     10a:	e7 ec       	ldi	r30, 0xC7	; 199
     10c:	f0 e0       	ldi	r31, 0x00	; 0
     10e:	31 97       	sbiw	r30, 0x01	; 1
     110:	f1 f7       	brne	.-4      	; 0x10e <LCD_Command+0x1e>
     112:	00 c0       	rjmp	.+0      	; 0x114 <LCD_Command+0x24>
     114:	00 00       	nop

	_delay_us(100);

	LCD_Port = (LCD_Port & 0x0F) | (cmnd << 4);  /* sending lower nibble */
     116:	2b b1       	in	r18, 0x0b	; 11
     118:	2f 70       	andi	r18, 0x0F	; 15
     11a:	f0 e1       	ldi	r31, 0x10	; 16
     11c:	8f 9f       	mul	r24, r31
     11e:	c0 01       	movw	r24, r0
     120:	11 24       	eor	r1, r1
     122:	82 2b       	or	r24, r18
     124:	8b b9       	out	0x0b, r24	; 11
	LCD_Port |= (1<<EN);
     126:	5b 9a       	sbi	0x0b, 3	; 11
     128:	32 e0       	ldi	r19, 0x02	; 2
     12a:	3a 95       	dec	r19
     12c:	f1 f7       	brne	.-4      	; 0x12a <LCD_Command+0x3a>
     12e:	00 c0       	rjmp	.+0      	; 0x130 <LCD_Command+0x40>
	_delay_us(1);
	LCD_Port &= ~ (1<<EN);
     130:	5b 98       	cbi	0x0b, 3	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     132:	8f ec       	ldi	r24, 0xCF	; 207
     134:	97 e0       	ldi	r25, 0x07	; 7
     136:	01 97       	sbiw	r24, 0x01	; 1
     138:	f1 f7       	brne	.-4      	; 0x136 <LCD_Command+0x46>
     13a:	00 c0       	rjmp	.+0      	; 0x13c <LCD_Command+0x4c>
     13c:	00 00       	nop
     13e:	08 95       	ret

00000140 <LCD_Data>:
}


void LCD_Data( unsigned char data )
{
	LCD_Port = (LCD_Port & 0x0F) | (data & 0xF0); /* sending upper nibble */
     140:	9b b1       	in	r25, 0x0b	; 11
     142:	9f 70       	andi	r25, 0x0F	; 15
     144:	28 2f       	mov	r18, r24
     146:	20 7f       	andi	r18, 0xF0	; 240
     148:	92 2b       	or	r25, r18
     14a:	9b b9       	out	0x0b, r25	; 11
	LCD_Port |= (1<<RS);		/* RS=1, data reg. */
     14c:	5a 9a       	sbi	0x0b, 2	; 11
	LCD_Port|= (1<<EN);
     14e:	5b 9a       	sbi	0x0b, 3	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     150:	e7 ec       	ldi	r30, 0xC7	; 199
     152:	f0 e0       	ldi	r31, 0x00	; 0
     154:	31 97       	sbiw	r30, 0x01	; 1
     156:	f1 f7       	brne	.-4      	; 0x154 <LCD_Data+0x14>
     158:	00 c0       	rjmp	.+0      	; 0x15a <LCD_Data+0x1a>
     15a:	00 00       	nop
	_delay_us(100);
	LCD_Port &= ~ (1<<EN);
     15c:	5b 98       	cbi	0x0b, 3	; 11
     15e:	e7 ec       	ldi	r30, 0xC7	; 199
     160:	f0 e0       	ldi	r31, 0x00	; 0
     162:	31 97       	sbiw	r30, 0x01	; 1
     164:	f1 f7       	brne	.-4      	; 0x162 <LCD_Data+0x22>
     166:	00 c0       	rjmp	.+0      	; 0x168 <LCD_Data+0x28>
     168:	00 00       	nop

	_delay_us(100);

	LCD_Port = (LCD_Port & 0x0F) | (data << 4); /* sending lower nibble */
     16a:	2b b1       	in	r18, 0x0b	; 11
     16c:	2f 70       	andi	r18, 0x0F	; 15
     16e:	f0 e1       	ldi	r31, 0x10	; 16
     170:	8f 9f       	mul	r24, r31
     172:	c0 01       	movw	r24, r0
     174:	11 24       	eor	r1, r1
     176:	82 2b       	or	r24, r18
     178:	8b b9       	out	0x0b, r24	; 11
	LCD_Port |= (1<<EN);
     17a:	5b 9a       	sbi	0x0b, 3	; 11
     17c:	87 ec       	ldi	r24, 0xC7	; 199
     17e:	90 e0       	ldi	r25, 0x00	; 0
     180:	01 97       	sbiw	r24, 0x01	; 1
     182:	f1 f7       	brne	.-4      	; 0x180 <LCD_Data+0x40>
     184:	00 c0       	rjmp	.+0      	; 0x186 <LCD_Data+0x46>
     186:	00 00       	nop
	_delay_us(100);
	LCD_Port &= ~ (1<<EN);
     188:	5b 98       	cbi	0x0b, 3	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     18a:	ef ec       	ldi	r30, 0xCF	; 207
     18c:	f7 e0       	ldi	r31, 0x07	; 7
     18e:	31 97       	sbiw	r30, 0x01	; 1
     190:	f1 f7       	brne	.-4      	; 0x18e <LCD_Data+0x4e>
     192:	00 c0       	rjmp	.+0      	; 0x194 <LCD_Data+0x54>
     194:	00 00       	nop
     196:	08 95       	ret

00000198 <LCD_Init>:
}


void LCD_Init (void)			/* LCD Initialize function */
{
	LCD_Dir = 0xFF;				/* Make LCD port direction as o/p */
     198:	8f ef       	ldi	r24, 0xFF	; 255
     19a:	8a b9       	out	0x0a, r24	; 10
     19c:	8f e3       	ldi	r24, 0x3F	; 63
     19e:	9c e9       	ldi	r25, 0x9C	; 156
     1a0:	01 97       	sbiw	r24, 0x01	; 1
     1a2:	f1 f7       	brne	.-4      	; 0x1a0 <LCD_Init+0x8>
     1a4:	00 c0       	rjmp	.+0      	; 0x1a6 <LCD_Init+0xe>
     1a6:	00 00       	nop
	_delay_ms(20);				/* LCD Power ON delay always >15ms */
	
	LCD_Command(0x02);			/* send for 4 bit initialization of LCD  */
     1a8:	82 e0       	ldi	r24, 0x02	; 2
     1aa:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_Command>
	LCD_Command(0x28);          /* 2 line, 5*7 matrix in 4-bit mode */
     1ae:	88 e2       	ldi	r24, 0x28	; 40
     1b0:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_Command>
	LCD_Command(0x0c);          /* Display on cursor off*/
     1b4:	8c e0       	ldi	r24, 0x0C	; 12
     1b6:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_Command>
	LCD_Command(0x06);          /* Increment cursor (shift cursor to right)*/
     1ba:	86 e0       	ldi	r24, 0x06	; 6
     1bc:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_Command>
	LCD_Command(0x01);          /* Clear display screen*/
     1c0:	81 e0       	ldi	r24, 0x01	; 1
     1c2:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_Command>
     1c6:	8f ec       	ldi	r24, 0xCF	; 207
     1c8:	97 e0       	ldi	r25, 0x07	; 7
     1ca:	01 97       	sbiw	r24, 0x01	; 1
     1cc:	f1 f7       	brne	.-4      	; 0x1ca <LCD_Init+0x32>
     1ce:	00 c0       	rjmp	.+0      	; 0x1d0 <LCD_Init+0x38>
     1d0:	00 00       	nop
     1d2:	08 95       	ret

000001d4 <LCD_String>:
	_delay_ms(1);
}


void LCD_String (char *str)		/* Send string to LCD function */
{
     1d4:	cf 93       	push	r28
     1d6:	df 93       	push	r29
     1d8:	ec 01       	movw	r28, r24
	int i;
	for(i=0;str[i]!=0;i++)		/* Send each char of string till the NULL */
     1da:	88 81       	ld	r24, Y
     1dc:	88 23       	and	r24, r24
     1de:	31 f0       	breq	.+12     	; 0x1ec <LCD_String+0x18>
     1e0:	21 96       	adiw	r28, 0x01	; 1
	{
		LCD_Data (str[i]);
     1e2:	0e 94 a0 00 	call	0x140	; 0x140 <LCD_Data>


void LCD_String (char *str)		/* Send string to LCD function */
{
	int i;
	for(i=0;str[i]!=0;i++)		/* Send each char of string till the NULL */
     1e6:	89 91       	ld	r24, Y+
     1e8:	81 11       	cpse	r24, r1
     1ea:	fb cf       	rjmp	.-10     	; 0x1e2 <LCD_String+0xe>
	{
		LCD_Data (str[i]);
	}
}
     1ec:	df 91       	pop	r29
     1ee:	cf 91       	pop	r28
     1f0:	08 95       	ret

000001f2 <LCD_Clear>:

void LCD_Clear()
{
	LCD_Command (0x01);		/* Clear display */
     1f2:	81 e0       	ldi	r24, 0x01	; 1
     1f4:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_Command>
     1f8:	8f ec       	ldi	r24, 0xCF	; 207
     1fa:	97 e0       	ldi	r25, 0x07	; 7
     1fc:	01 97       	sbiw	r24, 0x01	; 1
     1fe:	f1 f7       	brne	.-4      	; 0x1fc <LCD_Clear+0xa>
     200:	00 c0       	rjmp	.+0      	; 0x202 <LCD_Clear+0x10>
     202:	00 00       	nop
	_delay_ms(1);
	LCD_Command (0x80);		/* Cursor at home position */
     204:	80 e8       	ldi	r24, 0x80	; 128
     206:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_Command>
     20a:	08 95       	ret

0000020c <keypad_Init>:
}

/* 4x4 MATRIX KEYPAD initialize */
void keypad_Init()
{
	KEYPAD_DDR = 0x00;
     20c:	14 b8       	out	0x04, r1	; 4
	KEYPAD_PORT = 0xFF;
     20e:	8f ef       	ldi	r24, 0xFF	; 255
     210:	85 b9       	out	0x05, r24	; 5
     212:	08 95       	ret

00000214 <readKeypad>:
	int i;
	char buffer[5];
	
	//while(vote == 0);
	//{
	for(i=0;i<4;i++)
     214:	60 e0       	ldi	r22, 0x00	; 0
     216:	70 e0       	ldi	r23, 0x00	; 0
	KEYPAD_PORT = 0xFF;
}

uint16_t readKeypad()
{
	uint16_t key = 0;
     218:	40 e0       	ldi	r20, 0x00	; 0
     21a:	50 e0       	ldi	r21, 0x00	; 0
	{
		key = key<<4;
		_delay_ms(200);
			
		// scan 1st row: set PB0 as ground
		KEYPAD_DDR |= (1<<i);
     21c:	e1 e0       	ldi	r30, 0x01	; 1
     21e:	f0 e0       	ldi	r31, 0x00	; 0
	
	//while(vote == 0);
	//{
	for(i=0;i<4;i++)
	{
		key = key<<4;
     220:	42 95       	swap	r20
     222:	52 95       	swap	r21
     224:	50 7f       	andi	r21, 0xF0	; 240
     226:	54 27       	eor	r21, r20
     228:	40 7f       	andi	r20, 0xF0	; 240
     22a:	54 27       	eor	r21, r20
     22c:	2f ef       	ldi	r18, 0xFF	; 255
     22e:	81 ee       	ldi	r24, 0xE1	; 225
     230:	94 e0       	ldi	r25, 0x04	; 4
     232:	21 50       	subi	r18, 0x01	; 1
     234:	80 40       	sbci	r24, 0x00	; 0
     236:	90 40       	sbci	r25, 0x00	; 0
     238:	e1 f7       	brne	.-8      	; 0x232 <readKeypad+0x1e>
     23a:	00 c0       	rjmp	.+0      	; 0x23c <readKeypad+0x28>
     23c:	00 00       	nop
		_delay_ms(200);
			
		// scan 1st row: set PB0 as ground
		KEYPAD_DDR |= (1<<i);
     23e:	84 b1       	in	r24, 0x04	; 4
     240:	9f 01       	movw	r18, r30
     242:	06 2e       	mov	r0, r22
     244:	02 c0       	rjmp	.+4      	; 0x24a <readKeypad+0x36>
     246:	22 0f       	add	r18, r18
     248:	33 1f       	adc	r19, r19
     24a:	0a 94       	dec	r0
     24c:	e2 f7       	brpl	.-8      	; 0x246 <readKeypad+0x32>
     24e:	82 2b       	or	r24, r18
     250:	84 b9       	out	0x04, r24	; 4
		KEYPAD_PORT &= ~(1<<i);
     252:	85 b1       	in	r24, 0x05	; 5
     254:	92 2f       	mov	r25, r18
     256:	90 95       	com	r25
     258:	89 23       	and	r24, r25
     25a:	85 b9       	out	0x05, r24	; 5
			
		//read data from PIN4:7 (so AND for delete 4LSB and shift right 4 positions)
		key |= (KEYPAD_PIN & 0xF0) >> 4;
     25c:	83 b1       	in	r24, 0x03	; 3
     25e:	82 95       	swap	r24
     260:	8f 70       	andi	r24, 0x0F	; 15
     262:	48 2b       	or	r20, r24
			
		KEYPAD_DDR &= ~(1<<i);
     264:	84 b1       	in	r24, 0x04	; 4
     266:	98 23       	and	r25, r24
     268:	94 b9       	out	0x04, r25	; 4
		KEYPAD_PORT |= (1<<i);
     26a:	85 b1       	in	r24, 0x05	; 5
     26c:	28 2b       	or	r18, r24
     26e:	25 b9       	out	0x05, r18	; 5
	int i;
	char buffer[5];
	
	//while(vote == 0);
	//{
	for(i=0;i<4;i++)
     270:	6f 5f       	subi	r22, 0xFF	; 255
     272:	7f 4f       	sbci	r23, 0xFF	; 255
     274:	64 30       	cpi	r22, 0x04	; 4
     276:	71 05       	cpc	r23, r1
     278:	99 f6       	brne	.-90     	; 0x220 <readKeypad+0xc>
			vote = 1;
		}
	}*/
				
	return key;
}
     27a:	ca 01       	movw	r24, r20
     27c:	08 95       	ret

0000027e <Initialize>:
	return showID;
}
*/
void Initialize()
{
	DDRC = 0b00000011;
     27e:	83 e0       	ldi	r24, 0x03	; 3
     280:	87 b9       	out	0x07, r24	; 7
	
	keypad_Init();
     282:	0e 94 06 01 	call	0x20c	; 0x20c <keypad_Init>
	//USART_Init(6);
	LCD_Init();
     286:	0e 94 cc 00 	call	0x198	; 0x198 <LCD_Init>
     28a:	08 95       	ret

0000028c <main>:
}

int main(void)
{
     28c:	cf 93       	push	r28
     28e:	df 93       	push	r29
     290:	cd b7       	in	r28, 0x3d	; 61
     292:	de b7       	in	r29, 0x3e	; 62
     294:	aa 97       	sbiw	r28, 0x2a	; 42
     296:	0f b6       	in	r0, 0x3f	; 63
     298:	f8 94       	cli
     29a:	de bf       	out	0x3e, r29	; 62
     29c:	0f be       	out	0x3f, r0	; 63
     29e:	cd bf       	out	0x3d, r28	; 61
     2a0:	ce 01       	movw	r24, r28
     2a2:	81 96       	adiw	r24, 0x21	; 33
     2a4:	fe 01       	movw	r30, r28
     2a6:	31 96       	adiw	r30, 0x01	; 1
	int i=0;
	uint16_t key;
	
	for(i=0;i<16;i++)
	{
		vote[i] = 0;
     2a8:	11 92       	st	Z+, r1
     2aa:	11 92       	st	Z+, r1
	int vote[16];
	//char showID[4];
	int i=0;
	uint16_t key;
	
	for(i=0;i<16;i++)
     2ac:	e8 17       	cp	r30, r24
     2ae:	f9 07       	cpc	r31, r25
     2b0:	d9 f7       	brne	.-10     	; 0x2a8 <main+0x1c>
	{
		vote[i] = 0;
	}
		
	Initialize();
     2b2:	0e 94 3f 01 	call	0x27e	; 0x27e <Initialize>
	
	LCD_String ("RFID NUMBER"); 	//sending string
     2b6:	80 e0       	ldi	r24, 0x00	; 0
     2b8:	91 e0       	ldi	r25, 0x01	; 1
     2ba:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <LCD_String>
	LCD_Command(0x80 + 0x40 + 0);	//moving courser to second line
     2be:	80 ec       	ldi	r24, 0xC0	; 192
     2c0:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_Command>
		
		key = ~readKeypad();
		PORTC |= (1<<PINC1);
		key = 1 + log(key)/log(1.99);
						
		for(i=1;i<=16;i++)
     2c4:	22 24       	eor	r2, r2
     2c6:	23 94       	inc	r2
     2c8:	31 2c       	mov	r3, r1
		char buffer[5];
		char buffer2[5];
		for(i=0;i<16;i=i+4)
		{
			LCD_Command(0x80 + 0);
			sprintf(buffer, "%u", i+1);
     2ca:	05 e2       	ldi	r16, 0x25	; 37
     2cc:	11 e0       	ldi	r17, 0x01	; 1
     2ce:	4e 01       	movw	r8, r28
     2d0:	26 e2       	ldi	r18, 0x26	; 38
     2d2:	82 0e       	add	r8, r18
     2d4:	91 1c       	adc	r9, r1
			LCD_String(buffer);
			LCD_String("=");
			LCD_Command(0x80 + 3);
			sprintf(buffer2, "%u", vote[i]);
     2d6:	5e 01       	movw	r10, r28
     2d8:	81 e2       	ldi	r24, 0x21	; 33
     2da:	a8 0e       	add	r10, r24
     2dc:	b1 1c       	adc	r11, r1
		char buffer[5];
		char buffer2[5];
		for(i=0;i<16;i=i+4)
		{
			LCD_Command(0x80 + 0);
			sprintf(buffer, "%u", i+1);
     2de:	48 2c       	mov	r4, r8
     2e0:	59 2c       	mov	r5, r9
			LCD_String(buffer);
			LCD_String("=");
			LCD_Command(0x80 + 3);
			sprintf(buffer2, "%u", vote[i]);
     2e2:	6a 2c       	mov	r6, r10
     2e4:	7b 2c       	mov	r7, r11
	LCD_Command(0x80 + 0x40 + 0);	//moving courser to second line
	
	while (1) 
    {
		//showID = RC522_Read();
		PORTC |= (1<<PINC0);
     2e6:	40 9a       	sbi	0x08, 0	; 8
		LCD_String ("II");
     2e8:	8c e0       	ldi	r24, 0x0C	; 12
     2ea:	91 e0       	ldi	r25, 0x01	; 1
     2ec:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <LCD_String>
     2f0:	9f e7       	ldi	r25, 0x7F	; 127
     2f2:	e8 e3       	ldi	r30, 0x38	; 56
     2f4:	f1 e0       	ldi	r31, 0x01	; 1
     2f6:	91 50       	subi	r25, 0x01	; 1
     2f8:	e0 40       	sbci	r30, 0x00	; 0
     2fa:	f0 40       	sbci	r31, 0x00	; 0
     2fc:	e1 f7       	brne	.-8      	; 0x2f6 <main+0x6a>
     2fe:	00 c0       	rjmp	.+0      	; 0x300 <main+0x74>
     300:	00 00       	nop
		_delay_ms(50);
		
		LCD_Command(0x80 + 0);
     302:	80 e8       	ldi	r24, 0x80	; 128
     304:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_Command>
		LCD_String("PLEASE VOTE");
     308:	8f e0       	ldi	r24, 0x0F	; 15
     30a:	91 e0       	ldi	r25, 0x01	; 1
     30c:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <LCD_String>
		
		key = ~readKeypad();
     310:	0e 94 0a 01 	call	0x214	; 0x214 <readKeypad>
		PORTC |= (1<<PINC1);
     314:	41 9a       	sbi	0x08, 1	; 8
		key = 1 + log(key)/log(1.99);
     316:	80 95       	com	r24
     318:	90 95       	com	r25
     31a:	bc 01       	movw	r22, r24
     31c:	80 e0       	ldi	r24, 0x00	; 0
     31e:	90 e0       	ldi	r25, 0x00	; 0
     320:	0e 94 c4 03 	call	0x788	; 0x788 <__floatunsisf>
     324:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <log>
     328:	28 e9       	ldi	r18, 0x98	; 152
     32a:	39 e2       	ldi	r19, 0x29	; 41
     32c:	40 e3       	ldi	r20, 0x30	; 48
     32e:	5f e3       	ldi	r21, 0x3F	; 63
     330:	0e 94 23 03 	call	0x646	; 0x646 <__divsf3>
     334:	20 e0       	ldi	r18, 0x00	; 0
     336:	30 e0       	ldi	r19, 0x00	; 0
     338:	40 e8       	ldi	r20, 0x80	; 128
     33a:	5f e3       	ldi	r21, 0x3F	; 63
     33c:	0e 94 b7 02 	call	0x56e	; 0x56e <__addsf3>
     340:	0e 94 95 03 	call	0x72a	; 0x72a <__fixunssfsi>
						
		for(i=1;i<=16;i++)
		{
			if(key == i)
     344:	61 30       	cpi	r22, 0x01	; 1
     346:	71 05       	cpc	r23, r1
     348:	31 f0       	breq	.+12     	; 0x356 <main+0xca>
		
		key = ~readKeypad();
		PORTC |= (1<<PINC1);
		key = 1 + log(key)/log(1.99);
						
		for(i=1;i<=16;i++)
     34a:	82 e0       	ldi	r24, 0x02	; 2
     34c:	90 e0       	ldi	r25, 0x00	; 0
		{
			if(key == i)
     34e:	86 17       	cp	r24, r22
     350:	97 07       	cpc	r25, r23
     352:	a1 f4       	brne	.+40     	; 0x37c <main+0xf0>
     354:	02 c0       	rjmp	.+4      	; 0x35a <main+0xce>
		
		key = ~readKeypad();
		PORTC |= (1<<PINC1);
		key = 1 + log(key)/log(1.99);
						
		for(i=1;i<=16;i++)
     356:	62 2d       	mov	r22, r2
     358:	73 2d       	mov	r23, r3
		{
			if(key == i)
			{
				vote[i-1]++;
     35a:	61 50       	subi	r22, 0x01	; 1
     35c:	71 09       	sbc	r23, r1
     35e:	fb 01       	movw	r30, r22
     360:	ee 0f       	add	r30, r30
     362:	ff 1f       	adc	r31, r31
     364:	81 e0       	ldi	r24, 0x01	; 1
     366:	90 e0       	ldi	r25, 0x00	; 0
     368:	8c 0f       	add	r24, r28
     36a:	9d 1f       	adc	r25, r29
     36c:	e8 0f       	add	r30, r24
     36e:	f9 1f       	adc	r31, r25
     370:	80 81       	ld	r24, Z
     372:	91 81       	ldd	r25, Z+1	; 0x01
     374:	01 96       	adiw	r24, 0x01	; 1
     376:	91 83       	std	Z+1, r25	; 0x01
     378:	80 83       	st	Z, r24
				break;
     37a:	04 c0       	rjmp	.+8      	; 0x384 <main+0xf8>
		
		key = ~readKeypad();
		PORTC |= (1<<PINC1);
		key = 1 + log(key)/log(1.99);
						
		for(i=1;i<=16;i++)
     37c:	01 96       	adiw	r24, 0x01	; 1
     37e:	81 31       	cpi	r24, 0x11	; 17
     380:	91 05       	cpc	r25, r1
     382:	29 f7       	brne	.-54     	; 0x34e <main+0xc2>
				vote[i-1]++;
				break;
			}
		}
		
		LCD_Command(0x80 + 0);
     384:	80 e8       	ldi	r24, 0x80	; 128
     386:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_Command>
		LCD_String("THANK YOU");
     38a:	8b e1       	ldi	r24, 0x1B	; 27
     38c:	91 e0       	ldi	r25, 0x01	; 1
     38e:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <LCD_String>
     392:	ef e3       	ldi	r30, 0x3F	; 63
     394:	fc e9       	ldi	r31, 0x9C	; 156
     396:	31 97       	sbiw	r30, 0x01	; 1
     398:	f1 f7       	brne	.-4      	; 0x396 <main+0x10a>
     39a:	00 c0       	rjmp	.+0      	; 0x39c <main+0x110>
     39c:	00 00       	nop
		_delay_ms(20);
		
		LCD_Clear();
     39e:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <LCD_Clear>
     3a2:	ce 01       	movw	r24, r28
     3a4:	01 96       	adiw	r24, 0x01	; 1
     3a6:	7c 01       	movw	r14, r24
		char buffer[5];
		char buffer2[5];
		for(i=0;i<16;i=i+4)
     3a8:	c1 2c       	mov	r12, r1
     3aa:	d1 2c       	mov	r13, r1
		{
			LCD_Command(0x80 + 0);
     3ac:	80 e8       	ldi	r24, 0x80	; 128
     3ae:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_Command>
			sprintf(buffer, "%u", i+1);
     3b2:	c6 01       	movw	r24, r12
     3b4:	01 96       	adiw	r24, 0x01	; 1
     3b6:	9f 93       	push	r25
     3b8:	8f 93       	push	r24
     3ba:	1f 93       	push	r17
     3bc:	0f 93       	push	r16
     3be:	9f 92       	push	r9
     3c0:	8f 92       	push	r8
     3c2:	0e 94 40 05 	call	0xa80	; 0xa80 <sprintf>
			LCD_String(buffer);
     3c6:	84 2d       	mov	r24, r4
     3c8:	95 2d       	mov	r25, r5
     3ca:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <LCD_String>
			LCD_String("=");
     3ce:	88 e2       	ldi	r24, 0x28	; 40
     3d0:	91 e0       	ldi	r25, 0x01	; 1
     3d2:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <LCD_String>
			LCD_Command(0x80 + 3);
     3d6:	83 e8       	ldi	r24, 0x83	; 131
     3d8:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_Command>
			sprintf(buffer2, "%u", vote[i]);
     3dc:	f7 01       	movw	r30, r14
     3de:	81 81       	ldd	r24, Z+1	; 0x01
     3e0:	8f 93       	push	r24
     3e2:	80 81       	ld	r24, Z
     3e4:	8f 93       	push	r24
     3e6:	1f 93       	push	r17
     3e8:	0f 93       	push	r16
     3ea:	bf 92       	push	r11
     3ec:	af 92       	push	r10
     3ee:	0e 94 40 05 	call	0xa80	; 0xa80 <sprintf>
			LCD_String(buffer2);
     3f2:	86 2d       	mov	r24, r6
     3f4:	97 2d       	mov	r25, r7
     3f6:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <LCD_String>
     3fa:	8f e1       	ldi	r24, 0x1F	; 31
     3fc:	9e e4       	ldi	r25, 0x4E	; 78
     3fe:	01 97       	sbiw	r24, 0x01	; 1
     400:	f1 f7       	brne	.-4      	; 0x3fe <main+0x172>
     402:	00 c0       	rjmp	.+0      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
     404:	00 00       	nop
			_delay_ms(10);
			LCD_Command(0x80 + 9);
     406:	89 e8       	ldi	r24, 0x89	; 137
     408:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_Command>
			sprintf(buffer, "%u", i+2);
     40c:	c6 01       	movw	r24, r12
     40e:	02 96       	adiw	r24, 0x02	; 2
     410:	9f 93       	push	r25
     412:	8f 93       	push	r24
     414:	1f 93       	push	r17
     416:	0f 93       	push	r16
     418:	9f 92       	push	r9
     41a:	8f 92       	push	r8
     41c:	0e 94 40 05 	call	0xa80	; 0xa80 <sprintf>
			LCD_String(buffer);
     420:	84 2d       	mov	r24, r4
     422:	95 2d       	mov	r25, r5
     424:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <LCD_String>
			LCD_String("=");
     428:	88 e2       	ldi	r24, 0x28	; 40
     42a:	91 e0       	ldi	r25, 0x01	; 1
     42c:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <LCD_String>
			LCD_Command(0x80 + 11);
     430:	8b e8       	ldi	r24, 0x8B	; 139
     432:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_Command>
			sprintf(buffer2, "%u", vote[i+1]);
     436:	f7 01       	movw	r30, r14
     438:	83 81       	ldd	r24, Z+3	; 0x03
     43a:	8f 93       	push	r24
     43c:	82 81       	ldd	r24, Z+2	; 0x02
     43e:	8f 93       	push	r24
     440:	1f 93       	push	r17
     442:	0f 93       	push	r16
     444:	bf 92       	push	r11
     446:	af 92       	push	r10
     448:	0e 94 40 05 	call	0xa80	; 0xa80 <sprintf>
			LCD_String(buffer2);
     44c:	86 2d       	mov	r24, r6
     44e:	97 2d       	mov	r25, r7
     450:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <LCD_String>
     454:	8f e1       	ldi	r24, 0x1F	; 31
     456:	9e e4       	ldi	r25, 0x4E	; 78
     458:	01 97       	sbiw	r24, 0x01	; 1
     45a:	f1 f7       	brne	.-4      	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
     45c:	00 c0       	rjmp	.+0      	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
     45e:	00 00       	nop
			_delay_ms(10);
			LCD_Command(0x80 + 0x40 + 0);
     460:	80 ec       	ldi	r24, 0xC0	; 192
     462:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_Command>
			sprintf(buffer, "%u", i+3);
     466:	c6 01       	movw	r24, r12
     468:	03 96       	adiw	r24, 0x03	; 3
     46a:	9f 93       	push	r25
     46c:	8f 93       	push	r24
     46e:	1f 93       	push	r17
     470:	0f 93       	push	r16
     472:	9f 92       	push	r9
     474:	8f 92       	push	r8
     476:	0e 94 40 05 	call	0xa80	; 0xa80 <sprintf>
			LCD_String(buffer);
     47a:	84 2d       	mov	r24, r4
     47c:	95 2d       	mov	r25, r5
     47e:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <LCD_String>
			LCD_String("=");
     482:	88 e2       	ldi	r24, 0x28	; 40
     484:	91 e0       	ldi	r25, 0x01	; 1
     486:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <LCD_String>
			LCD_Command(0x80 + 0x40 + 3);
     48a:	83 ec       	ldi	r24, 0xC3	; 195
     48c:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_Command>
			sprintf(buffer2, "%u", vote[i+2]);
     490:	f7 01       	movw	r30, r14
     492:	85 81       	ldd	r24, Z+5	; 0x05
     494:	8f 93       	push	r24
     496:	84 81       	ldd	r24, Z+4	; 0x04
     498:	8f 93       	push	r24
     49a:	1f 93       	push	r17
     49c:	0f 93       	push	r16
     49e:	bf 92       	push	r11
     4a0:	af 92       	push	r10
     4a2:	0e 94 40 05 	call	0xa80	; 0xa80 <sprintf>
			LCD_String(buffer2);
     4a6:	0f b6       	in	r0, 0x3f	; 63
     4a8:	f8 94       	cli
     4aa:	de bf       	out	0x3e, r29	; 62
     4ac:	0f be       	out	0x3f, r0	; 63
     4ae:	cd bf       	out	0x3d, r28	; 61
     4b0:	86 2d       	mov	r24, r6
     4b2:	97 2d       	mov	r25, r7
     4b4:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <LCD_String>
     4b8:	ef e1       	ldi	r30, 0x1F	; 31
     4ba:	fe e4       	ldi	r31, 0x4E	; 78
     4bc:	31 97       	sbiw	r30, 0x01	; 1
     4be:	f1 f7       	brne	.-4      	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
     4c0:	00 c0       	rjmp	.+0      	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
     4c2:	00 00       	nop
			_delay_ms(10);
			LCD_Command(0x80 + 0x40 + 9);
     4c4:	89 ec       	ldi	r24, 0xC9	; 201
     4c6:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_Command>
			sprintf(buffer, "%u", i+4);
     4ca:	f4 e0       	ldi	r31, 0x04	; 4
     4cc:	cf 0e       	add	r12, r31
     4ce:	d1 1c       	adc	r13, r1
     4d0:	df 92       	push	r13
     4d2:	cf 92       	push	r12
     4d4:	1f 93       	push	r17
     4d6:	0f 93       	push	r16
     4d8:	9f 92       	push	r9
     4da:	8f 92       	push	r8
     4dc:	0e 94 40 05 	call	0xa80	; 0xa80 <sprintf>
			LCD_String(buffer);
     4e0:	84 2d       	mov	r24, r4
     4e2:	95 2d       	mov	r25, r5
     4e4:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <LCD_String>
			LCD_String("=");
     4e8:	88 e2       	ldi	r24, 0x28	; 40
     4ea:	91 e0       	ldi	r25, 0x01	; 1
     4ec:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <LCD_String>
			LCD_Command(0x80 + 0x40 + 11);
     4f0:	8b ec       	ldi	r24, 0xCB	; 203
     4f2:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_Command>
			sprintf(buffer2, "%u", vote[i+3]);
     4f6:	f7 01       	movw	r30, r14
     4f8:	87 81       	ldd	r24, Z+7	; 0x07
     4fa:	8f 93       	push	r24
     4fc:	86 81       	ldd	r24, Z+6	; 0x06
     4fe:	8f 93       	push	r24
     500:	1f 93       	push	r17
     502:	0f 93       	push	r16
     504:	bf 92       	push	r11
     506:	af 92       	push	r10
     508:	0e 94 40 05 	call	0xa80	; 0xa80 <sprintf>
			LCD_String(buffer2);
     50c:	86 2d       	mov	r24, r6
     50e:	97 2d       	mov	r25, r7
     510:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <LCD_String>
     514:	ff ef       	ldi	r31, 0xFF	; 255
     516:	23 ec       	ldi	r18, 0xC3	; 195
     518:	89 e0       	ldi	r24, 0x09	; 9
     51a:	f1 50       	subi	r31, 0x01	; 1
     51c:	20 40       	sbci	r18, 0x00	; 0
     51e:	80 40       	sbci	r24, 0x00	; 0
     520:	e1 f7       	brne	.-8      	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
     522:	00 c0       	rjmp	.+0      	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
     524:	00 00       	nop
     526:	98 e0       	ldi	r25, 0x08	; 8
     528:	e9 0e       	add	r14, r25
     52a:	f1 1c       	adc	r15, r1
		_delay_ms(20);
		
		LCD_Clear();
		char buffer[5];
		char buffer2[5];
		for(i=0;i<16;i=i+4)
     52c:	0f b6       	in	r0, 0x3f	; 63
     52e:	f8 94       	cli
     530:	de bf       	out	0x3e, r29	; 62
     532:	0f be       	out	0x3f, r0	; 63
     534:	cd bf       	out	0x3d, r28	; 61
     536:	f0 e1       	ldi	r31, 0x10	; 16
     538:	cf 16       	cp	r12, r31
     53a:	d1 04       	cpc	r13, r1
     53c:	09 f0       	breq	.+2      	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
     53e:	36 cf       	rjmp	.-404    	; 0x3ac <main+0x120>
			sprintf(buffer2, "%u", vote[i+3]);
			LCD_String(buffer2);
			_delay_ms(400);
		}
		
		PORTC &= ~(1<<PINC0) & ~(1<<PINC1);
     540:	88 b1       	in	r24, 0x08	; 8
     542:	8c 7f       	andi	r24, 0xFC	; 252
     544:	88 b9       	out	0x08, r24	; 8
     546:	2f e7       	ldi	r18, 0x7F	; 127
     548:	8a e1       	ldi	r24, 0x1A	; 26
     54a:	96 e0       	ldi	r25, 0x06	; 6
     54c:	21 50       	subi	r18, 0x01	; 1
     54e:	80 40       	sbci	r24, 0x00	; 0
     550:	90 40       	sbci	r25, 0x00	; 0
     552:	e1 f7       	brne	.-8      	; 0x54c <__LOCK_REGION_LENGTH__+0x14c>
     554:	00 c0       	rjmp	.+0      	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
     556:	00 00       	nop
		_delay_ms(250);
		
		LCD_Clear();
     558:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <LCD_Clear>
		LCD_String ("RFID NUMBER"); 	
     55c:	80 e0       	ldi	r24, 0x00	; 0
     55e:	91 e0       	ldi	r25, 0x01	; 1
     560:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <LCD_String>
		LCD_Command(0x80 + 0x40 + 0);
     564:	80 ec       	ldi	r24, 0xC0	; 192
     566:	0e 94 78 00 	call	0xf0	; 0xf0 <LCD_Command>
		
    }
     56a:	bd ce       	rjmp	.-646    	; 0x2e6 <main+0x5a>

0000056c <__subsf3>:
     56c:	50 58       	subi	r21, 0x80	; 128

0000056e <__addsf3>:
     56e:	bb 27       	eor	r27, r27
     570:	aa 27       	eor	r26, r26
     572:	0e 94 ce 02 	call	0x59c	; 0x59c <__addsf3x>
     576:	0c 94 18 04 	jmp	0x830	; 0x830 <__fp_round>
     57a:	0e 94 0a 04 	call	0x814	; 0x814 <__fp_pscA>
     57e:	38 f0       	brcs	.+14     	; 0x58e <__addsf3+0x20>
     580:	0e 94 11 04 	call	0x822	; 0x822 <__fp_pscB>
     584:	20 f0       	brcs	.+8      	; 0x58e <__addsf3+0x20>
     586:	39 f4       	brne	.+14     	; 0x596 <__addsf3+0x28>
     588:	9f 3f       	cpi	r25, 0xFF	; 255
     58a:	19 f4       	brne	.+6      	; 0x592 <__addsf3+0x24>
     58c:	26 f4       	brtc	.+8      	; 0x596 <__addsf3+0x28>
     58e:	0c 94 07 04 	jmp	0x80e	; 0x80e <__fp_nan>
     592:	0e f4       	brtc	.+2      	; 0x596 <__addsf3+0x28>
     594:	e0 95       	com	r30
     596:	e7 fb       	bst	r30, 7
     598:	0c 94 01 04 	jmp	0x802	; 0x802 <__fp_inf>

0000059c <__addsf3x>:
     59c:	e9 2f       	mov	r30, r25
     59e:	0e 94 29 04 	call	0x852	; 0x852 <__fp_split3>
     5a2:	58 f3       	brcs	.-42     	; 0x57a <__addsf3+0xc>
     5a4:	ba 17       	cp	r27, r26
     5a6:	62 07       	cpc	r22, r18
     5a8:	73 07       	cpc	r23, r19
     5aa:	84 07       	cpc	r24, r20
     5ac:	95 07       	cpc	r25, r21
     5ae:	20 f0       	brcs	.+8      	; 0x5b8 <__addsf3x+0x1c>
     5b0:	79 f4       	brne	.+30     	; 0x5d0 <__addsf3x+0x34>
     5b2:	a6 f5       	brtc	.+104    	; 0x61c <__addsf3x+0x80>
     5b4:	0c 94 4b 04 	jmp	0x896	; 0x896 <__fp_zero>
     5b8:	0e f4       	brtc	.+2      	; 0x5bc <__addsf3x+0x20>
     5ba:	e0 95       	com	r30
     5bc:	0b 2e       	mov	r0, r27
     5be:	ba 2f       	mov	r27, r26
     5c0:	a0 2d       	mov	r26, r0
     5c2:	0b 01       	movw	r0, r22
     5c4:	b9 01       	movw	r22, r18
     5c6:	90 01       	movw	r18, r0
     5c8:	0c 01       	movw	r0, r24
     5ca:	ca 01       	movw	r24, r20
     5cc:	a0 01       	movw	r20, r0
     5ce:	11 24       	eor	r1, r1
     5d0:	ff 27       	eor	r31, r31
     5d2:	59 1b       	sub	r21, r25
     5d4:	99 f0       	breq	.+38     	; 0x5fc <__addsf3x+0x60>
     5d6:	59 3f       	cpi	r21, 0xF9	; 249
     5d8:	50 f4       	brcc	.+20     	; 0x5ee <__addsf3x+0x52>
     5da:	50 3e       	cpi	r21, 0xE0	; 224
     5dc:	68 f1       	brcs	.+90     	; 0x638 <__addsf3x+0x9c>
     5de:	1a 16       	cp	r1, r26
     5e0:	f0 40       	sbci	r31, 0x00	; 0
     5e2:	a2 2f       	mov	r26, r18
     5e4:	23 2f       	mov	r18, r19
     5e6:	34 2f       	mov	r19, r20
     5e8:	44 27       	eor	r20, r20
     5ea:	58 5f       	subi	r21, 0xF8	; 248
     5ec:	f3 cf       	rjmp	.-26     	; 0x5d4 <__addsf3x+0x38>
     5ee:	46 95       	lsr	r20
     5f0:	37 95       	ror	r19
     5f2:	27 95       	ror	r18
     5f4:	a7 95       	ror	r26
     5f6:	f0 40       	sbci	r31, 0x00	; 0
     5f8:	53 95       	inc	r21
     5fa:	c9 f7       	brne	.-14     	; 0x5ee <__addsf3x+0x52>
     5fc:	7e f4       	brtc	.+30     	; 0x61c <__addsf3x+0x80>
     5fe:	1f 16       	cp	r1, r31
     600:	ba 0b       	sbc	r27, r26
     602:	62 0b       	sbc	r22, r18
     604:	73 0b       	sbc	r23, r19
     606:	84 0b       	sbc	r24, r20
     608:	ba f0       	brmi	.+46     	; 0x638 <__addsf3x+0x9c>
     60a:	91 50       	subi	r25, 0x01	; 1
     60c:	a1 f0       	breq	.+40     	; 0x636 <__addsf3x+0x9a>
     60e:	ff 0f       	add	r31, r31
     610:	bb 1f       	adc	r27, r27
     612:	66 1f       	adc	r22, r22
     614:	77 1f       	adc	r23, r23
     616:	88 1f       	adc	r24, r24
     618:	c2 f7       	brpl	.-16     	; 0x60a <__addsf3x+0x6e>
     61a:	0e c0       	rjmp	.+28     	; 0x638 <__addsf3x+0x9c>
     61c:	ba 0f       	add	r27, r26
     61e:	62 1f       	adc	r22, r18
     620:	73 1f       	adc	r23, r19
     622:	84 1f       	adc	r24, r20
     624:	48 f4       	brcc	.+18     	; 0x638 <__addsf3x+0x9c>
     626:	87 95       	ror	r24
     628:	77 95       	ror	r23
     62a:	67 95       	ror	r22
     62c:	b7 95       	ror	r27
     62e:	f7 95       	ror	r31
     630:	9e 3f       	cpi	r25, 0xFE	; 254
     632:	08 f0       	brcs	.+2      	; 0x636 <__addsf3x+0x9a>
     634:	b0 cf       	rjmp	.-160    	; 0x596 <__addsf3+0x28>
     636:	93 95       	inc	r25
     638:	88 0f       	add	r24, r24
     63a:	08 f0       	brcs	.+2      	; 0x63e <__addsf3x+0xa2>
     63c:	99 27       	eor	r25, r25
     63e:	ee 0f       	add	r30, r30
     640:	97 95       	ror	r25
     642:	87 95       	ror	r24
     644:	08 95       	ret

00000646 <__divsf3>:
     646:	0e 94 37 03 	call	0x66e	; 0x66e <__divsf3x>
     64a:	0c 94 18 04 	jmp	0x830	; 0x830 <__fp_round>
     64e:	0e 94 11 04 	call	0x822	; 0x822 <__fp_pscB>
     652:	58 f0       	brcs	.+22     	; 0x66a <__divsf3+0x24>
     654:	0e 94 0a 04 	call	0x814	; 0x814 <__fp_pscA>
     658:	40 f0       	brcs	.+16     	; 0x66a <__divsf3+0x24>
     65a:	29 f4       	brne	.+10     	; 0x666 <__divsf3+0x20>
     65c:	5f 3f       	cpi	r21, 0xFF	; 255
     65e:	29 f0       	breq	.+10     	; 0x66a <__divsf3+0x24>
     660:	0c 94 01 04 	jmp	0x802	; 0x802 <__fp_inf>
     664:	51 11       	cpse	r21, r1
     666:	0c 94 4c 04 	jmp	0x898	; 0x898 <__fp_szero>
     66a:	0c 94 07 04 	jmp	0x80e	; 0x80e <__fp_nan>

0000066e <__divsf3x>:
     66e:	0e 94 29 04 	call	0x852	; 0x852 <__fp_split3>
     672:	68 f3       	brcs	.-38     	; 0x64e <__divsf3+0x8>

00000674 <__divsf3_pse>:
     674:	99 23       	and	r25, r25
     676:	b1 f3       	breq	.-20     	; 0x664 <__divsf3+0x1e>
     678:	55 23       	and	r21, r21
     67a:	91 f3       	breq	.-28     	; 0x660 <__divsf3+0x1a>
     67c:	95 1b       	sub	r25, r21
     67e:	55 0b       	sbc	r21, r21
     680:	bb 27       	eor	r27, r27
     682:	aa 27       	eor	r26, r26
     684:	62 17       	cp	r22, r18
     686:	73 07       	cpc	r23, r19
     688:	84 07       	cpc	r24, r20
     68a:	38 f0       	brcs	.+14     	; 0x69a <__divsf3_pse+0x26>
     68c:	9f 5f       	subi	r25, 0xFF	; 255
     68e:	5f 4f       	sbci	r21, 0xFF	; 255
     690:	22 0f       	add	r18, r18
     692:	33 1f       	adc	r19, r19
     694:	44 1f       	adc	r20, r20
     696:	aa 1f       	adc	r26, r26
     698:	a9 f3       	breq	.-22     	; 0x684 <__divsf3_pse+0x10>
     69a:	35 d0       	rcall	.+106    	; 0x706 <__divsf3_pse+0x92>
     69c:	0e 2e       	mov	r0, r30
     69e:	3a f0       	brmi	.+14     	; 0x6ae <__divsf3_pse+0x3a>
     6a0:	e0 e8       	ldi	r30, 0x80	; 128
     6a2:	32 d0       	rcall	.+100    	; 0x708 <__divsf3_pse+0x94>
     6a4:	91 50       	subi	r25, 0x01	; 1
     6a6:	50 40       	sbci	r21, 0x00	; 0
     6a8:	e6 95       	lsr	r30
     6aa:	00 1c       	adc	r0, r0
     6ac:	ca f7       	brpl	.-14     	; 0x6a0 <__divsf3_pse+0x2c>
     6ae:	2b d0       	rcall	.+86     	; 0x706 <__divsf3_pse+0x92>
     6b0:	fe 2f       	mov	r31, r30
     6b2:	29 d0       	rcall	.+82     	; 0x706 <__divsf3_pse+0x92>
     6b4:	66 0f       	add	r22, r22
     6b6:	77 1f       	adc	r23, r23
     6b8:	88 1f       	adc	r24, r24
     6ba:	bb 1f       	adc	r27, r27
     6bc:	26 17       	cp	r18, r22
     6be:	37 07       	cpc	r19, r23
     6c0:	48 07       	cpc	r20, r24
     6c2:	ab 07       	cpc	r26, r27
     6c4:	b0 e8       	ldi	r27, 0x80	; 128
     6c6:	09 f0       	breq	.+2      	; 0x6ca <__divsf3_pse+0x56>
     6c8:	bb 0b       	sbc	r27, r27
     6ca:	80 2d       	mov	r24, r0
     6cc:	bf 01       	movw	r22, r30
     6ce:	ff 27       	eor	r31, r31
     6d0:	93 58       	subi	r25, 0x83	; 131
     6d2:	5f 4f       	sbci	r21, 0xFF	; 255
     6d4:	3a f0       	brmi	.+14     	; 0x6e4 <__divsf3_pse+0x70>
     6d6:	9e 3f       	cpi	r25, 0xFE	; 254
     6d8:	51 05       	cpc	r21, r1
     6da:	78 f0       	brcs	.+30     	; 0x6fa <__divsf3_pse+0x86>
     6dc:	0c 94 01 04 	jmp	0x802	; 0x802 <__fp_inf>
     6e0:	0c 94 4c 04 	jmp	0x898	; 0x898 <__fp_szero>
     6e4:	5f 3f       	cpi	r21, 0xFF	; 255
     6e6:	e4 f3       	brlt	.-8      	; 0x6e0 <__divsf3_pse+0x6c>
     6e8:	98 3e       	cpi	r25, 0xE8	; 232
     6ea:	d4 f3       	brlt	.-12     	; 0x6e0 <__divsf3_pse+0x6c>
     6ec:	86 95       	lsr	r24
     6ee:	77 95       	ror	r23
     6f0:	67 95       	ror	r22
     6f2:	b7 95       	ror	r27
     6f4:	f7 95       	ror	r31
     6f6:	9f 5f       	subi	r25, 0xFF	; 255
     6f8:	c9 f7       	brne	.-14     	; 0x6ec <__divsf3_pse+0x78>
     6fa:	88 0f       	add	r24, r24
     6fc:	91 1d       	adc	r25, r1
     6fe:	96 95       	lsr	r25
     700:	87 95       	ror	r24
     702:	97 f9       	bld	r25, 7
     704:	08 95       	ret
     706:	e1 e0       	ldi	r30, 0x01	; 1
     708:	66 0f       	add	r22, r22
     70a:	77 1f       	adc	r23, r23
     70c:	88 1f       	adc	r24, r24
     70e:	bb 1f       	adc	r27, r27
     710:	62 17       	cp	r22, r18
     712:	73 07       	cpc	r23, r19
     714:	84 07       	cpc	r24, r20
     716:	ba 07       	cpc	r27, r26
     718:	20 f0       	brcs	.+8      	; 0x722 <__divsf3_pse+0xae>
     71a:	62 1b       	sub	r22, r18
     71c:	73 0b       	sbc	r23, r19
     71e:	84 0b       	sbc	r24, r20
     720:	ba 0b       	sbc	r27, r26
     722:	ee 1f       	adc	r30, r30
     724:	88 f7       	brcc	.-30     	; 0x708 <__divsf3_pse+0x94>
     726:	e0 95       	com	r30
     728:	08 95       	ret

0000072a <__fixunssfsi>:
     72a:	0e 94 31 04 	call	0x862	; 0x862 <__fp_splitA>
     72e:	88 f0       	brcs	.+34     	; 0x752 <__fixunssfsi+0x28>
     730:	9f 57       	subi	r25, 0x7F	; 127
     732:	98 f0       	brcs	.+38     	; 0x75a <__fixunssfsi+0x30>
     734:	b9 2f       	mov	r27, r25
     736:	99 27       	eor	r25, r25
     738:	b7 51       	subi	r27, 0x17	; 23
     73a:	b0 f0       	brcs	.+44     	; 0x768 <__fixunssfsi+0x3e>
     73c:	e1 f0       	breq	.+56     	; 0x776 <__fixunssfsi+0x4c>
     73e:	66 0f       	add	r22, r22
     740:	77 1f       	adc	r23, r23
     742:	88 1f       	adc	r24, r24
     744:	99 1f       	adc	r25, r25
     746:	1a f0       	brmi	.+6      	; 0x74e <__fixunssfsi+0x24>
     748:	ba 95       	dec	r27
     74a:	c9 f7       	brne	.-14     	; 0x73e <__fixunssfsi+0x14>
     74c:	14 c0       	rjmp	.+40     	; 0x776 <__fixunssfsi+0x4c>
     74e:	b1 30       	cpi	r27, 0x01	; 1
     750:	91 f0       	breq	.+36     	; 0x776 <__fixunssfsi+0x4c>
     752:	0e 94 4b 04 	call	0x896	; 0x896 <__fp_zero>
     756:	b1 e0       	ldi	r27, 0x01	; 1
     758:	08 95       	ret
     75a:	0c 94 4b 04 	jmp	0x896	; 0x896 <__fp_zero>
     75e:	67 2f       	mov	r22, r23
     760:	78 2f       	mov	r23, r24
     762:	88 27       	eor	r24, r24
     764:	b8 5f       	subi	r27, 0xF8	; 248
     766:	39 f0       	breq	.+14     	; 0x776 <__fixunssfsi+0x4c>
     768:	b9 3f       	cpi	r27, 0xF9	; 249
     76a:	cc f3       	brlt	.-14     	; 0x75e <__fixunssfsi+0x34>
     76c:	86 95       	lsr	r24
     76e:	77 95       	ror	r23
     770:	67 95       	ror	r22
     772:	b3 95       	inc	r27
     774:	d9 f7       	brne	.-10     	; 0x76c <__fixunssfsi+0x42>
     776:	3e f4       	brtc	.+14     	; 0x786 <__fixunssfsi+0x5c>
     778:	90 95       	com	r25
     77a:	80 95       	com	r24
     77c:	70 95       	com	r23
     77e:	61 95       	neg	r22
     780:	7f 4f       	sbci	r23, 0xFF	; 255
     782:	8f 4f       	sbci	r24, 0xFF	; 255
     784:	9f 4f       	sbci	r25, 0xFF	; 255
     786:	08 95       	ret

00000788 <__floatunsisf>:
     788:	e8 94       	clt
     78a:	09 c0       	rjmp	.+18     	; 0x79e <__floatsisf+0x12>

0000078c <__floatsisf>:
     78c:	97 fb       	bst	r25, 7
     78e:	3e f4       	brtc	.+14     	; 0x79e <__floatsisf+0x12>
     790:	90 95       	com	r25
     792:	80 95       	com	r24
     794:	70 95       	com	r23
     796:	61 95       	neg	r22
     798:	7f 4f       	sbci	r23, 0xFF	; 255
     79a:	8f 4f       	sbci	r24, 0xFF	; 255
     79c:	9f 4f       	sbci	r25, 0xFF	; 255
     79e:	99 23       	and	r25, r25
     7a0:	a9 f0       	breq	.+42     	; 0x7cc <__floatsisf+0x40>
     7a2:	f9 2f       	mov	r31, r25
     7a4:	96 e9       	ldi	r25, 0x96	; 150
     7a6:	bb 27       	eor	r27, r27
     7a8:	93 95       	inc	r25
     7aa:	f6 95       	lsr	r31
     7ac:	87 95       	ror	r24
     7ae:	77 95       	ror	r23
     7b0:	67 95       	ror	r22
     7b2:	b7 95       	ror	r27
     7b4:	f1 11       	cpse	r31, r1
     7b6:	f8 cf       	rjmp	.-16     	; 0x7a8 <__floatsisf+0x1c>
     7b8:	fa f4       	brpl	.+62     	; 0x7f8 <__floatsisf+0x6c>
     7ba:	bb 0f       	add	r27, r27
     7bc:	11 f4       	brne	.+4      	; 0x7c2 <__floatsisf+0x36>
     7be:	60 ff       	sbrs	r22, 0
     7c0:	1b c0       	rjmp	.+54     	; 0x7f8 <__floatsisf+0x6c>
     7c2:	6f 5f       	subi	r22, 0xFF	; 255
     7c4:	7f 4f       	sbci	r23, 0xFF	; 255
     7c6:	8f 4f       	sbci	r24, 0xFF	; 255
     7c8:	9f 4f       	sbci	r25, 0xFF	; 255
     7ca:	16 c0       	rjmp	.+44     	; 0x7f8 <__floatsisf+0x6c>
     7cc:	88 23       	and	r24, r24
     7ce:	11 f0       	breq	.+4      	; 0x7d4 <__floatsisf+0x48>
     7d0:	96 e9       	ldi	r25, 0x96	; 150
     7d2:	11 c0       	rjmp	.+34     	; 0x7f6 <__floatsisf+0x6a>
     7d4:	77 23       	and	r23, r23
     7d6:	21 f0       	breq	.+8      	; 0x7e0 <__floatsisf+0x54>
     7d8:	9e e8       	ldi	r25, 0x8E	; 142
     7da:	87 2f       	mov	r24, r23
     7dc:	76 2f       	mov	r23, r22
     7de:	05 c0       	rjmp	.+10     	; 0x7ea <__floatsisf+0x5e>
     7e0:	66 23       	and	r22, r22
     7e2:	71 f0       	breq	.+28     	; 0x800 <__floatsisf+0x74>
     7e4:	96 e8       	ldi	r25, 0x86	; 134
     7e6:	86 2f       	mov	r24, r22
     7e8:	70 e0       	ldi	r23, 0x00	; 0
     7ea:	60 e0       	ldi	r22, 0x00	; 0
     7ec:	2a f0       	brmi	.+10     	; 0x7f8 <__floatsisf+0x6c>
     7ee:	9a 95       	dec	r25
     7f0:	66 0f       	add	r22, r22
     7f2:	77 1f       	adc	r23, r23
     7f4:	88 1f       	adc	r24, r24
     7f6:	da f7       	brpl	.-10     	; 0x7ee <__floatsisf+0x62>
     7f8:	88 0f       	add	r24, r24
     7fa:	96 95       	lsr	r25
     7fc:	87 95       	ror	r24
     7fe:	97 f9       	bld	r25, 7
     800:	08 95       	ret

00000802 <__fp_inf>:
     802:	97 f9       	bld	r25, 7
     804:	9f 67       	ori	r25, 0x7F	; 127
     806:	80 e8       	ldi	r24, 0x80	; 128
     808:	70 e0       	ldi	r23, 0x00	; 0
     80a:	60 e0       	ldi	r22, 0x00	; 0
     80c:	08 95       	ret

0000080e <__fp_nan>:
     80e:	9f ef       	ldi	r25, 0xFF	; 255
     810:	80 ec       	ldi	r24, 0xC0	; 192
     812:	08 95       	ret

00000814 <__fp_pscA>:
     814:	00 24       	eor	r0, r0
     816:	0a 94       	dec	r0
     818:	16 16       	cp	r1, r22
     81a:	17 06       	cpc	r1, r23
     81c:	18 06       	cpc	r1, r24
     81e:	09 06       	cpc	r0, r25
     820:	08 95       	ret

00000822 <__fp_pscB>:
     822:	00 24       	eor	r0, r0
     824:	0a 94       	dec	r0
     826:	12 16       	cp	r1, r18
     828:	13 06       	cpc	r1, r19
     82a:	14 06       	cpc	r1, r20
     82c:	05 06       	cpc	r0, r21
     82e:	08 95       	ret

00000830 <__fp_round>:
     830:	09 2e       	mov	r0, r25
     832:	03 94       	inc	r0
     834:	00 0c       	add	r0, r0
     836:	11 f4       	brne	.+4      	; 0x83c <__fp_round+0xc>
     838:	88 23       	and	r24, r24
     83a:	52 f0       	brmi	.+20     	; 0x850 <__fp_round+0x20>
     83c:	bb 0f       	add	r27, r27
     83e:	40 f4       	brcc	.+16     	; 0x850 <__fp_round+0x20>
     840:	bf 2b       	or	r27, r31
     842:	11 f4       	brne	.+4      	; 0x848 <__fp_round+0x18>
     844:	60 ff       	sbrs	r22, 0
     846:	04 c0       	rjmp	.+8      	; 0x850 <__fp_round+0x20>
     848:	6f 5f       	subi	r22, 0xFF	; 255
     84a:	7f 4f       	sbci	r23, 0xFF	; 255
     84c:	8f 4f       	sbci	r24, 0xFF	; 255
     84e:	9f 4f       	sbci	r25, 0xFF	; 255
     850:	08 95       	ret

00000852 <__fp_split3>:
     852:	57 fd       	sbrc	r21, 7
     854:	90 58       	subi	r25, 0x80	; 128
     856:	44 0f       	add	r20, r20
     858:	55 1f       	adc	r21, r21
     85a:	59 f0       	breq	.+22     	; 0x872 <__fp_splitA+0x10>
     85c:	5f 3f       	cpi	r21, 0xFF	; 255
     85e:	71 f0       	breq	.+28     	; 0x87c <__fp_splitA+0x1a>
     860:	47 95       	ror	r20

00000862 <__fp_splitA>:
     862:	88 0f       	add	r24, r24
     864:	97 fb       	bst	r25, 7
     866:	99 1f       	adc	r25, r25
     868:	61 f0       	breq	.+24     	; 0x882 <__fp_splitA+0x20>
     86a:	9f 3f       	cpi	r25, 0xFF	; 255
     86c:	79 f0       	breq	.+30     	; 0x88c <__fp_splitA+0x2a>
     86e:	87 95       	ror	r24
     870:	08 95       	ret
     872:	12 16       	cp	r1, r18
     874:	13 06       	cpc	r1, r19
     876:	14 06       	cpc	r1, r20
     878:	55 1f       	adc	r21, r21
     87a:	f2 cf       	rjmp	.-28     	; 0x860 <__fp_split3+0xe>
     87c:	46 95       	lsr	r20
     87e:	f1 df       	rcall	.-30     	; 0x862 <__fp_splitA>
     880:	08 c0       	rjmp	.+16     	; 0x892 <__fp_splitA+0x30>
     882:	16 16       	cp	r1, r22
     884:	17 06       	cpc	r1, r23
     886:	18 06       	cpc	r1, r24
     888:	99 1f       	adc	r25, r25
     88a:	f1 cf       	rjmp	.-30     	; 0x86e <__fp_splitA+0xc>
     88c:	86 95       	lsr	r24
     88e:	71 05       	cpc	r23, r1
     890:	61 05       	cpc	r22, r1
     892:	08 94       	sec
     894:	08 95       	ret

00000896 <__fp_zero>:
     896:	e8 94       	clt

00000898 <__fp_szero>:
     898:	bb 27       	eor	r27, r27
     89a:	66 27       	eor	r22, r22
     89c:	77 27       	eor	r23, r23
     89e:	cb 01       	movw	r24, r22
     8a0:	97 f9       	bld	r25, 7
     8a2:	08 95       	ret
     8a4:	16 f0       	brts	.+4      	; 0x8aa <__fp_szero+0x12>
     8a6:	0c 94 0b 05 	jmp	0xa16	; 0xa16 <__fp_mpack>
     8aa:	0c 94 07 04 	jmp	0x80e	; 0x80e <__fp_nan>
     8ae:	68 94       	set
     8b0:	0c 94 01 04 	jmp	0x802	; 0x802 <__fp_inf>

000008b4 <log>:
     8b4:	0e 94 31 04 	call	0x862	; 0x862 <__fp_splitA>
     8b8:	a8 f3       	brcs	.-22     	; 0x8a4 <__fp_szero+0xc>
     8ba:	99 23       	and	r25, r25
     8bc:	c1 f3       	breq	.-16     	; 0x8ae <__fp_szero+0x16>
     8be:	ae f3       	brts	.-22     	; 0x8aa <__fp_szero+0x12>
     8c0:	df 93       	push	r29
     8c2:	cf 93       	push	r28
     8c4:	1f 93       	push	r17
     8c6:	0f 93       	push	r16
     8c8:	ff 92       	push	r15
     8ca:	c9 2f       	mov	r28, r25
     8cc:	dd 27       	eor	r29, r29
     8ce:	88 23       	and	r24, r24
     8d0:	2a f0       	brmi	.+10     	; 0x8dc <log+0x28>
     8d2:	21 97       	sbiw	r28, 0x01	; 1
     8d4:	66 0f       	add	r22, r22
     8d6:	77 1f       	adc	r23, r23
     8d8:	88 1f       	adc	r24, r24
     8da:	da f7       	brpl	.-10     	; 0x8d2 <log+0x1e>
     8dc:	20 e0       	ldi	r18, 0x00	; 0
     8de:	30 e0       	ldi	r19, 0x00	; 0
     8e0:	40 e8       	ldi	r20, 0x80	; 128
     8e2:	5f eb       	ldi	r21, 0xBF	; 191
     8e4:	9f e3       	ldi	r25, 0x3F	; 63
     8e6:	88 39       	cpi	r24, 0x98	; 152
     8e8:	20 f0       	brcs	.+8      	; 0x8f2 <log+0x3e>
     8ea:	80 3e       	cpi	r24, 0xE0	; 224
     8ec:	38 f0       	brcs	.+14     	; 0x8fc <log+0x48>
     8ee:	21 96       	adiw	r28, 0x01	; 1
     8f0:	8f 77       	andi	r24, 0x7F	; 127
     8f2:	0e 94 b7 02 	call	0x56e	; 0x56e <__addsf3>
     8f6:	e8 e6       	ldi	r30, 0x68	; 104
     8f8:	f0 e0       	ldi	r31, 0x00	; 0
     8fa:	04 c0       	rjmp	.+8      	; 0x904 <__stack+0x5>
     8fc:	0e 94 b7 02 	call	0x56e	; 0x56e <__addsf3>
     900:	e5 e9       	ldi	r30, 0x95	; 149
     902:	f0 e0       	ldi	r31, 0x00	; 0
     904:	0e 94 19 05 	call	0xa32	; 0xa32 <__fp_powser>
     908:	8b 01       	movw	r16, r22
     90a:	be 01       	movw	r22, r28
     90c:	ec 01       	movw	r28, r24
     90e:	fb 2e       	mov	r15, r27
     910:	6f 57       	subi	r22, 0x7F	; 127
     912:	71 09       	sbc	r23, r1
     914:	75 95       	asr	r23
     916:	77 1f       	adc	r23, r23
     918:	88 0b       	sbc	r24, r24
     91a:	99 0b       	sbc	r25, r25
     91c:	0e 94 c6 03 	call	0x78c	; 0x78c <__floatsisf>
     920:	28 e1       	ldi	r18, 0x18	; 24
     922:	32 e7       	ldi	r19, 0x72	; 114
     924:	41 e3       	ldi	r20, 0x31	; 49
     926:	5f e3       	ldi	r21, 0x3F	; 63
     928:	0e 94 b1 04 	call	0x962	; 0x962 <__mulsf3x>
     92c:	af 2d       	mov	r26, r15
     92e:	98 01       	movw	r18, r16
     930:	ae 01       	movw	r20, r28
     932:	ff 90       	pop	r15
     934:	0f 91       	pop	r16
     936:	1f 91       	pop	r17
     938:	cf 91       	pop	r28
     93a:	df 91       	pop	r29
     93c:	0e 94 ce 02 	call	0x59c	; 0x59c <__addsf3x>
     940:	0c 94 18 04 	jmp	0x830	; 0x830 <__fp_round>
     944:	0e 94 0a 04 	call	0x814	; 0x814 <__fp_pscA>
     948:	38 f0       	brcs	.+14     	; 0x958 <__stack+0x59>
     94a:	0e 94 11 04 	call	0x822	; 0x822 <__fp_pscB>
     94e:	20 f0       	brcs	.+8      	; 0x958 <__stack+0x59>
     950:	95 23       	and	r25, r21
     952:	11 f0       	breq	.+4      	; 0x958 <__stack+0x59>
     954:	0c 94 01 04 	jmp	0x802	; 0x802 <__fp_inf>
     958:	0c 94 07 04 	jmp	0x80e	; 0x80e <__fp_nan>
     95c:	11 24       	eor	r1, r1
     95e:	0c 94 4c 04 	jmp	0x898	; 0x898 <__fp_szero>

00000962 <__mulsf3x>:
     962:	0e 94 29 04 	call	0x852	; 0x852 <__fp_split3>
     966:	70 f3       	brcs	.-36     	; 0x944 <__stack+0x45>

00000968 <__mulsf3_pse>:
     968:	95 9f       	mul	r25, r21
     96a:	c1 f3       	breq	.-16     	; 0x95c <__stack+0x5d>
     96c:	95 0f       	add	r25, r21
     96e:	50 e0       	ldi	r21, 0x00	; 0
     970:	55 1f       	adc	r21, r21
     972:	62 9f       	mul	r22, r18
     974:	f0 01       	movw	r30, r0
     976:	72 9f       	mul	r23, r18
     978:	bb 27       	eor	r27, r27
     97a:	f0 0d       	add	r31, r0
     97c:	b1 1d       	adc	r27, r1
     97e:	63 9f       	mul	r22, r19
     980:	aa 27       	eor	r26, r26
     982:	f0 0d       	add	r31, r0
     984:	b1 1d       	adc	r27, r1
     986:	aa 1f       	adc	r26, r26
     988:	64 9f       	mul	r22, r20
     98a:	66 27       	eor	r22, r22
     98c:	b0 0d       	add	r27, r0
     98e:	a1 1d       	adc	r26, r1
     990:	66 1f       	adc	r22, r22
     992:	82 9f       	mul	r24, r18
     994:	22 27       	eor	r18, r18
     996:	b0 0d       	add	r27, r0
     998:	a1 1d       	adc	r26, r1
     99a:	62 1f       	adc	r22, r18
     99c:	73 9f       	mul	r23, r19
     99e:	b0 0d       	add	r27, r0
     9a0:	a1 1d       	adc	r26, r1
     9a2:	62 1f       	adc	r22, r18
     9a4:	83 9f       	mul	r24, r19
     9a6:	a0 0d       	add	r26, r0
     9a8:	61 1d       	adc	r22, r1
     9aa:	22 1f       	adc	r18, r18
     9ac:	74 9f       	mul	r23, r20
     9ae:	33 27       	eor	r19, r19
     9b0:	a0 0d       	add	r26, r0
     9b2:	61 1d       	adc	r22, r1
     9b4:	23 1f       	adc	r18, r19
     9b6:	84 9f       	mul	r24, r20
     9b8:	60 0d       	add	r22, r0
     9ba:	21 1d       	adc	r18, r1
     9bc:	82 2f       	mov	r24, r18
     9be:	76 2f       	mov	r23, r22
     9c0:	6a 2f       	mov	r22, r26
     9c2:	11 24       	eor	r1, r1
     9c4:	9f 57       	subi	r25, 0x7F	; 127
     9c6:	50 40       	sbci	r21, 0x00	; 0
     9c8:	9a f0       	brmi	.+38     	; 0x9f0 <__mulsf3_pse+0x88>
     9ca:	f1 f0       	breq	.+60     	; 0xa08 <__mulsf3_pse+0xa0>
     9cc:	88 23       	and	r24, r24
     9ce:	4a f0       	brmi	.+18     	; 0x9e2 <__mulsf3_pse+0x7a>
     9d0:	ee 0f       	add	r30, r30
     9d2:	ff 1f       	adc	r31, r31
     9d4:	bb 1f       	adc	r27, r27
     9d6:	66 1f       	adc	r22, r22
     9d8:	77 1f       	adc	r23, r23
     9da:	88 1f       	adc	r24, r24
     9dc:	91 50       	subi	r25, 0x01	; 1
     9de:	50 40       	sbci	r21, 0x00	; 0
     9e0:	a9 f7       	brne	.-22     	; 0x9cc <__mulsf3_pse+0x64>
     9e2:	9e 3f       	cpi	r25, 0xFE	; 254
     9e4:	51 05       	cpc	r21, r1
     9e6:	80 f0       	brcs	.+32     	; 0xa08 <__mulsf3_pse+0xa0>
     9e8:	0c 94 01 04 	jmp	0x802	; 0x802 <__fp_inf>
     9ec:	0c 94 4c 04 	jmp	0x898	; 0x898 <__fp_szero>
     9f0:	5f 3f       	cpi	r21, 0xFF	; 255
     9f2:	e4 f3       	brlt	.-8      	; 0x9ec <__mulsf3_pse+0x84>
     9f4:	98 3e       	cpi	r25, 0xE8	; 232
     9f6:	d4 f3       	brlt	.-12     	; 0x9ec <__mulsf3_pse+0x84>
     9f8:	86 95       	lsr	r24
     9fa:	77 95       	ror	r23
     9fc:	67 95       	ror	r22
     9fe:	b7 95       	ror	r27
     a00:	f7 95       	ror	r31
     a02:	e7 95       	ror	r30
     a04:	9f 5f       	subi	r25, 0xFF	; 255
     a06:	c1 f7       	brne	.-16     	; 0x9f8 <__mulsf3_pse+0x90>
     a08:	fe 2b       	or	r31, r30
     a0a:	88 0f       	add	r24, r24
     a0c:	91 1d       	adc	r25, r1
     a0e:	96 95       	lsr	r25
     a10:	87 95       	ror	r24
     a12:	97 f9       	bld	r25, 7
     a14:	08 95       	ret

00000a16 <__fp_mpack>:
     a16:	9f 3f       	cpi	r25, 0xFF	; 255
     a18:	31 f0       	breq	.+12     	; 0xa26 <__fp_mpack_finite+0xc>

00000a1a <__fp_mpack_finite>:
     a1a:	91 50       	subi	r25, 0x01	; 1
     a1c:	20 f4       	brcc	.+8      	; 0xa26 <__fp_mpack_finite+0xc>
     a1e:	87 95       	ror	r24
     a20:	77 95       	ror	r23
     a22:	67 95       	ror	r22
     a24:	b7 95       	ror	r27
     a26:	88 0f       	add	r24, r24
     a28:	91 1d       	adc	r25, r1
     a2a:	96 95       	lsr	r25
     a2c:	87 95       	ror	r24
     a2e:	97 f9       	bld	r25, 7
     a30:	08 95       	ret

00000a32 <__fp_powser>:
     a32:	df 93       	push	r29
     a34:	cf 93       	push	r28
     a36:	1f 93       	push	r17
     a38:	0f 93       	push	r16
     a3a:	ff 92       	push	r15
     a3c:	ef 92       	push	r14
     a3e:	df 92       	push	r13
     a40:	7b 01       	movw	r14, r22
     a42:	8c 01       	movw	r16, r24
     a44:	68 94       	set
     a46:	06 c0       	rjmp	.+12     	; 0xa54 <__fp_powser+0x22>
     a48:	da 2e       	mov	r13, r26
     a4a:	ef 01       	movw	r28, r30
     a4c:	0e 94 b1 04 	call	0x962	; 0x962 <__mulsf3x>
     a50:	fe 01       	movw	r30, r28
     a52:	e8 94       	clt
     a54:	a5 91       	lpm	r26, Z+
     a56:	25 91       	lpm	r18, Z+
     a58:	35 91       	lpm	r19, Z+
     a5a:	45 91       	lpm	r20, Z+
     a5c:	55 91       	lpm	r21, Z+
     a5e:	a6 f3       	brts	.-24     	; 0xa48 <__fp_powser+0x16>
     a60:	ef 01       	movw	r28, r30
     a62:	0e 94 ce 02 	call	0x59c	; 0x59c <__addsf3x>
     a66:	fe 01       	movw	r30, r28
     a68:	97 01       	movw	r18, r14
     a6a:	a8 01       	movw	r20, r16
     a6c:	da 94       	dec	r13
     a6e:	69 f7       	brne	.-38     	; 0xa4a <__fp_powser+0x18>
     a70:	df 90       	pop	r13
     a72:	ef 90       	pop	r14
     a74:	ff 90       	pop	r15
     a76:	0f 91       	pop	r16
     a78:	1f 91       	pop	r17
     a7a:	cf 91       	pop	r28
     a7c:	df 91       	pop	r29
     a7e:	08 95       	ret

00000a80 <sprintf>:
     a80:	ae e0       	ldi	r26, 0x0E	; 14
     a82:	b0 e0       	ldi	r27, 0x00	; 0
     a84:	e6 e4       	ldi	r30, 0x46	; 70
     a86:	f5 e0       	ldi	r31, 0x05	; 5
     a88:	0c 94 01 08 	jmp	0x1002	; 0x1002 <__prologue_saves__+0x1c>
     a8c:	0d 89       	ldd	r16, Y+21	; 0x15
     a8e:	1e 89       	ldd	r17, Y+22	; 0x16
     a90:	86 e0       	ldi	r24, 0x06	; 6
     a92:	8c 83       	std	Y+4, r24	; 0x04
     a94:	1a 83       	std	Y+2, r17	; 0x02
     a96:	09 83       	std	Y+1, r16	; 0x01
     a98:	8f ef       	ldi	r24, 0xFF	; 255
     a9a:	9f e7       	ldi	r25, 0x7F	; 127
     a9c:	9e 83       	std	Y+6, r25	; 0x06
     a9e:	8d 83       	std	Y+5, r24	; 0x05
     aa0:	ae 01       	movw	r20, r28
     aa2:	47 5e       	subi	r20, 0xE7	; 231
     aa4:	5f 4f       	sbci	r21, 0xFF	; 255
     aa6:	6f 89       	ldd	r22, Y+23	; 0x17
     aa8:	78 8d       	ldd	r23, Y+24	; 0x18
     aaa:	ce 01       	movw	r24, r28
     aac:	01 96       	adiw	r24, 0x01	; 1
     aae:	0e 94 62 05 	call	0xac4	; 0xac4 <vfprintf>
     ab2:	ef 81       	ldd	r30, Y+7	; 0x07
     ab4:	f8 85       	ldd	r31, Y+8	; 0x08
     ab6:	e0 0f       	add	r30, r16
     ab8:	f1 1f       	adc	r31, r17
     aba:	10 82       	st	Z, r1
     abc:	2e 96       	adiw	r28, 0x0e	; 14
     abe:	e4 e0       	ldi	r30, 0x04	; 4
     ac0:	0c 94 1d 08 	jmp	0x103a	; 0x103a <__epilogue_restores__+0x1c>

00000ac4 <vfprintf>:
     ac4:	ab e0       	ldi	r26, 0x0B	; 11
     ac6:	b0 e0       	ldi	r27, 0x00	; 0
     ac8:	e8 e6       	ldi	r30, 0x68	; 104
     aca:	f5 e0       	ldi	r31, 0x05	; 5
     acc:	0c 94 f3 07 	jmp	0xfe6	; 0xfe6 <__prologue_saves__>
     ad0:	6c 01       	movw	r12, r24
     ad2:	7b 01       	movw	r14, r22
     ad4:	8a 01       	movw	r16, r20
     ad6:	fc 01       	movw	r30, r24
     ad8:	17 82       	std	Z+7, r1	; 0x07
     ada:	16 82       	std	Z+6, r1	; 0x06
     adc:	83 81       	ldd	r24, Z+3	; 0x03
     ade:	81 ff       	sbrs	r24, 1
     ae0:	cc c1       	rjmp	.+920    	; 0xe7a <vfprintf+0x3b6>
     ae2:	ce 01       	movw	r24, r28
     ae4:	01 96       	adiw	r24, 0x01	; 1
     ae6:	3c 01       	movw	r6, r24
     ae8:	f6 01       	movw	r30, r12
     aea:	93 81       	ldd	r25, Z+3	; 0x03
     aec:	f7 01       	movw	r30, r14
     aee:	93 fd       	sbrc	r25, 3
     af0:	85 91       	lpm	r24, Z+
     af2:	93 ff       	sbrs	r25, 3
     af4:	81 91       	ld	r24, Z+
     af6:	7f 01       	movw	r14, r30
     af8:	88 23       	and	r24, r24
     afa:	09 f4       	brne	.+2      	; 0xafe <vfprintf+0x3a>
     afc:	ba c1       	rjmp	.+884    	; 0xe72 <vfprintf+0x3ae>
     afe:	85 32       	cpi	r24, 0x25	; 37
     b00:	39 f4       	brne	.+14     	; 0xb10 <vfprintf+0x4c>
     b02:	93 fd       	sbrc	r25, 3
     b04:	85 91       	lpm	r24, Z+
     b06:	93 ff       	sbrs	r25, 3
     b08:	81 91       	ld	r24, Z+
     b0a:	7f 01       	movw	r14, r30
     b0c:	85 32       	cpi	r24, 0x25	; 37
     b0e:	29 f4       	brne	.+10     	; 0xb1a <vfprintf+0x56>
     b10:	b6 01       	movw	r22, r12
     b12:	90 e0       	ldi	r25, 0x00	; 0
     b14:	0e 94 59 07 	call	0xeb2	; 0xeb2 <fputc>
     b18:	e7 cf       	rjmp	.-50     	; 0xae8 <vfprintf+0x24>
     b1a:	91 2c       	mov	r9, r1
     b1c:	21 2c       	mov	r2, r1
     b1e:	31 2c       	mov	r3, r1
     b20:	ff e1       	ldi	r31, 0x1F	; 31
     b22:	f3 15       	cp	r31, r3
     b24:	d8 f0       	brcs	.+54     	; 0xb5c <vfprintf+0x98>
     b26:	8b 32       	cpi	r24, 0x2B	; 43
     b28:	79 f0       	breq	.+30     	; 0xb48 <vfprintf+0x84>
     b2a:	38 f4       	brcc	.+14     	; 0xb3a <vfprintf+0x76>
     b2c:	80 32       	cpi	r24, 0x20	; 32
     b2e:	79 f0       	breq	.+30     	; 0xb4e <vfprintf+0x8a>
     b30:	83 32       	cpi	r24, 0x23	; 35
     b32:	a1 f4       	brne	.+40     	; 0xb5c <vfprintf+0x98>
     b34:	23 2d       	mov	r18, r3
     b36:	20 61       	ori	r18, 0x10	; 16
     b38:	1d c0       	rjmp	.+58     	; 0xb74 <vfprintf+0xb0>
     b3a:	8d 32       	cpi	r24, 0x2D	; 45
     b3c:	61 f0       	breq	.+24     	; 0xb56 <vfprintf+0x92>
     b3e:	80 33       	cpi	r24, 0x30	; 48
     b40:	69 f4       	brne	.+26     	; 0xb5c <vfprintf+0x98>
     b42:	23 2d       	mov	r18, r3
     b44:	21 60       	ori	r18, 0x01	; 1
     b46:	16 c0       	rjmp	.+44     	; 0xb74 <vfprintf+0xb0>
     b48:	83 2d       	mov	r24, r3
     b4a:	82 60       	ori	r24, 0x02	; 2
     b4c:	38 2e       	mov	r3, r24
     b4e:	e3 2d       	mov	r30, r3
     b50:	e4 60       	ori	r30, 0x04	; 4
     b52:	3e 2e       	mov	r3, r30
     b54:	2a c0       	rjmp	.+84     	; 0xbaa <vfprintf+0xe6>
     b56:	f3 2d       	mov	r31, r3
     b58:	f8 60       	ori	r31, 0x08	; 8
     b5a:	1d c0       	rjmp	.+58     	; 0xb96 <vfprintf+0xd2>
     b5c:	37 fc       	sbrc	r3, 7
     b5e:	2d c0       	rjmp	.+90     	; 0xbba <vfprintf+0xf6>
     b60:	20 ed       	ldi	r18, 0xD0	; 208
     b62:	28 0f       	add	r18, r24
     b64:	2a 30       	cpi	r18, 0x0A	; 10
     b66:	40 f0       	brcs	.+16     	; 0xb78 <vfprintf+0xb4>
     b68:	8e 32       	cpi	r24, 0x2E	; 46
     b6a:	b9 f4       	brne	.+46     	; 0xb9a <vfprintf+0xd6>
     b6c:	36 fc       	sbrc	r3, 6
     b6e:	81 c1       	rjmp	.+770    	; 0xe72 <vfprintf+0x3ae>
     b70:	23 2d       	mov	r18, r3
     b72:	20 64       	ori	r18, 0x40	; 64
     b74:	32 2e       	mov	r3, r18
     b76:	19 c0       	rjmp	.+50     	; 0xbaa <vfprintf+0xe6>
     b78:	36 fe       	sbrs	r3, 6
     b7a:	06 c0       	rjmp	.+12     	; 0xb88 <vfprintf+0xc4>
     b7c:	8a e0       	ldi	r24, 0x0A	; 10
     b7e:	98 9e       	mul	r9, r24
     b80:	20 0d       	add	r18, r0
     b82:	11 24       	eor	r1, r1
     b84:	92 2e       	mov	r9, r18
     b86:	11 c0       	rjmp	.+34     	; 0xbaa <vfprintf+0xe6>
     b88:	ea e0       	ldi	r30, 0x0A	; 10
     b8a:	2e 9e       	mul	r2, r30
     b8c:	20 0d       	add	r18, r0
     b8e:	11 24       	eor	r1, r1
     b90:	22 2e       	mov	r2, r18
     b92:	f3 2d       	mov	r31, r3
     b94:	f0 62       	ori	r31, 0x20	; 32
     b96:	3f 2e       	mov	r3, r31
     b98:	08 c0       	rjmp	.+16     	; 0xbaa <vfprintf+0xe6>
     b9a:	8c 36       	cpi	r24, 0x6C	; 108
     b9c:	21 f4       	brne	.+8      	; 0xba6 <vfprintf+0xe2>
     b9e:	83 2d       	mov	r24, r3
     ba0:	80 68       	ori	r24, 0x80	; 128
     ba2:	38 2e       	mov	r3, r24
     ba4:	02 c0       	rjmp	.+4      	; 0xbaa <vfprintf+0xe6>
     ba6:	88 36       	cpi	r24, 0x68	; 104
     ba8:	41 f4       	brne	.+16     	; 0xbba <vfprintf+0xf6>
     baa:	f7 01       	movw	r30, r14
     bac:	93 fd       	sbrc	r25, 3
     bae:	85 91       	lpm	r24, Z+
     bb0:	93 ff       	sbrs	r25, 3
     bb2:	81 91       	ld	r24, Z+
     bb4:	7f 01       	movw	r14, r30
     bb6:	81 11       	cpse	r24, r1
     bb8:	b3 cf       	rjmp	.-154    	; 0xb20 <vfprintf+0x5c>
     bba:	98 2f       	mov	r25, r24
     bbc:	9f 7d       	andi	r25, 0xDF	; 223
     bbe:	95 54       	subi	r25, 0x45	; 69
     bc0:	93 30       	cpi	r25, 0x03	; 3
     bc2:	28 f4       	brcc	.+10     	; 0xbce <vfprintf+0x10a>
     bc4:	0c 5f       	subi	r16, 0xFC	; 252
     bc6:	1f 4f       	sbci	r17, 0xFF	; 255
     bc8:	9f e3       	ldi	r25, 0x3F	; 63
     bca:	99 83       	std	Y+1, r25	; 0x01
     bcc:	0d c0       	rjmp	.+26     	; 0xbe8 <vfprintf+0x124>
     bce:	83 36       	cpi	r24, 0x63	; 99
     bd0:	31 f0       	breq	.+12     	; 0xbde <vfprintf+0x11a>
     bd2:	83 37       	cpi	r24, 0x73	; 115
     bd4:	71 f0       	breq	.+28     	; 0xbf2 <vfprintf+0x12e>
     bd6:	83 35       	cpi	r24, 0x53	; 83
     bd8:	09 f0       	breq	.+2      	; 0xbdc <vfprintf+0x118>
     bda:	59 c0       	rjmp	.+178    	; 0xc8e <vfprintf+0x1ca>
     bdc:	21 c0       	rjmp	.+66     	; 0xc20 <vfprintf+0x15c>
     bde:	f8 01       	movw	r30, r16
     be0:	80 81       	ld	r24, Z
     be2:	89 83       	std	Y+1, r24	; 0x01
     be4:	0e 5f       	subi	r16, 0xFE	; 254
     be6:	1f 4f       	sbci	r17, 0xFF	; 255
     be8:	88 24       	eor	r8, r8
     bea:	83 94       	inc	r8
     bec:	91 2c       	mov	r9, r1
     bee:	53 01       	movw	r10, r6
     bf0:	13 c0       	rjmp	.+38     	; 0xc18 <vfprintf+0x154>
     bf2:	28 01       	movw	r4, r16
     bf4:	f2 e0       	ldi	r31, 0x02	; 2
     bf6:	4f 0e       	add	r4, r31
     bf8:	51 1c       	adc	r5, r1
     bfa:	f8 01       	movw	r30, r16
     bfc:	a0 80       	ld	r10, Z
     bfe:	b1 80       	ldd	r11, Z+1	; 0x01
     c00:	36 fe       	sbrs	r3, 6
     c02:	03 c0       	rjmp	.+6      	; 0xc0a <vfprintf+0x146>
     c04:	69 2d       	mov	r22, r9
     c06:	70 e0       	ldi	r23, 0x00	; 0
     c08:	02 c0       	rjmp	.+4      	; 0xc0e <vfprintf+0x14a>
     c0a:	6f ef       	ldi	r22, 0xFF	; 255
     c0c:	7f ef       	ldi	r23, 0xFF	; 255
     c0e:	c5 01       	movw	r24, r10
     c10:	0e 94 4e 07 	call	0xe9c	; 0xe9c <strnlen>
     c14:	4c 01       	movw	r8, r24
     c16:	82 01       	movw	r16, r4
     c18:	f3 2d       	mov	r31, r3
     c1a:	ff 77       	andi	r31, 0x7F	; 127
     c1c:	3f 2e       	mov	r3, r31
     c1e:	16 c0       	rjmp	.+44     	; 0xc4c <vfprintf+0x188>
     c20:	28 01       	movw	r4, r16
     c22:	22 e0       	ldi	r18, 0x02	; 2
     c24:	42 0e       	add	r4, r18
     c26:	51 1c       	adc	r5, r1
     c28:	f8 01       	movw	r30, r16
     c2a:	a0 80       	ld	r10, Z
     c2c:	b1 80       	ldd	r11, Z+1	; 0x01
     c2e:	36 fe       	sbrs	r3, 6
     c30:	03 c0       	rjmp	.+6      	; 0xc38 <vfprintf+0x174>
     c32:	69 2d       	mov	r22, r9
     c34:	70 e0       	ldi	r23, 0x00	; 0
     c36:	02 c0       	rjmp	.+4      	; 0xc3c <vfprintf+0x178>
     c38:	6f ef       	ldi	r22, 0xFF	; 255
     c3a:	7f ef       	ldi	r23, 0xFF	; 255
     c3c:	c5 01       	movw	r24, r10
     c3e:	0e 94 43 07 	call	0xe86	; 0xe86 <strnlen_P>
     c42:	4c 01       	movw	r8, r24
     c44:	f3 2d       	mov	r31, r3
     c46:	f0 68       	ori	r31, 0x80	; 128
     c48:	3f 2e       	mov	r3, r31
     c4a:	82 01       	movw	r16, r4
     c4c:	33 fc       	sbrc	r3, 3
     c4e:	1b c0       	rjmp	.+54     	; 0xc86 <vfprintf+0x1c2>
     c50:	82 2d       	mov	r24, r2
     c52:	90 e0       	ldi	r25, 0x00	; 0
     c54:	88 16       	cp	r8, r24
     c56:	99 06       	cpc	r9, r25
     c58:	b0 f4       	brcc	.+44     	; 0xc86 <vfprintf+0x1c2>
     c5a:	b6 01       	movw	r22, r12
     c5c:	80 e2       	ldi	r24, 0x20	; 32
     c5e:	90 e0       	ldi	r25, 0x00	; 0
     c60:	0e 94 59 07 	call	0xeb2	; 0xeb2 <fputc>
     c64:	2a 94       	dec	r2
     c66:	f4 cf       	rjmp	.-24     	; 0xc50 <vfprintf+0x18c>
     c68:	f5 01       	movw	r30, r10
     c6a:	37 fc       	sbrc	r3, 7
     c6c:	85 91       	lpm	r24, Z+
     c6e:	37 fe       	sbrs	r3, 7
     c70:	81 91       	ld	r24, Z+
     c72:	5f 01       	movw	r10, r30
     c74:	b6 01       	movw	r22, r12
     c76:	90 e0       	ldi	r25, 0x00	; 0
     c78:	0e 94 59 07 	call	0xeb2	; 0xeb2 <fputc>
     c7c:	21 10       	cpse	r2, r1
     c7e:	2a 94       	dec	r2
     c80:	21 e0       	ldi	r18, 0x01	; 1
     c82:	82 1a       	sub	r8, r18
     c84:	91 08       	sbc	r9, r1
     c86:	81 14       	cp	r8, r1
     c88:	91 04       	cpc	r9, r1
     c8a:	71 f7       	brne	.-36     	; 0xc68 <vfprintf+0x1a4>
     c8c:	e8 c0       	rjmp	.+464    	; 0xe5e <vfprintf+0x39a>
     c8e:	84 36       	cpi	r24, 0x64	; 100
     c90:	11 f0       	breq	.+4      	; 0xc96 <vfprintf+0x1d2>
     c92:	89 36       	cpi	r24, 0x69	; 105
     c94:	41 f5       	brne	.+80     	; 0xce6 <vfprintf+0x222>
     c96:	f8 01       	movw	r30, r16
     c98:	37 fe       	sbrs	r3, 7
     c9a:	07 c0       	rjmp	.+14     	; 0xcaa <vfprintf+0x1e6>
     c9c:	60 81       	ld	r22, Z
     c9e:	71 81       	ldd	r23, Z+1	; 0x01
     ca0:	82 81       	ldd	r24, Z+2	; 0x02
     ca2:	93 81       	ldd	r25, Z+3	; 0x03
     ca4:	0c 5f       	subi	r16, 0xFC	; 252
     ca6:	1f 4f       	sbci	r17, 0xFF	; 255
     ca8:	08 c0       	rjmp	.+16     	; 0xcba <vfprintf+0x1f6>
     caa:	60 81       	ld	r22, Z
     cac:	71 81       	ldd	r23, Z+1	; 0x01
     cae:	07 2e       	mov	r0, r23
     cb0:	00 0c       	add	r0, r0
     cb2:	88 0b       	sbc	r24, r24
     cb4:	99 0b       	sbc	r25, r25
     cb6:	0e 5f       	subi	r16, 0xFE	; 254
     cb8:	1f 4f       	sbci	r17, 0xFF	; 255
     cba:	f3 2d       	mov	r31, r3
     cbc:	ff 76       	andi	r31, 0x6F	; 111
     cbe:	3f 2e       	mov	r3, r31
     cc0:	97 ff       	sbrs	r25, 7
     cc2:	09 c0       	rjmp	.+18     	; 0xcd6 <vfprintf+0x212>
     cc4:	90 95       	com	r25
     cc6:	80 95       	com	r24
     cc8:	70 95       	com	r23
     cca:	61 95       	neg	r22
     ccc:	7f 4f       	sbci	r23, 0xFF	; 255
     cce:	8f 4f       	sbci	r24, 0xFF	; 255
     cd0:	9f 4f       	sbci	r25, 0xFF	; 255
     cd2:	f0 68       	ori	r31, 0x80	; 128
     cd4:	3f 2e       	mov	r3, r31
     cd6:	2a e0       	ldi	r18, 0x0A	; 10
     cd8:	30 e0       	ldi	r19, 0x00	; 0
     cda:	a3 01       	movw	r20, r6
     cdc:	0e 94 95 07 	call	0xf2a	; 0xf2a <__ultoa_invert>
     ce0:	88 2e       	mov	r8, r24
     ce2:	86 18       	sub	r8, r6
     ce4:	45 c0       	rjmp	.+138    	; 0xd70 <vfprintf+0x2ac>
     ce6:	85 37       	cpi	r24, 0x75	; 117
     ce8:	31 f4       	brne	.+12     	; 0xcf6 <vfprintf+0x232>
     cea:	23 2d       	mov	r18, r3
     cec:	2f 7e       	andi	r18, 0xEF	; 239
     cee:	b2 2e       	mov	r11, r18
     cf0:	2a e0       	ldi	r18, 0x0A	; 10
     cf2:	30 e0       	ldi	r19, 0x00	; 0
     cf4:	25 c0       	rjmp	.+74     	; 0xd40 <vfprintf+0x27c>
     cf6:	93 2d       	mov	r25, r3
     cf8:	99 7f       	andi	r25, 0xF9	; 249
     cfa:	b9 2e       	mov	r11, r25
     cfc:	8f 36       	cpi	r24, 0x6F	; 111
     cfe:	c1 f0       	breq	.+48     	; 0xd30 <vfprintf+0x26c>
     d00:	18 f4       	brcc	.+6      	; 0xd08 <vfprintf+0x244>
     d02:	88 35       	cpi	r24, 0x58	; 88
     d04:	79 f0       	breq	.+30     	; 0xd24 <vfprintf+0x260>
     d06:	b5 c0       	rjmp	.+362    	; 0xe72 <vfprintf+0x3ae>
     d08:	80 37       	cpi	r24, 0x70	; 112
     d0a:	19 f0       	breq	.+6      	; 0xd12 <vfprintf+0x24e>
     d0c:	88 37       	cpi	r24, 0x78	; 120
     d0e:	21 f0       	breq	.+8      	; 0xd18 <vfprintf+0x254>
     d10:	b0 c0       	rjmp	.+352    	; 0xe72 <vfprintf+0x3ae>
     d12:	e9 2f       	mov	r30, r25
     d14:	e0 61       	ori	r30, 0x10	; 16
     d16:	be 2e       	mov	r11, r30
     d18:	b4 fe       	sbrs	r11, 4
     d1a:	0d c0       	rjmp	.+26     	; 0xd36 <vfprintf+0x272>
     d1c:	fb 2d       	mov	r31, r11
     d1e:	f4 60       	ori	r31, 0x04	; 4
     d20:	bf 2e       	mov	r11, r31
     d22:	09 c0       	rjmp	.+18     	; 0xd36 <vfprintf+0x272>
     d24:	34 fe       	sbrs	r3, 4
     d26:	0a c0       	rjmp	.+20     	; 0xd3c <vfprintf+0x278>
     d28:	29 2f       	mov	r18, r25
     d2a:	26 60       	ori	r18, 0x06	; 6
     d2c:	b2 2e       	mov	r11, r18
     d2e:	06 c0       	rjmp	.+12     	; 0xd3c <vfprintf+0x278>
     d30:	28 e0       	ldi	r18, 0x08	; 8
     d32:	30 e0       	ldi	r19, 0x00	; 0
     d34:	05 c0       	rjmp	.+10     	; 0xd40 <vfprintf+0x27c>
     d36:	20 e1       	ldi	r18, 0x10	; 16
     d38:	30 e0       	ldi	r19, 0x00	; 0
     d3a:	02 c0       	rjmp	.+4      	; 0xd40 <vfprintf+0x27c>
     d3c:	20 e1       	ldi	r18, 0x10	; 16
     d3e:	32 e0       	ldi	r19, 0x02	; 2
     d40:	f8 01       	movw	r30, r16
     d42:	b7 fe       	sbrs	r11, 7
     d44:	07 c0       	rjmp	.+14     	; 0xd54 <vfprintf+0x290>
     d46:	60 81       	ld	r22, Z
     d48:	71 81       	ldd	r23, Z+1	; 0x01
     d4a:	82 81       	ldd	r24, Z+2	; 0x02
     d4c:	93 81       	ldd	r25, Z+3	; 0x03
     d4e:	0c 5f       	subi	r16, 0xFC	; 252
     d50:	1f 4f       	sbci	r17, 0xFF	; 255
     d52:	06 c0       	rjmp	.+12     	; 0xd60 <vfprintf+0x29c>
     d54:	60 81       	ld	r22, Z
     d56:	71 81       	ldd	r23, Z+1	; 0x01
     d58:	80 e0       	ldi	r24, 0x00	; 0
     d5a:	90 e0       	ldi	r25, 0x00	; 0
     d5c:	0e 5f       	subi	r16, 0xFE	; 254
     d5e:	1f 4f       	sbci	r17, 0xFF	; 255
     d60:	a3 01       	movw	r20, r6
     d62:	0e 94 95 07 	call	0xf2a	; 0xf2a <__ultoa_invert>
     d66:	88 2e       	mov	r8, r24
     d68:	86 18       	sub	r8, r6
     d6a:	fb 2d       	mov	r31, r11
     d6c:	ff 77       	andi	r31, 0x7F	; 127
     d6e:	3f 2e       	mov	r3, r31
     d70:	36 fe       	sbrs	r3, 6
     d72:	0d c0       	rjmp	.+26     	; 0xd8e <vfprintf+0x2ca>
     d74:	23 2d       	mov	r18, r3
     d76:	2e 7f       	andi	r18, 0xFE	; 254
     d78:	a2 2e       	mov	r10, r18
     d7a:	89 14       	cp	r8, r9
     d7c:	58 f4       	brcc	.+22     	; 0xd94 <vfprintf+0x2d0>
     d7e:	34 fe       	sbrs	r3, 4
     d80:	0b c0       	rjmp	.+22     	; 0xd98 <vfprintf+0x2d4>
     d82:	32 fc       	sbrc	r3, 2
     d84:	09 c0       	rjmp	.+18     	; 0xd98 <vfprintf+0x2d4>
     d86:	83 2d       	mov	r24, r3
     d88:	8e 7e       	andi	r24, 0xEE	; 238
     d8a:	a8 2e       	mov	r10, r24
     d8c:	05 c0       	rjmp	.+10     	; 0xd98 <vfprintf+0x2d4>
     d8e:	b8 2c       	mov	r11, r8
     d90:	a3 2c       	mov	r10, r3
     d92:	03 c0       	rjmp	.+6      	; 0xd9a <vfprintf+0x2d6>
     d94:	b8 2c       	mov	r11, r8
     d96:	01 c0       	rjmp	.+2      	; 0xd9a <vfprintf+0x2d6>
     d98:	b9 2c       	mov	r11, r9
     d9a:	a4 fe       	sbrs	r10, 4
     d9c:	0f c0       	rjmp	.+30     	; 0xdbc <vfprintf+0x2f8>
     d9e:	fe 01       	movw	r30, r28
     da0:	e8 0d       	add	r30, r8
     da2:	f1 1d       	adc	r31, r1
     da4:	80 81       	ld	r24, Z
     da6:	80 33       	cpi	r24, 0x30	; 48
     da8:	21 f4       	brne	.+8      	; 0xdb2 <vfprintf+0x2ee>
     daa:	9a 2d       	mov	r25, r10
     dac:	99 7e       	andi	r25, 0xE9	; 233
     dae:	a9 2e       	mov	r10, r25
     db0:	09 c0       	rjmp	.+18     	; 0xdc4 <vfprintf+0x300>
     db2:	a2 fe       	sbrs	r10, 2
     db4:	06 c0       	rjmp	.+12     	; 0xdc2 <vfprintf+0x2fe>
     db6:	b3 94       	inc	r11
     db8:	b3 94       	inc	r11
     dba:	04 c0       	rjmp	.+8      	; 0xdc4 <vfprintf+0x300>
     dbc:	8a 2d       	mov	r24, r10
     dbe:	86 78       	andi	r24, 0x86	; 134
     dc0:	09 f0       	breq	.+2      	; 0xdc4 <vfprintf+0x300>
     dc2:	b3 94       	inc	r11
     dc4:	a3 fc       	sbrc	r10, 3
     dc6:	11 c0       	rjmp	.+34     	; 0xdea <vfprintf+0x326>
     dc8:	a0 fe       	sbrs	r10, 0
     dca:	06 c0       	rjmp	.+12     	; 0xdd8 <vfprintf+0x314>
     dcc:	b2 14       	cp	r11, r2
     dce:	88 f4       	brcc	.+34     	; 0xdf2 <vfprintf+0x32e>
     dd0:	28 0c       	add	r2, r8
     dd2:	92 2c       	mov	r9, r2
     dd4:	9b 18       	sub	r9, r11
     dd6:	0e c0       	rjmp	.+28     	; 0xdf4 <vfprintf+0x330>
     dd8:	b2 14       	cp	r11, r2
     dda:	60 f4       	brcc	.+24     	; 0xdf4 <vfprintf+0x330>
     ddc:	b6 01       	movw	r22, r12
     dde:	80 e2       	ldi	r24, 0x20	; 32
     de0:	90 e0       	ldi	r25, 0x00	; 0
     de2:	0e 94 59 07 	call	0xeb2	; 0xeb2 <fputc>
     de6:	b3 94       	inc	r11
     de8:	f7 cf       	rjmp	.-18     	; 0xdd8 <vfprintf+0x314>
     dea:	b2 14       	cp	r11, r2
     dec:	18 f4       	brcc	.+6      	; 0xdf4 <vfprintf+0x330>
     dee:	2b 18       	sub	r2, r11
     df0:	02 c0       	rjmp	.+4      	; 0xdf6 <vfprintf+0x332>
     df2:	98 2c       	mov	r9, r8
     df4:	21 2c       	mov	r2, r1
     df6:	a4 fe       	sbrs	r10, 4
     df8:	10 c0       	rjmp	.+32     	; 0xe1a <vfprintf+0x356>
     dfa:	b6 01       	movw	r22, r12
     dfc:	80 e3       	ldi	r24, 0x30	; 48
     dfe:	90 e0       	ldi	r25, 0x00	; 0
     e00:	0e 94 59 07 	call	0xeb2	; 0xeb2 <fputc>
     e04:	a2 fe       	sbrs	r10, 2
     e06:	17 c0       	rjmp	.+46     	; 0xe36 <vfprintf+0x372>
     e08:	a1 fc       	sbrc	r10, 1
     e0a:	03 c0       	rjmp	.+6      	; 0xe12 <vfprintf+0x34e>
     e0c:	88 e7       	ldi	r24, 0x78	; 120
     e0e:	90 e0       	ldi	r25, 0x00	; 0
     e10:	02 c0       	rjmp	.+4      	; 0xe16 <vfprintf+0x352>
     e12:	88 e5       	ldi	r24, 0x58	; 88
     e14:	90 e0       	ldi	r25, 0x00	; 0
     e16:	b6 01       	movw	r22, r12
     e18:	0c c0       	rjmp	.+24     	; 0xe32 <vfprintf+0x36e>
     e1a:	8a 2d       	mov	r24, r10
     e1c:	86 78       	andi	r24, 0x86	; 134
     e1e:	59 f0       	breq	.+22     	; 0xe36 <vfprintf+0x372>
     e20:	a1 fe       	sbrs	r10, 1
     e22:	02 c0       	rjmp	.+4      	; 0xe28 <vfprintf+0x364>
     e24:	8b e2       	ldi	r24, 0x2B	; 43
     e26:	01 c0       	rjmp	.+2      	; 0xe2a <vfprintf+0x366>
     e28:	80 e2       	ldi	r24, 0x20	; 32
     e2a:	a7 fc       	sbrc	r10, 7
     e2c:	8d e2       	ldi	r24, 0x2D	; 45
     e2e:	b6 01       	movw	r22, r12
     e30:	90 e0       	ldi	r25, 0x00	; 0
     e32:	0e 94 59 07 	call	0xeb2	; 0xeb2 <fputc>
     e36:	89 14       	cp	r8, r9
     e38:	38 f4       	brcc	.+14     	; 0xe48 <vfprintf+0x384>
     e3a:	b6 01       	movw	r22, r12
     e3c:	80 e3       	ldi	r24, 0x30	; 48
     e3e:	90 e0       	ldi	r25, 0x00	; 0
     e40:	0e 94 59 07 	call	0xeb2	; 0xeb2 <fputc>
     e44:	9a 94       	dec	r9
     e46:	f7 cf       	rjmp	.-18     	; 0xe36 <vfprintf+0x372>
     e48:	8a 94       	dec	r8
     e4a:	f3 01       	movw	r30, r6
     e4c:	e8 0d       	add	r30, r8
     e4e:	f1 1d       	adc	r31, r1
     e50:	80 81       	ld	r24, Z
     e52:	b6 01       	movw	r22, r12
     e54:	90 e0       	ldi	r25, 0x00	; 0
     e56:	0e 94 59 07 	call	0xeb2	; 0xeb2 <fputc>
     e5a:	81 10       	cpse	r8, r1
     e5c:	f5 cf       	rjmp	.-22     	; 0xe48 <vfprintf+0x384>
     e5e:	22 20       	and	r2, r2
     e60:	09 f4       	brne	.+2      	; 0xe64 <vfprintf+0x3a0>
     e62:	42 ce       	rjmp	.-892    	; 0xae8 <vfprintf+0x24>
     e64:	b6 01       	movw	r22, r12
     e66:	80 e2       	ldi	r24, 0x20	; 32
     e68:	90 e0       	ldi	r25, 0x00	; 0
     e6a:	0e 94 59 07 	call	0xeb2	; 0xeb2 <fputc>
     e6e:	2a 94       	dec	r2
     e70:	f6 cf       	rjmp	.-20     	; 0xe5e <vfprintf+0x39a>
     e72:	f6 01       	movw	r30, r12
     e74:	86 81       	ldd	r24, Z+6	; 0x06
     e76:	97 81       	ldd	r25, Z+7	; 0x07
     e78:	02 c0       	rjmp	.+4      	; 0xe7e <vfprintf+0x3ba>
     e7a:	8f ef       	ldi	r24, 0xFF	; 255
     e7c:	9f ef       	ldi	r25, 0xFF	; 255
     e7e:	2b 96       	adiw	r28, 0x0b	; 11
     e80:	e2 e1       	ldi	r30, 0x12	; 18
     e82:	0c 94 0f 08 	jmp	0x101e	; 0x101e <__epilogue_restores__>

00000e86 <strnlen_P>:
     e86:	fc 01       	movw	r30, r24
     e88:	05 90       	lpm	r0, Z+
     e8a:	61 50       	subi	r22, 0x01	; 1
     e8c:	70 40       	sbci	r23, 0x00	; 0
     e8e:	01 10       	cpse	r0, r1
     e90:	d8 f7       	brcc	.-10     	; 0xe88 <strnlen_P+0x2>
     e92:	80 95       	com	r24
     e94:	90 95       	com	r25
     e96:	8e 0f       	add	r24, r30
     e98:	9f 1f       	adc	r25, r31
     e9a:	08 95       	ret

00000e9c <strnlen>:
     e9c:	fc 01       	movw	r30, r24
     e9e:	61 50       	subi	r22, 0x01	; 1
     ea0:	70 40       	sbci	r23, 0x00	; 0
     ea2:	01 90       	ld	r0, Z+
     ea4:	01 10       	cpse	r0, r1
     ea6:	d8 f7       	brcc	.-10     	; 0xe9e <strnlen+0x2>
     ea8:	80 95       	com	r24
     eaa:	90 95       	com	r25
     eac:	8e 0f       	add	r24, r30
     eae:	9f 1f       	adc	r25, r31
     eb0:	08 95       	ret

00000eb2 <fputc>:
     eb2:	0f 93       	push	r16
     eb4:	1f 93       	push	r17
     eb6:	cf 93       	push	r28
     eb8:	df 93       	push	r29
     eba:	fb 01       	movw	r30, r22
     ebc:	23 81       	ldd	r18, Z+3	; 0x03
     ebe:	21 fd       	sbrc	r18, 1
     ec0:	03 c0       	rjmp	.+6      	; 0xec8 <fputc+0x16>
     ec2:	8f ef       	ldi	r24, 0xFF	; 255
     ec4:	9f ef       	ldi	r25, 0xFF	; 255
     ec6:	2c c0       	rjmp	.+88     	; 0xf20 <fputc+0x6e>
     ec8:	22 ff       	sbrs	r18, 2
     eca:	16 c0       	rjmp	.+44     	; 0xef8 <fputc+0x46>
     ecc:	46 81       	ldd	r20, Z+6	; 0x06
     ece:	57 81       	ldd	r21, Z+7	; 0x07
     ed0:	24 81       	ldd	r18, Z+4	; 0x04
     ed2:	35 81       	ldd	r19, Z+5	; 0x05
     ed4:	42 17       	cp	r20, r18
     ed6:	53 07       	cpc	r21, r19
     ed8:	44 f4       	brge	.+16     	; 0xeea <fputc+0x38>
     eda:	a0 81       	ld	r26, Z
     edc:	b1 81       	ldd	r27, Z+1	; 0x01
     ede:	9d 01       	movw	r18, r26
     ee0:	2f 5f       	subi	r18, 0xFF	; 255
     ee2:	3f 4f       	sbci	r19, 0xFF	; 255
     ee4:	31 83       	std	Z+1, r19	; 0x01
     ee6:	20 83       	st	Z, r18
     ee8:	8c 93       	st	X, r24
     eea:	26 81       	ldd	r18, Z+6	; 0x06
     eec:	37 81       	ldd	r19, Z+7	; 0x07
     eee:	2f 5f       	subi	r18, 0xFF	; 255
     ef0:	3f 4f       	sbci	r19, 0xFF	; 255
     ef2:	37 83       	std	Z+7, r19	; 0x07
     ef4:	26 83       	std	Z+6, r18	; 0x06
     ef6:	14 c0       	rjmp	.+40     	; 0xf20 <fputc+0x6e>
     ef8:	8b 01       	movw	r16, r22
     efa:	ec 01       	movw	r28, r24
     efc:	fb 01       	movw	r30, r22
     efe:	00 84       	ldd	r0, Z+8	; 0x08
     f00:	f1 85       	ldd	r31, Z+9	; 0x09
     f02:	e0 2d       	mov	r30, r0
     f04:	09 95       	icall
     f06:	89 2b       	or	r24, r25
     f08:	e1 f6       	brne	.-72     	; 0xec2 <fputc+0x10>
     f0a:	d8 01       	movw	r26, r16
     f0c:	16 96       	adiw	r26, 0x06	; 6
     f0e:	8d 91       	ld	r24, X+
     f10:	9c 91       	ld	r25, X
     f12:	17 97       	sbiw	r26, 0x07	; 7
     f14:	01 96       	adiw	r24, 0x01	; 1
     f16:	17 96       	adiw	r26, 0x07	; 7
     f18:	9c 93       	st	X, r25
     f1a:	8e 93       	st	-X, r24
     f1c:	16 97       	sbiw	r26, 0x06	; 6
     f1e:	ce 01       	movw	r24, r28
     f20:	df 91       	pop	r29
     f22:	cf 91       	pop	r28
     f24:	1f 91       	pop	r17
     f26:	0f 91       	pop	r16
     f28:	08 95       	ret

00000f2a <__ultoa_invert>:
     f2a:	fa 01       	movw	r30, r20
     f2c:	aa 27       	eor	r26, r26
     f2e:	28 30       	cpi	r18, 0x08	; 8
     f30:	51 f1       	breq	.+84     	; 0xf86 <__ultoa_invert+0x5c>
     f32:	20 31       	cpi	r18, 0x10	; 16
     f34:	81 f1       	breq	.+96     	; 0xf96 <__ultoa_invert+0x6c>
     f36:	e8 94       	clt
     f38:	6f 93       	push	r22
     f3a:	6e 7f       	andi	r22, 0xFE	; 254
     f3c:	6e 5f       	subi	r22, 0xFE	; 254
     f3e:	7f 4f       	sbci	r23, 0xFF	; 255
     f40:	8f 4f       	sbci	r24, 0xFF	; 255
     f42:	9f 4f       	sbci	r25, 0xFF	; 255
     f44:	af 4f       	sbci	r26, 0xFF	; 255
     f46:	b1 e0       	ldi	r27, 0x01	; 1
     f48:	3e d0       	rcall	.+124    	; 0xfc6 <__ultoa_invert+0x9c>
     f4a:	b4 e0       	ldi	r27, 0x04	; 4
     f4c:	3c d0       	rcall	.+120    	; 0xfc6 <__ultoa_invert+0x9c>
     f4e:	67 0f       	add	r22, r23
     f50:	78 1f       	adc	r23, r24
     f52:	89 1f       	adc	r24, r25
     f54:	9a 1f       	adc	r25, r26
     f56:	a1 1d       	adc	r26, r1
     f58:	68 0f       	add	r22, r24
     f5a:	79 1f       	adc	r23, r25
     f5c:	8a 1f       	adc	r24, r26
     f5e:	91 1d       	adc	r25, r1
     f60:	a1 1d       	adc	r26, r1
     f62:	6a 0f       	add	r22, r26
     f64:	71 1d       	adc	r23, r1
     f66:	81 1d       	adc	r24, r1
     f68:	91 1d       	adc	r25, r1
     f6a:	a1 1d       	adc	r26, r1
     f6c:	20 d0       	rcall	.+64     	; 0xfae <__ultoa_invert+0x84>
     f6e:	09 f4       	brne	.+2      	; 0xf72 <__ultoa_invert+0x48>
     f70:	68 94       	set
     f72:	3f 91       	pop	r19
     f74:	2a e0       	ldi	r18, 0x0A	; 10
     f76:	26 9f       	mul	r18, r22
     f78:	11 24       	eor	r1, r1
     f7a:	30 19       	sub	r19, r0
     f7c:	30 5d       	subi	r19, 0xD0	; 208
     f7e:	31 93       	st	Z+, r19
     f80:	de f6       	brtc	.-74     	; 0xf38 <__ultoa_invert+0xe>
     f82:	cf 01       	movw	r24, r30
     f84:	08 95       	ret
     f86:	46 2f       	mov	r20, r22
     f88:	47 70       	andi	r20, 0x07	; 7
     f8a:	40 5d       	subi	r20, 0xD0	; 208
     f8c:	41 93       	st	Z+, r20
     f8e:	b3 e0       	ldi	r27, 0x03	; 3
     f90:	0f d0       	rcall	.+30     	; 0xfb0 <__ultoa_invert+0x86>
     f92:	c9 f7       	brne	.-14     	; 0xf86 <__ultoa_invert+0x5c>
     f94:	f6 cf       	rjmp	.-20     	; 0xf82 <__ultoa_invert+0x58>
     f96:	46 2f       	mov	r20, r22
     f98:	4f 70       	andi	r20, 0x0F	; 15
     f9a:	40 5d       	subi	r20, 0xD0	; 208
     f9c:	4a 33       	cpi	r20, 0x3A	; 58
     f9e:	18 f0       	brcs	.+6      	; 0xfa6 <__ultoa_invert+0x7c>
     fa0:	49 5d       	subi	r20, 0xD9	; 217
     fa2:	31 fd       	sbrc	r19, 1
     fa4:	40 52       	subi	r20, 0x20	; 32
     fa6:	41 93       	st	Z+, r20
     fa8:	02 d0       	rcall	.+4      	; 0xfae <__ultoa_invert+0x84>
     faa:	a9 f7       	brne	.-22     	; 0xf96 <__ultoa_invert+0x6c>
     fac:	ea cf       	rjmp	.-44     	; 0xf82 <__ultoa_invert+0x58>
     fae:	b4 e0       	ldi	r27, 0x04	; 4
     fb0:	a6 95       	lsr	r26
     fb2:	97 95       	ror	r25
     fb4:	87 95       	ror	r24
     fb6:	77 95       	ror	r23
     fb8:	67 95       	ror	r22
     fba:	ba 95       	dec	r27
     fbc:	c9 f7       	brne	.-14     	; 0xfb0 <__ultoa_invert+0x86>
     fbe:	00 97       	sbiw	r24, 0x00	; 0
     fc0:	61 05       	cpc	r22, r1
     fc2:	71 05       	cpc	r23, r1
     fc4:	08 95       	ret
     fc6:	9b 01       	movw	r18, r22
     fc8:	ac 01       	movw	r20, r24
     fca:	0a 2e       	mov	r0, r26
     fcc:	06 94       	lsr	r0
     fce:	57 95       	ror	r21
     fd0:	47 95       	ror	r20
     fd2:	37 95       	ror	r19
     fd4:	27 95       	ror	r18
     fd6:	ba 95       	dec	r27
     fd8:	c9 f7       	brne	.-14     	; 0xfcc <__ultoa_invert+0xa2>
     fda:	62 0f       	add	r22, r18
     fdc:	73 1f       	adc	r23, r19
     fde:	84 1f       	adc	r24, r20
     fe0:	95 1f       	adc	r25, r21
     fe2:	a0 1d       	adc	r26, r0
     fe4:	08 95       	ret

00000fe6 <__prologue_saves__>:
     fe6:	2f 92       	push	r2
     fe8:	3f 92       	push	r3
     fea:	4f 92       	push	r4
     fec:	5f 92       	push	r5
     fee:	6f 92       	push	r6
     ff0:	7f 92       	push	r7
     ff2:	8f 92       	push	r8
     ff4:	9f 92       	push	r9
     ff6:	af 92       	push	r10
     ff8:	bf 92       	push	r11
     ffa:	cf 92       	push	r12
     ffc:	df 92       	push	r13
     ffe:	ef 92       	push	r14
    1000:	ff 92       	push	r15
    1002:	0f 93       	push	r16
    1004:	1f 93       	push	r17
    1006:	cf 93       	push	r28
    1008:	df 93       	push	r29
    100a:	cd b7       	in	r28, 0x3d	; 61
    100c:	de b7       	in	r29, 0x3e	; 62
    100e:	ca 1b       	sub	r28, r26
    1010:	db 0b       	sbc	r29, r27
    1012:	0f b6       	in	r0, 0x3f	; 63
    1014:	f8 94       	cli
    1016:	de bf       	out	0x3e, r29	; 62
    1018:	0f be       	out	0x3f, r0	; 63
    101a:	cd bf       	out	0x3d, r28	; 61
    101c:	09 94       	ijmp

0000101e <__epilogue_restores__>:
    101e:	2a 88       	ldd	r2, Y+18	; 0x12
    1020:	39 88       	ldd	r3, Y+17	; 0x11
    1022:	48 88       	ldd	r4, Y+16	; 0x10
    1024:	5f 84       	ldd	r5, Y+15	; 0x0f
    1026:	6e 84       	ldd	r6, Y+14	; 0x0e
    1028:	7d 84       	ldd	r7, Y+13	; 0x0d
    102a:	8c 84       	ldd	r8, Y+12	; 0x0c
    102c:	9b 84       	ldd	r9, Y+11	; 0x0b
    102e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1030:	b9 84       	ldd	r11, Y+9	; 0x09
    1032:	c8 84       	ldd	r12, Y+8	; 0x08
    1034:	df 80       	ldd	r13, Y+7	; 0x07
    1036:	ee 80       	ldd	r14, Y+6	; 0x06
    1038:	fd 80       	ldd	r15, Y+5	; 0x05
    103a:	0c 81       	ldd	r16, Y+4	; 0x04
    103c:	1b 81       	ldd	r17, Y+3	; 0x03
    103e:	aa 81       	ldd	r26, Y+2	; 0x02
    1040:	b9 81       	ldd	r27, Y+1	; 0x01
    1042:	ce 0f       	add	r28, r30
    1044:	d1 1d       	adc	r29, r1
    1046:	0f b6       	in	r0, 0x3f	; 63
    1048:	f8 94       	cli
    104a:	de bf       	out	0x3e, r29	; 62
    104c:	0f be       	out	0x3f, r0	; 63
    104e:	cd bf       	out	0x3d, r28	; 61
    1050:	ed 01       	movw	r28, r26
    1052:	08 95       	ret

00001054 <_exit>:
    1054:	f8 94       	cli

00001056 <__stop_program>:
    1056:	ff cf       	rjmp	.-2      	; 0x1056 <__stop_program>
