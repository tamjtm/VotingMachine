
Voting(UART).elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  000001aa  0000021e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001aa  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000022a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000025c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000060  00000000  00000000  0000029c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000bc0  00000000  00000000  000002fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000079e  00000000  00000000  00000ebc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000445  00000000  00000000  0000165a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000b0  00000000  00000000  00001aa0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000410  00000000  00000000  00001b50  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000494  00000000  00000000  00001f60  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000050  00000000  00000000  000023f4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ea ea       	ldi	r30, 0xAA	; 170
  7c:	f1 e0       	ldi	r31, 0x01	; 1
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 30       	cpi	r26, 0x0C	; 12
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 cc 00 	call	0x198	; 0x198 <main>
  8e:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <LCD_Command>:
{
	//DDRC = 0b00000011;
	
	//keypad_Init();
	//USART_Init(6);
	LCD_Init();
  96:	9b b1       	in	r25, 0x0b	; 11
  98:	9f 70       	andi	r25, 0x0F	; 15
  9a:	28 2f       	mov	r18, r24
  9c:	20 7f       	andi	r18, 0xF0	; 240
  9e:	92 2b       	or	r25, r18
  a0:	9b b9       	out	0x0b, r25	; 11
  a2:	5a 98       	cbi	0x0b, 2	; 11
  a4:	5b 9a       	sbi	0x0b, 3	; 11
  a6:	32 e0       	ldi	r19, 0x02	; 2
  a8:	3a 95       	dec	r19
  aa:	f1 f7       	brne	.-4      	; 0xa8 <LCD_Command+0x12>
  ac:	00 c0       	rjmp	.+0      	; 0xae <LCD_Command+0x18>
  ae:	5b 98       	cbi	0x0b, 3	; 11
  b0:	e7 ec       	ldi	r30, 0xC7	; 199
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	31 97       	sbiw	r30, 0x01	; 1
  b6:	f1 f7       	brne	.-4      	; 0xb4 <LCD_Command+0x1e>
  b8:	00 c0       	rjmp	.+0      	; 0xba <LCD_Command+0x24>
  ba:	00 00       	nop
  bc:	2b b1       	in	r18, 0x0b	; 11
  be:	2f 70       	andi	r18, 0x0F	; 15
  c0:	f0 e1       	ldi	r31, 0x10	; 16
  c2:	8f 9f       	mul	r24, r31
  c4:	c0 01       	movw	r24, r0
  c6:	11 24       	eor	r1, r1
  c8:	82 2b       	or	r24, r18
  ca:	8b b9       	out	0x0b, r24	; 11
  cc:	5b 9a       	sbi	0x0b, 3	; 11
  ce:	32 e0       	ldi	r19, 0x02	; 2
  d0:	3a 95       	dec	r19
  d2:	f1 f7       	brne	.-4      	; 0xd0 <LCD_Command+0x3a>
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <LCD_Command+0x40>
  d6:	5b 98       	cbi	0x0b, 3	; 11
  d8:	8f ec       	ldi	r24, 0xCF	; 207
  da:	97 e0       	ldi	r25, 0x07	; 7
  dc:	01 97       	sbiw	r24, 0x01	; 1
  de:	f1 f7       	brne	.-4      	; 0xdc <LCD_Command+0x46>
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <LCD_Command+0x4c>
  e2:	00 00       	nop
  e4:	08 95       	ret

000000e6 <LCD_Data>:
  e6:	9b b1       	in	r25, 0x0b	; 11
  e8:	9f 70       	andi	r25, 0x0F	; 15
  ea:	28 2f       	mov	r18, r24
  ec:	20 7f       	andi	r18, 0xF0	; 240
  ee:	92 2b       	or	r25, r18
  f0:	9b b9       	out	0x0b, r25	; 11
  f2:	5a 9a       	sbi	0x0b, 2	; 11
  f4:	5b 9a       	sbi	0x0b, 3	; 11
  f6:	e7 ec       	ldi	r30, 0xC7	; 199
  f8:	f0 e0       	ldi	r31, 0x00	; 0
  fa:	31 97       	sbiw	r30, 0x01	; 1
  fc:	f1 f7       	brne	.-4      	; 0xfa <LCD_Data+0x14>
  fe:	00 c0       	rjmp	.+0      	; 0x100 <LCD_Data+0x1a>
 100:	00 00       	nop
 102:	5b 98       	cbi	0x0b, 3	; 11
 104:	e7 ec       	ldi	r30, 0xC7	; 199
 106:	f0 e0       	ldi	r31, 0x00	; 0
 108:	31 97       	sbiw	r30, 0x01	; 1
 10a:	f1 f7       	brne	.-4      	; 0x108 <LCD_Data+0x22>
 10c:	00 c0       	rjmp	.+0      	; 0x10e <LCD_Data+0x28>
 10e:	00 00       	nop
 110:	2b b1       	in	r18, 0x0b	; 11
 112:	2f 70       	andi	r18, 0x0F	; 15
 114:	f0 e1       	ldi	r31, 0x10	; 16
 116:	8f 9f       	mul	r24, r31
 118:	c0 01       	movw	r24, r0
 11a:	11 24       	eor	r1, r1
 11c:	82 2b       	or	r24, r18
 11e:	8b b9       	out	0x0b, r24	; 11
 120:	5b 9a       	sbi	0x0b, 3	; 11
 122:	87 ec       	ldi	r24, 0xC7	; 199
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	01 97       	sbiw	r24, 0x01	; 1
 128:	f1 f7       	brne	.-4      	; 0x126 <LCD_Data+0x40>
 12a:	00 c0       	rjmp	.+0      	; 0x12c <LCD_Data+0x46>
 12c:	00 00       	nop
 12e:	5b 98       	cbi	0x0b, 3	; 11
 130:	ef ec       	ldi	r30, 0xCF	; 207
 132:	f7 e0       	ldi	r31, 0x07	; 7
 134:	31 97       	sbiw	r30, 0x01	; 1
 136:	f1 f7       	brne	.-4      	; 0x134 <LCD_Data+0x4e>
 138:	00 c0       	rjmp	.+0      	; 0x13a <LCD_Data+0x54>
 13a:	00 00       	nop
 13c:	08 95       	ret

0000013e <LCD_Init>:
 13e:	8f ef       	ldi	r24, 0xFF	; 255
 140:	8a b9       	out	0x0a, r24	; 10
 142:	8f e3       	ldi	r24, 0x3F	; 63
 144:	9c e9       	ldi	r25, 0x9C	; 156
 146:	01 97       	sbiw	r24, 0x01	; 1
 148:	f1 f7       	brne	.-4      	; 0x146 <LCD_Init+0x8>
 14a:	00 c0       	rjmp	.+0      	; 0x14c <LCD_Init+0xe>
 14c:	00 00       	nop
 14e:	82 e0       	ldi	r24, 0x02	; 2
 150:	0e 94 4b 00 	call	0x96	; 0x96 <LCD_Command>
 154:	88 e2       	ldi	r24, 0x28	; 40
 156:	0e 94 4b 00 	call	0x96	; 0x96 <LCD_Command>
 15a:	8c e0       	ldi	r24, 0x0C	; 12
 15c:	0e 94 4b 00 	call	0x96	; 0x96 <LCD_Command>
 160:	86 e0       	ldi	r24, 0x06	; 6
 162:	0e 94 4b 00 	call	0x96	; 0x96 <LCD_Command>
 166:	81 e0       	ldi	r24, 0x01	; 1
 168:	0e 94 4b 00 	call	0x96	; 0x96 <LCD_Command>
 16c:	8f ec       	ldi	r24, 0xCF	; 207
 16e:	97 e0       	ldi	r25, 0x07	; 7
 170:	01 97       	sbiw	r24, 0x01	; 1
 172:	f1 f7       	brne	.-4      	; 0x170 <LCD_Init+0x32>
 174:	00 c0       	rjmp	.+0      	; 0x176 <LCD_Init+0x38>
 176:	00 00       	nop
 178:	08 95       	ret

0000017a <LCD_String>:
 17a:	cf 93       	push	r28
 17c:	df 93       	push	r29
 17e:	ec 01       	movw	r28, r24
 180:	88 81       	ld	r24, Y
 182:	88 23       	and	r24, r24
 184:	31 f0       	breq	.+12     	; 0x192 <LCD_String+0x18>
 186:	21 96       	adiw	r28, 0x01	; 1
 188:	0e 94 73 00 	call	0xe6	; 0xe6 <LCD_Data>
 18c:	89 91       	ld	r24, Y+
 18e:	81 11       	cpse	r24, r1
 190:	fb cf       	rjmp	.-10     	; 0x188 <LCD_String+0xe>
 192:	df 91       	pop	r29
 194:	cf 91       	pop	r28
 196:	08 95       	ret

00000198 <main>:
 198:	0e 94 9f 00 	call	0x13e	; 0x13e <LCD_Init>
		vote[i] = 0;
	}
		*/
	Initialize();
	
	LCD_String ("RFID NUMBER"); 	//sending string
 19c:	80 e0       	ldi	r24, 0x00	; 0
 19e:	91 e0       	ldi	r25, 0x01	; 1
 1a0:	0e 94 bd 00 	call	0x17a	; 0x17a <LCD_String>
 1a4:	ff cf       	rjmp	.-2      	; 0x1a4 <main+0xc>

000001a6 <_exit>:
 1a6:	f8 94       	cli

000001a8 <__stop_program>:
 1a8:	ff cf       	rjmp	.-2      	; 0x1a8 <__stop_program>
